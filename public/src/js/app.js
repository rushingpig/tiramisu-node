/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "http://localhost:3000/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _containersApp = __webpack_require__(155);

	var _containersApp2 = _interopRequireDefault(_containersApp);

	var _reactRedux = __webpack_require__(216);

	var _storesConfigureStore = __webpack_require__(348);

	var _storesConfigureStore2 = _interopRequireDefault(_storesConfigureStore);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _reduxSimpleRouter = __webpack_require__(355);

	(0, _reduxSimpleRouter.syncReduxAndRouter)(_history_instance2['default'], _storesConfigureStore2['default']);

	(0, _reactDom.render)(_react2['default'].createElement(
	  _reactRedux.Provider,
	  { store: _storesConfigureStore2['default'] },
	  _react2['default'].createElement(_containersApp2['default'], null)
	), document.getElementById('app'));

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(3);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var ReactDOM = __webpack_require__(4);
	var ReactDOMServer = __webpack_require__(144);
	var ReactIsomorphic = __webpack_require__(148);

	var assign = __webpack_require__(39);
	var deprecated = __webpack_require__(153);

	// `version` will be added here by ReactIsomorphic.
	var React = {};

	assign(React, ReactIsomorphic);

	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),

	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});

	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;

	module.exports = React;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactDOMTextComponent = __webpack_require__(6);
	var ReactDefaultInjection = __webpack_require__(71);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMount = __webpack_require__(28);
	var ReactPerf = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(50);
	var ReactUpdates = __webpack_require__(54);
	var ReactVersion = __webpack_require__(142);

	var findDOMNode = __webpack_require__(91);
	var renderSubtreeIntoContainer = __webpack_require__(143);
	var warning = __webpack_require__(25);

	ReactDefaultInjection.inject();

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,

	    // shams
	    Object.create, Object.freeze];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}

	module.exports = React;

/***/ },
/* 5 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(7);
	var DOMPropertyOperations = __webpack_require__(22);
	var ReactComponentBrowserEnvironment = __webpack_require__(26);
	var ReactMount = __webpack_require__(28);

	var assign = __webpack_require__(39);
	var escapeTextContentForBrowser = __webpack_require__(21);
	var setTextContent = __webpack_require__(20);
	var validateDOMNesting = __webpack_require__(70);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (false) {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },

	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(8);
	var ReactMultiChildUpdateTypes = __webpack_require__(16);
	var ReactPerf = __webpack_require__(18);

	var setInnerHTML = __webpack_require__(19);
	var setTextContent = __webpack_require__(20);
	var invariant = __webpack_require__(13);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.

	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);

	  parentNode.insertBefore(childNode, beforeChild);
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        !updatedChild ?  false ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});

	module.exports = DOMChildrenOperations;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var createNodesFromMarkup = __webpack_require__(10);
	var emptyFunction = __webpack_require__(15);
	var getMarkupWrap = __webpack_require__(14);
	var invariant = __webpack_require__(13);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ?  false ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          !!resultList.hasOwnProperty(resultIndex) ?  false ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (false) {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ?  false ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;

	    !(resultList.length === markupList.length) ?  false ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;

	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var createArrayFromMixed = __webpack_require__(11);
	var getMarkupWrap = __webpack_require__(14);
	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	'use strict';

	var toArray = __webpack_require__(12);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;

	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;

	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function (condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error('Invariant Violation: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	/*eslint-disable fb-www/unsafe-html */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	"use strict";

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(17);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (false) {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (false) {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);
	var escapeTextContentForBrowser = __webpack_require__(21);
	var setInnerHTML = __webpack_require__(19);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ReactPerf = __webpack_require__(18);

	var quoteAttributeValueForBrowser = __webpack_require__(24);
	var warning = __webpack_require__(25);

	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	if (false) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (false) {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (false) {
	      warnUnknownProperty(name);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (false) {
	      warnUnknownProperty(name);
	    }
	  }

	};

	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});

	module.exports = DOMPropertyOperations;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ?  false ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ?  false ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(21);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	'use strict';

	var emptyFunction = __webpack_require__(15);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(27);
	var ReactMount = __webpack_require__(28);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(7);
	var DOMPropertyOperations = __webpack_require__(22);
	var ReactMount = __webpack_require__(28);
	var ReactPerf = __webpack_require__(18);

	var invariant = __webpack_require__(13);

	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ?  false ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactCurrentOwner = __webpack_require__(5);
	var ReactDOMFeatureFlags = __webpack_require__(41);
	var ReactElement = __webpack_require__(42);
	var ReactEmptyComponentRegistry = __webpack_require__(44);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactMarkupChecksum = __webpack_require__(48);
	var ReactPerf = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(50);
	var ReactUpdateQueue = __webpack_require__(53);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var emptyObject = __webpack_require__(58);
	var containsNode = __webpack_require__(59);
	var instantiateReactComponent = __webpack_require__(62);
	var invariant = __webpack_require__(13);
	var setInnerHTML = __webpack_require__(19);
	var shouldUpdateReactComponent = __webpack_require__(67);
	var validateDOMNesting = __webpack_require__(70);
	var warning = __webpack_require__(25);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if (false) {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ?  false ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ?  false ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (false) {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}

	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);

	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if (false) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

	    if (false) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }

	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (false) {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if (false) {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    if (false) {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	     true ?  false ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },

	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },

	  ownerDocumentContextKey: ownerDocumentContextKey,

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  isValid: isValid,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPluginHub = __webpack_require__(31);
	var EventPluginRegistry = __webpack_require__(32);
	var ReactEventEmitterMixin = __webpack_require__(37);
	var ReactPerf = __webpack_require__(18);
	var ViewportMetrics = __webpack_require__(38);

	var assign = __webpack_require__(39);
	var isEventSupported = __webpack_require__(40);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(17);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(32);
	var EventPluginUtils = __webpack_require__(33);
	var ReactErrorUtils = __webpack_require__(34);

	var accumulateInto = __webpack_require__(35);
	var forEachAccumulated = __webpack_require__(36);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	   false ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (false) {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function () {
	      if (false) {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }

	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var ReactErrorUtils = __webpack_require__(34);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ },
/* 36 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(31);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 39 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 41 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);

	var assign = __webpack_require__(39);
	var canDefineProperty = __webpack_require__(43);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }

	  return element;
	};

	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

	  if (false) {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }

	  return newElement;
	};

	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (false) {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ },
/* 44 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */

	'use strict';

	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};

	module.exports = ReactEmptyComponentRegistry;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(46);

	var invariant = __webpack_require__(13);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ?  false ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ?  false ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ?  false ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ?  false ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ?  false ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ?  false ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;

/***/ },
/* 47 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(49);

	var TAG_END = /\/?>/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(51);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(52);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ?  false ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ?  false ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },

	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ?  false ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },

	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ?  false ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(55);
	var PooledClass = __webpack_require__(56);
	var ReactPerf = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(50);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}

	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	'use strict';

	var isTextNode = __webpack_require__(60);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;

	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;

	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}

	module.exports = containsNode;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	'use strict';

	var isNode = __webpack_require__(61);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(63);
	var ReactEmptyComponent = __webpack_require__(68);
	var ReactNativeComponent = __webpack_require__(69);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;

	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (false) {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(64);
	var ReactCurrentOwner = __webpack_require__(5);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactPerf = __webpack_require__(18);
	var ReactPropTypeLocations = __webpack_require__(65);
	var ReactPropTypeLocationNames = __webpack_require__(66);
	var ReactReconciler = __webpack_require__(50);
	var ReactUpdateQueue = __webpack_require__(53);

	var assign = __webpack_require__(39);
	var emptyObject = __webpack_require__(58);
	var invariant = __webpack_require__(13);
	var shouldUpdateReactComponent = __webpack_require__(67);
	var warning = __webpack_require__(25);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    // Initialize the public class
	    var inst;
	    var renderedElement;

	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);

	    if (canInstantiate) {
	      if (false) {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }

	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }

	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    this._renderedComponent = this._instantiateReactComponent(renderedElement);

	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (false) {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	             false ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	             false ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;

	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(17);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 67 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactEmptyComponentRegistry = __webpack_require__(44);
	var ReactReconciler = __webpack_require__(50);

	var assign = __webpack_require__(39);

	var placeholderElement;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};

	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    ReactEmptyComponentRegistry.registerNullComponentID(rootID);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);
	var warning = __webpack_require__(25);

	var validateDOMNesting = emptyFunction;

	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    parentTag: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.parentTag = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };

	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(72);
	var ChangeEventPlugin = __webpack_require__(80);
	var ClientReactRootIndex = __webpack_require__(83);
	var DefaultEventPluginOrder = __webpack_require__(84);
	var EnterLeaveEventPlugin = __webpack_require__(85);
	var ExecutionEnvironment = __webpack_require__(9);
	var HTMLDOMPropertyConfig = __webpack_require__(89);
	var ReactBrowserComponentMixin = __webpack_require__(90);
	var ReactComponentBrowserEnvironment = __webpack_require__(26);
	var ReactDefaultBatchingStrategy = __webpack_require__(92);
	var ReactDOMComponent = __webpack_require__(93);
	var ReactDOMTextComponent = __webpack_require__(6);
	var ReactEventListener = __webpack_require__(118);
	var ReactInjection = __webpack_require__(121);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMount = __webpack_require__(28);
	var ReactReconcileTransaction = __webpack_require__(125);
	var SelectEventPlugin = __webpack_require__(130);
	var ServerReactRootIndex = __webpack_require__(131);
	var SimpleEventPlugin = __webpack_require__(132);
	var SVGDOMPropertyConfig = __webpack_require__(141);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

	  if (false) {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = require('./ReactDefaultPerf');
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPropagators = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(9);
	var FallbackCompositionState = __webpack_require__(74);
	var SyntheticCompositionEvent = __webpack_require__(76);
	var SyntheticInputEvent = __webpack_require__(78);

	var keyOf = __webpack_require__(79);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPluginHub = __webpack_require__(31);

	var warning = __webpack_require__(25);

	var accumulateInto = __webpack_require__(35);
	var forEachAccumulated = __webpack_require__(36);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);

	var assign = __webpack_require__(39);
	var getTextContentAccessor = __webpack_require__(75);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);
	var warning = __webpack_require__(25);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	  this.target = nativeEventTarget;
	  this.currentTarget = nativeEventTarget;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";

	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPluginHub = __webpack_require__(31);
	var EventPropagators = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(9);
	var ReactUpdates = __webpack_require__(54);
	var SyntheticEvent = __webpack_require__(77);

	var getEventTarget = __webpack_require__(81);
	var isEventSupported = __webpack_require__(40);
	var isTextInputElement = __webpack_require__(82);
	var keyOf = __webpack_require__(79);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 81 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}

	module.exports = isTextInputElement;

/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(79);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPropagators = __webpack_require__(73);
	var SyntheticMouseEvent = __webpack_require__(86);

	var ReactMount = __webpack_require__(28);
	var keyOf = __webpack_require__(79);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);
	var ViewportMetrics = __webpack_require__(38);

	var getEventModifierState = __webpack_require__(88);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	var getEventTarget = __webpack_require__(81);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 88 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ExecutionEnvironment = __webpack_require__(9);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,

	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: null,
	    autoCorrect: null,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoCapitalize: 'autocapitalize',
	    autoComplete: 'autocomplete',
	    autoCorrect: 'autocorrect',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var ReactInstanceMap = __webpack_require__(47);

	var findDOMNode = __webpack_require__(91);
	var warning = __webpack_require__(25);

	var didWarnKey = '_getDOMNodeDidWarn';

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	     false ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactMount = __webpack_require__(28);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}

	module.exports = findDOMNode;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(54);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var AutoFocusUtils = __webpack_require__(94);
	var CSSPropertyOperations = __webpack_require__(96);
	var DOMProperty = __webpack_require__(23);
	var DOMPropertyOperations = __webpack_require__(22);
	var EventConstants = __webpack_require__(30);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactComponentBrowserEnvironment = __webpack_require__(26);
	var ReactDOMButton = __webpack_require__(104);
	var ReactDOMInput = __webpack_require__(105);
	var ReactDOMOption = __webpack_require__(109);
	var ReactDOMSelect = __webpack_require__(112);
	var ReactDOMTextarea = __webpack_require__(113);
	var ReactMount = __webpack_require__(28);
	var ReactMultiChild = __webpack_require__(114);
	var ReactPerf = __webpack_require__(18);
	var ReactUpdateQueue = __webpack_require__(53);

	var assign = __webpack_require__(39);
	var canDefineProperty = __webpack_require__(43);
	var escapeTextContentForBrowser = __webpack_require__(21);
	var invariant = __webpack_require__(13);
	var isEventSupported = __webpack_require__(40);
	var keyOf = __webpack_require__(79);
	var setInnerHTML = __webpack_require__(19);
	var setTextContent = __webpack_require__(20);
	var shallowEqual = __webpack_require__(117);
	var validateDOMNesting = __webpack_require__(70);
	var warning = __webpack_require__(25);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });

	var ELEMENT_NODE_TYPE = 1;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	var legacyPropsDescriptor;
	if (false) {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}

	function legacyGetDOMNode() {
	  if (false) {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}

	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}

	function legacySetStateEtc() {
	  if (false) {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}

	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (false) {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}

	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;

	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }

	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}

	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}

	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (false) {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function (element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }

	    assertValidProps(this, props);
	    if (false) {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    if (false) {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }

	    if (false) {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }

	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },

	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);

	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;

	      if (false) {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }

	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactMount = __webpack_require__(28);

	var findDOMNode = __webpack_require__(91);
	var focusNode = __webpack_require__(95);

	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};

	var AutoFocusUtils = {
	  Mixin: Mixin,

	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 95 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(97);
	var ExecutionEnvironment = __webpack_require__(9);
	var ReactPerf = __webpack_require__(18);

	var camelizeStyleName = __webpack_require__(98);
	var dangerousStyleValue = __webpack_require__(100);
	var hyphenateStyleName = __webpack_require__(101);
	var memoizeStringOnly = __webpack_require__(103);
	var warning = __webpack_require__(25);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };

	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };

	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});

	module.exports = CSSPropertyOperations;

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(99);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 99 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	"use strict";

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(97);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(102);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 102 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	'use strict';

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 104 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }

	    return nativeProps;
	  }
	};

	module.exports = ReactDOMButton;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(27);
	var LinkedValueUtils = __webpack_require__(106);
	var ReactMount = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },

	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(107);
	var ReactPropTypeLocations = __webpack_require__(65);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactPropTypeLocationNames = __webpack_require__(66);

	var emptyFunction = __webpack_require__(15);
	var getIteratorFn = __webpack_require__(108);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 108 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactChildren = __webpack_require__(110);
	var ReactDOMSelect = __webpack_require__(112);

	var assign = __webpack_require__(39);
	var warning = __webpack_require__(25);

	var valueContextKey = ReactDOMSelect.valueContextKey;

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }

	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];

	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }

	    var content = '';

	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	         false ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });

	    nativeProps.children = content;
	    return nativeProps;
	  }

	};

	module.exports = ReactDOMOption;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);
	var ReactElement = __webpack_require__(42);

	var emptyFunction = __webpack_require__(15);
	var traverseAllChildren = __webpack_require__(111);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceHandles = __webpack_require__(45);

	var getIteratorFn = __webpack_require__(108);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(106);
	var ReactMount = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var warning = __webpack_require__(25);

	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, props, value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	       false ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	       false ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,

	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },

	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(106);
	var ReactDOMIDOperations = __webpack_require__(27);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);

	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(64);
	var ReactMultiChildUpdateTypes = __webpack_require__(16);

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactReconciler = __webpack_require__(50);
	var ReactChildReconciler = __webpack_require__(115);

	var flattenChildren = __webpack_require__(116);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (false) {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(50);

	var instantiateReactComponent = __webpack_require__(62);
	var shouldUpdateReactComponent = __webpack_require__(67);
	var traverseAllChildren = __webpack_require__(111);
	var warning = __webpack_require__(25);

	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(111);
	var warning = __webpack_require__(25);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;

/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(119);
	var ExecutionEnvironment = __webpack_require__(9);
	var PooledClass = __webpack_require__(56);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMount = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var getEventTarget = __webpack_require__(81);
	var getUnboundedScrollPosition = __webpack_require__(120);

	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }

	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}

	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);

	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);

	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	'use strict';

	var emptyFunction = __webpack_require__(15);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function () {}
	};

	module.exports = EventListener;

/***/ },
/* 120 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var EventPluginHub = __webpack_require__(31);
	var ReactComponentEnvironment = __webpack_require__(64);
	var ReactClass = __webpack_require__(122);
	var ReactEmptyComponent = __webpack_require__(68);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactNativeComponent = __webpack_require__(69);
	var ReactPerf = __webpack_require__(18);
	var ReactRootIndex = __webpack_require__(46);
	var ReactUpdates = __webpack_require__(54);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(123);
	var ReactElement = __webpack_require__(42);
	var ReactPropTypeLocations = __webpack_require__(65);
	var ReactPropTypeLocationNames = __webpack_require__(66);
	var ReactNoopUpdateQueue = __webpack_require__(124);

	var assign = __webpack_require__(39);
	var emptyObject = __webpack_require__(58);
	var invariant = __webpack_require__(13);
	var keyMirror = __webpack_require__(17);
	var keyOf = __webpack_require__(79);
	var warning = __webpack_require__(25);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	     false ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;

	    var isInherited = (name in Constructor);
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (false) {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (false) {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactNoopUpdateQueue = __webpack_require__(124);

	var canDefineProperty = __webpack_require__(43);
	var emptyObject = __webpack_require__(58);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(25);

	function warnTDZ(publicInstance, callerName) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }

	};

	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(55);
	var PooledClass = __webpack_require__(56);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactDOMFeatureFlags = __webpack_require__(41);
	var ReactInputSelection = __webpack_require__(126);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(127);

	var containsNode = __webpack_require__(59);
	var focusNode = __webpack_require__(95);
	var getActiveElement = __webpack_require__(129);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var getNodeForCharacterOffset = __webpack_require__(128);
	var getTextContentAccessor = __webpack_require__(75);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 128 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 129 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not yet defined.
	 */
	'use strict';

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }

	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPropagators = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(9);
	var ReactInputSelection = __webpack_require__(126);
	var SyntheticEvent = __webpack_require__(77);

	var getActiveElement = __webpack_require__(129);
	var isTextInputElement = __webpack_require__(82);
	var keyOf = __webpack_require__(79);
	var shallowEqual = __webpack_require__(117);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventListener = __webpack_require__(119);
	var EventPropagators = __webpack_require__(73);
	var ReactMount = __webpack_require__(28);
	var SyntheticClipboardEvent = __webpack_require__(133);
	var SyntheticEvent = __webpack_require__(77);
	var SyntheticFocusEvent = __webpack_require__(134);
	var SyntheticKeyboardEvent = __webpack_require__(135);
	var SyntheticMouseEvent = __webpack_require__(86);
	var SyntheticDragEvent = __webpack_require__(138);
	var SyntheticTouchEvent = __webpack_require__(139);
	var SyntheticUIEvent = __webpack_require__(87);
	var SyntheticWheelEvent = __webpack_require__(140);

	var emptyFunction = __webpack_require__(15);
	var getEventCharCode = __webpack_require__(136);
	var invariant = __webpack_require__(13);
	var keyOf = __webpack_require__(79);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);

	var getEventCharCode = __webpack_require__(136);
	var getEventKey = __webpack_require__(137);
	var getEventModifierState = __webpack_require__(88);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(136);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(86);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);

	var getEventModifierState = __webpack_require__(88);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(86);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '0.14.3';

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(28);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(71);
	var ReactServerRendering = __webpack_require__(145);
	var ReactVersion = __webpack_require__(142);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactDefaultBatchingStrategy = __webpack_require__(92);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMarkupChecksum = __webpack_require__(48);
	var ReactServerBatchingStrategy = __webpack_require__(146);
	var ReactServerRenderingTransaction = __webpack_require__(147);
	var ReactUpdates = __webpack_require__(54);

	var emptyObject = __webpack_require__(58);
	var instantiateReactComponent = __webpack_require__(62);
	var invariant = __webpack_require__(13);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

/***/ },
/* 146 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);
	var CallbackQueue = __webpack_require__(55);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */

	'use strict';

	var ReactChildren = __webpack_require__(110);
	var ReactComponent = __webpack_require__(123);
	var ReactClass = __webpack_require__(122);
	var ReactDOMFactories = __webpack_require__(149);
	var ReactElement = __webpack_require__(42);
	var ReactElementValidator = __webpack_require__(150);
	var ReactPropTypes = __webpack_require__(107);
	var ReactVersion = __webpack_require__(142);

	var assign = __webpack_require__(39);
	var onlyChild = __webpack_require__(152);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (false) {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	module.exports = React;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactElementValidator = __webpack_require__(150);

	var mapObject = __webpack_require__(151);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (false) {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactPropTypeLocations = __webpack_require__(65);
	var ReactPropTypeLocationNames = __webpack_require__(66);
	var ReactCurrentOwner = __webpack_require__(5);

	var canDefineProperty = __webpack_require__(43);
	var getIteratorFn = __webpack_require__(108);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	   false ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }

	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;

	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  return addenda;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum();
	         false ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	     false ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	     false ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (false) {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;

/***/ },
/* 151 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(42);

	var invariant = __webpack_require__(13);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}

	module.exports = onlyChild;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */

	'use strict';

	var assign = __webpack_require__(39);
	var warning = __webpack_require__(25);

	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (false) {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }

	  return fn;
	}

	module.exports = deprecated;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(4);


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _componentsBody = __webpack_require__(156);

	var _componentsOrderManage = __webpack_require__(241);

	var _componentsOrderManage2 = _interopRequireDefault(_componentsOrderManage);

	var _componentsOrderManage_order_detail_pannel = __webpack_require__(318);

	var _componentsOrderManage_order_detail_pannel2 = _interopRequireDefault(_componentsOrderManage_order_detail_pannel);

	var _componentsDeliveryChange = __webpack_require__(332);

	var _componentsDeliveryChange2 = _interopRequireDefault(_componentsDeliveryChange);

	var _componentsDeliveryDelivery_manage = __webpack_require__(335);

	var _componentsDeliveryDelivery_manage2 = _interopRequireDefault(_componentsDeliveryDelivery_manage);

	var _componentsDeliveryDistribute_manage = __webpack_require__(339);

	var _componentsDeliveryDistribute_manage2 = _interopRequireDefault(_componentsDeliveryDistribute_manage);

	var _componentsDeliveryPrint_review = __webpack_require__(342);

	var _componentsDeliveryPrint_review2 = _interopRequireDefault(_componentsDeliveryPrint_review);

	var _componentsStationStation_manage = __webpack_require__(344);

	var _componentsStationStation_manage2 = _interopRequireDefault(_componentsStationStation_manage);

	var _componentsStationStation_scope_manage = __webpack_require__(347);

	var _componentsStationStation_scope_manage2 = _interopRequireDefault(_componentsStationStation_scope_manage);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _reactRouter = __webpack_require__(162);

	var _utilsAcl = __webpack_require__(240);

	var _utilsAcl2 = _interopRequireDefault(_utilsAcl);

	var App = (function (_Component) {
	  _inherits(App, _Component);

	  function App() {
	    _classCallCheck(this, App);

	    _get(Object.getPrototypeOf(App.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(App, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        _reactRouter.Router,
	        { history: _history_instance2['default'] },
	        _react2['default'].createElement(
	          _reactRouter.Route,
	          { path: '/', component: _componentsBody.Entry },
	          _react2['default'].createElement(
	            _reactRouter.Route,
	            { path: 'om' },
	            _react2['default'].createElement(
	              _reactRouter.Route,
	              { path: 'index', onEnter: (0, _utilsAcl.onEnter)('OrderManage') },
	              _react2['default'].createElement(_reactRouter.IndexRoute, { component: _componentsOrderManage2['default'] }),
	              _react2['default'].createElement(_reactRouter.Route, { path: 'add', component: _componentsOrderManage_order_detail_pannel2['default'] }),
	              _react2['default'].createElement(_reactRouter.Route, { path: ':id', component: _componentsOrderManage_order_detail_pannel2['default'] })
	            ),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'refund', component: _componentsBody.ComingSoon }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'invoice', component: _componentsBody.ComingSoon }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'winning', component: _componentsBody.ComingSoon })
	          ),
	          _react2['default'].createElement(
	            _reactRouter.Route,
	            { path: 'dm' },
	            _react2['default'].createElement(_reactRouter.Route, { path: 'change', onEnter: (0, _utilsAcl.onEnter)('DeliveryChange'), component: _componentsDeliveryChange2['default'] }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'delivery', onEnter: (0, _utilsAcl.onEnter)('DeliveryManage'), component: _componentsDeliveryDelivery_manage2['default'] }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'distribute', onEnter: (0, _utilsAcl.onEnter)('DistributeManage'), component: _componentsDeliveryDistribute_manage2['default'] }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'review', onEnter: (0, _utilsAcl.onEnter)('PrintReview'), component: _componentsDeliveryPrint_review2['default'] })
	          ),
	          _react2['default'].createElement(
	            _reactRouter.Route,
	            { path: 'sm' },
	            _react2['default'].createElement(_reactRouter.Route, { path: 'station', component: _componentsStationStation_manage2['default'] }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'station/:id', component: _componentsStationStation_manage2['default'] }),
	            _react2['default'].createElement(_reactRouter.Route, { path: 'scope', component: _componentsStationStation_scope_manage2['default'] })
	          ),
	          _react2['default'].createElement(_reactRouter.Redirect, { from: 'logout', to: '/' }),
	          _react2['default'].createElement(_reactRouter.Route, { path: '403', component: _componentsBody.NoPermission }),
	          _react2['default'].createElement(_reactRouter.Route, { path: '*', component: _componentsBody.NoPage })
	        )
	      );
	    }
	  }]);

	  return App;
	})(_react.Component);

	exports['default'] = App;
	module.exports = exports['default'];

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _configAppConfig = __webpack_require__(157);

	var _configAppConfig2 = _interopRequireDefault(_configAppConfig);

	var _nav = __webpack_require__(158);

	var _nav2 = _interopRequireDefault(_nav);

	var _header = __webpack_require__(213);

	var _header2 = _interopRequireDefault(_header);

	var _login = __webpack_require__(215);

	var _login2 = _interopRequireDefault(_login);

	var _utilsCookie = __webpack_require__(214);

	var _utilsCookie2 = _interopRequireDefault(_utilsCookie);

	var _utilsAcl = __webpack_require__(240);

	var _utilsAcl2 = _interopRequireDefault(_utilsAcl);

	var Entry = (function (_Component) {
	  _inherits(Entry, _Component);

	  function Entry() {
	    _classCallCheck(this, Entry);

	    _get(Object.getPrototypeOf(Entry.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(Entry, [{
	    key: 'render',
	    value: function render() {
	      return xfxb.login ? _react2['default'].createElement(
	        Main,
	        null,
	        this.props.children
	      ) : _react2['default'].createElement(_login2['default'], null);
	    }
	  }]);

	  return Entry;
	})(_react.Component);

	exports.Entry = Entry;

	var Main = (function (_Component2) {
	  _inherits(Main, _Component2);

	  function Main() {
	    _classCallCheck(this, Main);

	    _get(Object.getPrototypeOf(Main.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(Main, [{
	    key: 'render',
	    value: function render() {
	      var c = '';
	      if (_utilsCookie2['default'].get(_configAppConfig.NAV_COLLAPSED_COOKIE) == _configAppConfig.NAV_COLLAPSED_COOKIE_YES) {
	        c = _configAppConfig.NAV_COLLAPSED_CLASS;
	      }
	      return _react2['default'].createElement(
	        'div',
	        { id: 'app-container', className: 'sticky-header ' + c },
	        _react2['default'].createElement(
	          'div',
	          { className: 'left-side' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'logo text-center' },
	            _react2['default'].createElement(
	              'a',
	              { href: '#' },
	              _react2['default'].createElement('img', { src: _configAppConfig2['default'].root + "images/logo.png", alt: '' })
	            )
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'logo-icon text-center' },
	            _react2['default'].createElement(
	              'a',
	              { href: 'index.html' },
	              _react2['default'].createElement('img', { src: _configAppConfig2['default'].root + "images/logo_icon.png", alt: '' })
	            )
	          ),
	          _react2['default'].createElement(_nav2['default'], { onRender: _utilsAcl2['default'] }),
	          _react2['default'].createElement(
	            'div',
	            { className: 'app-version' },
	            _react2['default'].createElement('i', { className: 'fa fa-shield' }),
	            window.xfxb.version || 'V 1.0.1'
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'right-side' },
	          _react2['default'].createElement(_header2['default'], null),
	          _react2['default'].createElement(
	            'div',
	            { className: 'main-content' },
	            this.props.children
	          )
	        )
	      );
	    }
	  }]);

	  return Main;
	})(_react.Component);

	exports.Main = Main;

	var NoPermission = (function (_Component3) {
	  _inherits(NoPermission, _Component3);

	  function NoPermission() {
	    _classCallCheck(this, NoPermission);

	    _get(Object.getPrototypeOf(NoPermission.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(NoPermission, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'h1',
	        null,
	        _react2['default'].createElement(
	          'center',
	          null,
	          '没有权限'
	        )
	      );
	    }
	  }]);

	  return NoPermission;
	})(_react.Component);

	exports.NoPermission = NoPermission;

	var NoPage = (function (_Component4) {
	  _inherits(NoPage, _Component4);

	  function NoPage() {
	    _classCallCheck(this, NoPage);

	    _get(Object.getPrototypeOf(NoPage.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(NoPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'h1',
	        null,
	        _react2['default'].createElement(
	          'center',
	          null,
	          '404'
	        )
	      );
	    }
	  }]);

	  return NoPage;
	})(_react.Component);

	exports.NoPage = NoPage;

	var ComingSoon = (function (_Component5) {
	  _inherits(ComingSoon, _Component5);

	  function ComingSoon() {
	    _classCallCheck(this, ComingSoon);

	    _get(Object.getPrototypeOf(ComingSoon.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ComingSoon, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'h1',
	        null,
	        _react2['default'].createElement(
	          'center',
	          null,
	          _react2['default'].createElement(
	            'i',
	            null,
	            'Coming Soon !'
	          )
	        )
	      );
	    }
	  }]);

	  return ComingSoon;
	})(_react.Component);

	exports.ComingSoon = ComingSoon;

/***/ },
/* 157 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = {
	  root: '/',
	  ajax: '/v1/a',
	  acl: true,

	  REQUEST: {
	    ING: 0,
	    SUCCESS: 1,
	    FAIL: 2
	  },

	  SUCCESS_CODE: '0000',
	  NO_MORE_CODE: '9998',
	  EXPIRE_CODE: '1001', //session 过期

	  SELECT_DEFAULT_VALUE: '-1',
	  NAV_COLLAPSED_CLASS: 'left-side-collapsed',
	  NAV_COLLAPSED_COOKIE: 'nav_collapsed_cookie', //保证菜单状态不随页面刷新而变化
	  NAV_COLLAPSED_COOKIE_NO: 'no',
	  NAV_COLLAPSED_COOKIE_YES: 'yes',

	  DELIVERY_TO_HOME: 'DELIVERY', //配送上门
	  DELIVERY_TO_STORE: 'COLLECT', //门店自提
	  DELIVERY_MAP: {
	    'DELIVERY': '配送上门',
	    'COLLECT': '门店自提'
	  },
	  DELIVERY_TIME_MAP: ['09:00~10:00', '09:30~10:30', '10:00~11:00', '10:30~11:30', '11:00~12:00', '11:30~12:30', '12:00~13:00', '12:30~13:30', '13:00~14:00', '13:30~14:30', '14:00~15:00', '14:30~15:30', '15:00~16:00', '15:30~16:30', '16:00~17:00', '16:30~17:30', '17:00~18:00', '17:30~18:30', '18:00~19:00', '18:30~19:30', '19:00~20:00', '20:30~21:30', '21:00~22:00', '21:30~22:30', '22:00~23:00'],

	  order_status: {
	    CANCEL: { value: '取消', key: -10, color: '#BDB8B8', bg: '#dac7a7' },
	    UNTREATED: { value: '未处理', key: 0, color: '#585353', bg: '#dac7a7' },
	    TREATED: { value: '已处理', key: 10, color: '#585353', bg: '#dac7a7' },
	    STATION: { value: '已分配配送站', key: 20, color: '', bg: '#dac7a7' },
	    CONVERT: { value: '已转换', key: 30, color: '', bg: '#dac7a7' },
	    INLINE: { value: '生产中', key: 40, color: '', bg: '#dac7a7' },
	    DELIVERY: { value: '已分配配送员', key: 50, color: '', bg: '#dac7a7' },

	    COMPLETED: { value: '订单完成', key: 100, color: '#2FB352', bg: '#dac7a7' },
	    EXCEPTION: { value: '订单异常', key: 100, color: '#E44949', bg: '#dac7a7' }
	  },
	  pay_status: {
	    'COD': '货到付款',
	    'REFUNDING': '退款中',
	    'REFUNDED': '已退款',
	    'PAYED': '已付款',
	    'PARTPAYED': '部分付款'
	  },
	  INVOICE: {
	    YES: 1,
	    NO: 0
	  },
	  YES_OR_NO: [{ id: 1, text: '是' }, { id: 0, text: '否' }],

	  PRINT_REVIEW_STATUS: {
	    'UNAUDIT': '未审核',
	    'AUDITED': '审核通过',
	    'AUDITFAILED': '审核失败'
	  },
	  PRINT_STATUS: {
	    'PRINTABLE': '是',
	    'UNPRINTABLE': '否',
	    'AUDITING': '否',
	    'REPRINTABLE': '是'
	  }

	};
	module.exports = exports['default'];

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _configNavConfig = __webpack_require__(159);

	var _configNavConfig2 = _interopRequireDefault(_configNavConfig);

	var _utilsIndex = __webpack_require__(160);

	var _utilsIndex2 = _interopRequireDefault(_utilsIndex);

	var _reactRouter = __webpack_require__(162);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var Nav = (function (_Component) {
	  _inherits(Nav, _Component);

	  function Nav() {
	    _classCallCheck(this, Nav);

	    _get(Object.getPrototypeOf(Nav.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(Nav, [{
	    key: 'render',
	    value: function render() {
	      var current_path = location.pathname;
	      var V = this.props.onRender; //权限验证函数
	      var check_active = function check_active(link, path) {
	        return link == path || path.startsWith(link); //页面子页面（没在导航菜单中显示的）
	      };
	      var treeDOM = _configNavConfig2['default'].map(function (firstLevelItem) {
	        var active;
	        if (_utilsIndex2['default'].core.isArray(firstLevelItem.link)) {
	          //有二级菜单
	          var secondLevels = firstLevelItem.link.map(function (secondLevelItem) {
	            var _active = check_active(secondLevelItem.link, current_path);
	            active = active || _active;
	            if (V(secondLevelItem.key)) {
	              return _react2['default'].createElement(
	                'li',
	                { key: secondLevelItem.key, className: _active ? 'active' : '' },
	                _react2['default'].createElement(
	                  _reactRouter.Link,
	                  { to: secondLevelItem.link, className: 'menu-2' },
	                  secondLevelItem.name
	                )
	              );
	            }
	          });
	          //当secondLevels当中全为undefined时，则表示该栏目下的所有页面均无访问权限，那么就隐藏该栏目
	          return secondLevels.some(function (sl) {
	            return sl;
	          }) && _react2['default'].createElement(
	            'li',
	            { key: firstLevelItem.key, className: "menu-list has-sub " + (active ? 'active open' : '') },
	            _react2['default'].createElement(
	              'a',
	              { className: 'menu-1', href: 'javascript:;' },
	              _react2['default'].createElement(
	                'span',
	                null,
	                firstLevelItem.name
	              )
	            ),
	            _react2['default'].createElement(
	              'a',
	              { className: 'menu-1 short-menu', href: 'javascript:;' },
	              firstLevelItem.short_name
	            ),
	            _react2['default'].createElement(
	              'ul',
	              { className: 'sub-menu-list' },
	              secondLevels
	            )
	          );
	        } else {
	          //只有一级菜单
	          return _react2['default'].createElement(
	            'li',
	            { key: firstLevelItem.key, className: check_active(firstLevelItem.link, current_path) ? 'menu-list active open' : 'menu-list' },
	            _react2['default'].createElement(
	              _reactRouter.Link,
	              { to: firstLevelItem.link, className: 'menu-1' },
	              firstLevelItem.name
	            ),
	            _react2['default'].createElement(
	              _reactRouter.Link,
	              { to: firstLevelItem.link, className: 'menu-1 short-menu' },
	              firstLevelItem.short_name
	            )
	          );
	        }
	      });

	      return _react2['default'].createElement(
	        'nav',
	        { id: 'nav' },
	        _react2['default'].createElement(
	          'ul',
	          { className: 'nav' },
	          treeDOM
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var $nav = $('.left-side');
	      var SLIDE_TIME = 180;

	      $nav.on('click', 'a.menu-1', function () {
	        if (!$('#app-container').hasClass('left-side-collapsed')) {
	          var $menulist = $(this).parents('.menu-list').eq(0);
	          $menulist.siblings('.open').each(function () {
	            var $others = $(this);
	            $others.find('.sub-menu-list').slideToggle(SLIDE_TIME, function () {
	              $others.removeClass('open');
	            });
	          });
	          $menulist.find('.sub-menu-list').slideToggle(SLIDE_TIME, function () {
	            $menulist.toggleClass('open');
	          });
	        }
	      }).on('click', 'a.menu-2', function () {
	        var $this = $(this),
	            $li = $this.parent(),
	            $menulist = $this.parents('.menu-list').eq(0);
	        $li.addClass('active');
	        $menulist.addClass('active').removeClass('on-hover');
	      });

	      $nav.find('.menu-list').each(function () {
	        $(this).on('mouseenter', function () {
	          $(this).addClass('on-hover');
	        }).on('mouseleave', function () {
	          $(this).removeClass('on-hover');
	        });
	      });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      var $nav = $('.left-side');
	      $nav.off('click').find('.menu-list').each(function () {
	        $(this).off('click');
	      });
	    }
	  }]);

	  return Nav;
	})(_react.Component);

	Nav.defaultProps = {
	  //默认情况，始终返回true, 代表不做权限控制
	  onRender: function onRender(role) {
	    return true;
	  }
	};

	exports['default'] = Nav;
	module.exports = exports['default'];

/***/ },
/* 159 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = [{
	    "key": "order_management",
	    "name": "订单管理",
	    "short_name": "订单",
	    "icon": "clipboard",
	    "link": [{
	        "key": "OrderManage", //key值，主要用来进行访问权限控制
	        "name": "订单管理",
	        "icon": "",
	        "link": "/om/index"
	    }, {
	        "key": "OrderRefund",
	        "name": "退款管理",
	        "icon": "",
	        "link": "/om/refund"
	    }, {
	        "key": "om_invoice",
	        "name": "发票管理",
	        "icon": "",
	        "link": "/om/invoice"
	    }, {
	        "key": "om_winning",
	        "name": "中奖管理",
	        "icon": "",
	        "link": "/om/winning"
	    }]
	}, {
	    "key": "delivery_management",
	    "name": "送货管理",
	    "short_name": "送货",
	    "icon": "truck",
	    "link": [{
	        "key": "DeliveryChange",
	        "name": "订单转送货单",
	        "icon": "",
	        "link": "/dm/change"
	    }, {
	        "key": "DeliveryManage",
	        "name": "送货单管理",
	        "icon": "",
	        "link": "/dm/delivery"
	    }, {
	        "key": "DistributeManage",
	        "name": "配送单管理",
	        "icon": "",
	        "link": "/dm/distribute"
	    }, {
	        "key": "PrintReview",
	        "name": "打印审核",
	        "icon": "",
	        "link": "/dm/review"
	    }]
	}, {
	    "key": "station_management",
	    "name": "配送管理",
	    "short_name": "送货",
	    "icon": "",
	    "link": [{
	        "key": "sm_station",
	        "name": "配送站管理",
	        "icon": "",
	        "link": "/sm/station"
	    }, {
	        "key": "sm_scope",
	        "name": "配送区域管理",
	        "icon": "",
	        "link": "/sm/scope"
	    }]
	}];
	module.exports = exports["default"];

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _noty = __webpack_require__(161);

	var _noty2 = _interopRequireDefault(_noty);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function core_isFunction(arg) {
	  return typeof arg === 'function';
	}

	function core_isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function core_isString(arg) {
	  return typeof arg === 'string';
	}

	function core_isArray(arg) {
	  return Object.prototype.toString.call(arg) === '[object Array]';
	}

	function core_isUndefined(arg) {
	  return arg === void 0;
	}

	function core_isNull(arg) {
	  return typeof arg === 'object' && arg == null;
	}

	function clone(target) {
	  if (target && typeof target === 'object') {
	    var newObj = target instanceof Array ? [] : {};
	    for (var key in target) {
	      var val = target[key];
	      newObj[key] = arguments.callee(val);
	    }
	    return newObj;
	  } else {
	    return target;
	  }
	}

	function form_isNumber(input) {
	  /**** 方法form_isNaN, form_isPositiveNumber 均依赖于本方法，改动需谨慎 **/
	  return (/^[+-]?((\d+.\d+)|(\d+))$/.test(input + '')
	  );
	}

	function form_isNumberAndLetter(input) {
	  if (input === '') {
	    return false;
	  }
	  return (input + '').replace(/[0-9a-zA-Z]*/, '').length === 0;
	}

	/**
	 * isNaN: 原生isNaN的改进版, 判断输入是否为数字
	 */
	function form_isNaN(input) {
	  return !form_isNumber(input);
	}

	function form_isPositiveNumber(input) {
	  return form_isNumber(input) && parseFloat(input) > 0;
	}
	//正数 且 最大两位小数点，上限 30000
	function form_isPositiveRightNumber(input) {
	  return (/^[+]?((\d+.(\d){1,2})|(\d)+)$/.test(input + '') && parseFloat(input) <= 30000 && parseFloat(input) > 0
	  );
	}
	function form_isDate(input) {
	  return (/^[0-9]{4}-(((0[13578]|(10|12))-(0[1-9]|[1-2][0-9]|3[0-1]))|(02-(0[1-9]|[1-2][0-9]))|((0[469]|11)-(0[1-9]|[1-2][0-9]|30)))$/.test(input)
	  );
	}
	function form_isTime(input) {
	  return (/^(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?$/.test(input)
	  );
	}
	//简单版
	function form_isMobile(input) {
	  return (/^\d{11}$/.test(input)
	  );
	}

	function form_isCoupon(input) {
	  return (/(^\d{10}$)|(^\d{12}$)/g.test(input)
	  );
	}
	/**
	*
	* 描述：日期格式化
	*   date   date   日期
	*   format string 格式
	*   return string
	*
	* 例子：
	*   dateFormat(new Date(2015,9,27), "yyyy-MM-dd") 返回 "2015-10-27"
	*
	**/
	function dateFormat(date) {
	  var format = arguments.length <= 1 || arguments[1] === undefined ? 'yyyy-MM-dd' : arguments[1];

	  var o = {
	    "M+": date.getMonth() + 1,
	    "d+": date.getDate(),
	    "h+": date.getHours(),
	    "m+": date.getMinutes(),
	    "s+": date.getSeconds(),
	    "q+": Math.floor((date.getMonth() + 3) / 3),
	    "S": date.getMilliseconds()
	  };
	  if (/(y+)/.test(format)) {
	    format = format.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
	  }

	  for (var k in o) {
	    if (new RegExp("(" + k + ")").test(format)) {
	      format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
	    }
	  }
	  return format;
	}

	// 日期偏移
	function getDate(base, offset) {
	  var now = arguments.length == 2 ? new Date(base) : new Date(),
	      o = parseInt(arguments.length == 2 ? offset : arguments[0]) * 24 * 60 * 60 * 1000 || 0,
	      month = now.getMonth() + 1,
	      newDate = new Date(new Date(now.getFullYear() + '-' + month + '-' + now.getDate() + ' 00:00:00').getTime() + o);
	  return dateFormat(newDate, 'yyyy-MM-dd');
	};

	/**
	 * Applies a function to every key-value pair inside an object.
	 *
	 * @param {Object} obj The source object.
	 * @param {Function} fn The mapper function that receives the value and the key.
	 * @returns {Object} A new object that contains the mapped values for the keys.
	 */
	function mapValues(obj, fn) {
	  return Object.keys(obj).reduce(function (result, key) {
	    result[key] = fn(obj[key], key);
	    return result;
	  }, {});
	}
	function each(target, cb) {
	  if (target && typeof target === 'object') {
	    if (core_isArray(target)) {
	      //target.forEach(target, cb);
	      for (var i = 0, len = target.length; i < len; i++) cb(target[i], i);
	    } else {
	      for (var a in target) cb(target[a], a);
	    }
	  }
	}
	function map(target, cb) {
	  var res = [];
	  each(target, function (n, i) {
	    res.push(cb(n, i));
	  });
	  return res;
	}

	function toFixed(target, digit) {
	  var t = parseFloat(target);
	  digit = typeof digit == 'undefined' ? 2 : digit; //默认2位
	  if (isNaN(t)) {
	    return '';
	  } else {
	    return Number(t.toFixed(digit));
	  }
	}

	//给类似"{修改} {配送站} 为 {龙华站}"这样的文本 着色
	function colour(input) {
	  input = (input + '').trim().split('\n');
	  var results = [];
	  input.forEach(function (_input, j) {
	    var tmp = [];
	    _input = _input.match(/[^\{\}]*/g);
	    var createSpan = function createSpan(index) {
	      return _react2['default'].createElement(
	        'span',
	        { key: index, className: 'strong' },
	        _input[index]
	      );
	    };
	    for (var i = 0, len = _input.length; i < len; i++) {
	      if (_input[i] == "") {
	        if (i + 1 < len && _input[i + 1] && _input[i + 2] == "") {
	          tmp.push(createSpan(i + 1));
	          i += 2;
	        }
	      } else {
	        tmp.push(_input[i]);
	      }
	    }
	    input.length > 1 && tmp.push(_react2['default'].createElement('br', { key: 'br' + j }));
	    results.push(_react2['default'].createElement(
	      'span',
	      { key: 'record-row' + j, className: 'nowrap' },
	      tmp
	    )); //不允许换行
	  });
	  return results;
	}

	//去除表单中的“” 和 "-1" 等无用字段，（主要用于filter 表单中）
	function formCompile(form_data) {
	  for (var a in form_data) {
	    if (form_data[a] === "" || form_data[a] === "-1") form_data[a] = undefined;
	  }
	  return form_data;
	}

	function reactReplace(input, reg_or_string, reactElement) {
	  input = (input || '').split(reg_or_string);
	  var results = [];
	  for (var i = 0, len = input.length; i < len; i++) {
	    results.push(input[i]);
	    if (i < len - 1) {
	      results.push(reactElement); //待定，没有加key
	    }
	  }
	  return results;
	}

	function parseTime(date_time) {
	  date_time = date_time || '';
	  date_time = date_time.split(' ');
	  if (date_time.length >= 2) {
	    return _react2['default'].createElement(
	      'div',
	      { className: 'time' },
	      date_time[0],
	      _react2['default'].createElement('br', { key: 'br' }),
	      date_time[1]
	    );
	  }
	}

	function delay(task) {
	  setTimeout(task, 0);
	}

	exports['default'] = {
	  core: {
	    isArray: core_isArray,
	    isObject: core_isObject,
	    isString: core_isString
	  },
	  form: {
	    isNumber: form_isNumber,
	    /*严格的表单验证(不会对输入进行trim操作)*/
	    isNumberAndLetter: form_isNumberAndLetter,
	    isNaN: form_isNaN,
	    isPositiveNumber: form_isPositiveNumber, //正数
	    isPositiveRightNumber: form_isPositiveRightNumber, //正数, 且最大两位小数，上限30000
	    isDate: form_isDate, //yyyy-MM-dd
	    isTime: form_isTime, //HH:mm:ss 或 HH:mm
	    isMobile: form_isMobile, //简单版
	    isCoupon: form_isCoupon },
	  //验券 
	  dateFormat: dateFormat,
	  getDate: getDate,

	  //对象、数组
	  mapValues: mapValues,
	  each: each,
	  map: map,

	  toFixed: toFixed,
	  delay: delay,

	  Noty: _noty2['default'], //提示信息小窗口：param：（type， text);

	  colour: colour, //着色
	  formCompile: formCompile, ////去除表单中的“” 和 "-1" 等无用字段，（主要用于filter 表单中）
	  reactReplace: reactReplace, //将特定字符串转换成 React元素组
	  parseTime: parseTime };
	module.exports = exports['default'];
	//将时间：2016-01-05 13:00～14:00 ===> 2016-01-05（换行）13:00～14:00

/***/ },
/* 161 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = Noty;

	function Noty(type, text) {
	  var timeout = {
	    success: 2500,
	    alert: 3500,
	    warning: 4000,
	    error: 4000
	  };
	  window.noty ? window.noty({
	    layout: 'topRight',
	    theme: 'relax',
	    type: type, //alert, warning, success, error, information
	    text: text,
	    animation: {
	      open: 'animated bounceInRight', // Animate.css class names
	      close: 'animated bounceOutRight' },
	    // Animate.css class names
	    // easing: 'swing', // unavailable - no need
	    // speed: 500 // unavailable - no need
	    timeout: timeout[type] || false
	  }) : alert(text);
	}

	module.exports = exports['default'];

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/* components */
	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _Router2 = __webpack_require__(163);

	var _Router3 = _interopRequireDefault(_Router2);

	exports.Router = _Router3['default'];

	var _Link2 = __webpack_require__(199);

	var _Link3 = _interopRequireDefault(_Link2);

	exports.Link = _Link3['default'];

	var _IndexLink2 = __webpack_require__(200);

	var _IndexLink3 = _interopRequireDefault(_IndexLink2);

	exports.IndexLink = _IndexLink3['default'];

	/* components (configuration) */

	var _IndexRedirect2 = __webpack_require__(201);

	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

	exports.IndexRedirect = _IndexRedirect3['default'];

	var _IndexRoute2 = __webpack_require__(203);

	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

	exports.IndexRoute = _IndexRoute3['default'];

	var _Redirect2 = __webpack_require__(202);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	exports.Redirect = _Redirect3['default'];

	var _Route2 = __webpack_require__(204);

	var _Route3 = _interopRequireDefault(_Route2);

	exports.Route = _Route3['default'];

	/* mixins */

	var _History2 = __webpack_require__(205);

	var _History3 = _interopRequireDefault(_History2);

	exports.History = _History3['default'];

	var _Lifecycle2 = __webpack_require__(206);

	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);

	exports.Lifecycle = _Lifecycle3['default'];

	var _RouteContext2 = __webpack_require__(207);

	var _RouteContext3 = _interopRequireDefault(_RouteContext2);

	exports.RouteContext = _RouteContext3['default'];

	/* utils */

	var _useRoutes2 = __webpack_require__(186);

	var _useRoutes3 = _interopRequireDefault(_useRoutes2);

	exports.useRoutes = _useRoutes3['default'];

	var _RouteUtils = __webpack_require__(182);

	exports.createRoutes = _RouteUtils.createRoutes;

	var _RoutingContext2 = __webpack_require__(183);

	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);

	exports.RoutingContext = _RoutingContext3['default'];

	var _PropTypes2 = __webpack_require__(198);

	var _PropTypes3 = _interopRequireDefault(_PropTypes2);

	exports.PropTypes = _PropTypes3['default'];

	var _match2 = __webpack_require__(208);

	var _match3 = _interopRequireDefault(_match2);

	exports.match = _match3['default'];

	var _Router4 = _interopRequireDefault(_Router2);

	exports['default'] = _Router4['default'];

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _historyLibCreateHashHistory = __webpack_require__(165);

	var _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);

	var _RouteUtils = __webpack_require__(182);

	var _RoutingContext = __webpack_require__(183);

	var _RoutingContext2 = _interopRequireDefault(_RoutingContext);

	var _useRoutes = __webpack_require__(186);

	var _useRoutes2 = _interopRequireDefault(_useRoutes);

	var _PropTypes = __webpack_require__(198);

	var _React$PropTypes = _react2['default'].PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;

	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RoutingContext> with all the props
	 * it needs each time the URL changes.
	 */

	var Router = (function (_Component) {
	  _inherits(Router, _Component);

	  function Router(props, context) {
	    _classCallCheck(this, Router);

	    _Component.call(this, props, context);

	    this.state = {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  }

	  Router.prototype.handleError = function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  };

	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this = this;

	    var _props = this.props;
	    var history = _props.history;
	    var children = _props.children;
	    var routes = _props.routes;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;

	    var createHistory = history ? function () {
	      return history;
	    } : _historyLibCreateHashHistory2['default'];

	    this.history = _useRoutes2['default'](createHistory)({
	      routes: _RouteUtils.createRoutes(routes || children),
	      parseQueryString: parseQueryString,
	      stringifyQuery: stringifyQuery
	    });

	    this._unlisten = this.history.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	  };

	  /* istanbul ignore next: sanity check */

	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	     false ? _warning2['default'](nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : undefined;

	     false ? _warning2['default']((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : undefined;
	  };

	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  };

	  Router.prototype.render = function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props2 = this.props;
	    var RoutingContext = _props2.RoutingContext;
	    var createElement = _props2.createElement;

	    var props = _objectWithoutProperties(_props2, ['RoutingContext', 'createElement']);

	    if (location == null) return null; // Async match

	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });

	    return _react2['default'].createElement(RoutingContext, _extends({}, props, {
	      history: this.history,
	      createElement: createElement,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components
	    }));
	  };

	  return Router;
	})(_react.Component);

	Router.propTypes = {
	  history: object,
	  children: _PropTypes.routes,
	  routes: _PropTypes.routes, // alias for children
	  RoutingContext: func.isRequired,
	  createElement: func,
	  onError: func,
	  onUpdate: func,
	  parseQueryString: func,
	  stringifyQuery: func
	};

	Router.defaultProps = {
	  RoutingContext: _RoutingContext2['default']
	};

	exports['default'] = Router;
	module.exports = exports['default'];

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(167);

	var _ExecutionEnvironment = __webpack_require__(168);

	var _DOMUtils = __webpack_require__(169);

	var _DOMStateStorage = __webpack_require__(170);

	var _createDOMHistory = __webpack_require__(171);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}

	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();

	  if (isAbsolutePath(path)) return true;

	  _DOMUtils.replaceHashPath('/' + path);

	  return false;
	}

	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}

	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}

	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}

	var DefaultQueryKey = '_k';

	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;

	  var queryKey = options.queryKey;

	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;

	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();

	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);

	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }

	    return history.createLocation(path, state, undefined, key);
	  }

	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.

	      transitionTo(getCurrentLocation());
	    }

	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    var path = (basename || '') + pathname + search;

	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }

	    var currentHash = _DOMUtils.getHashPath();

	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	         false ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopHashChangeListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function pushState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.pushState(state, path);
	  }

	  function replaceState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replaceState(state, path);
	  }

	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();

	  function go(n) {
	     false ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;

	    history.go(n);
	  }

	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopHashChangeListener();
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    pushState: pushState,
	    replaceState: replaceState,
	    go: go,
	    createHref: createHref,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}

	exports['default'] = createHashHistory;
	module.exports = exports['default'];

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 167 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';

	exports.__esModule = true;
	var PUSH = 'PUSH';

	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';

	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';

	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 168 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 169 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}

	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}

	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}

	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}

	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}

	function go(n) {
	  if (n) window.history.go(n);
	}

	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}

	/**
	 * Returns true if the HTML5 history API is supported. Taken from modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */

	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */

	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable no-empty */
	'use strict';

	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var KeyPrefix = '@@History/';
	var QuotaExceededError = 'QuotaExceededError';
	var SecurityError = 'SecurityError';

	function createKey(key) {
	  return KeyPrefix + key;
	}

	function saveState(key, state) {
	  try {
	    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;

	      return;
	    }

	    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;

	      return;
	    }

	    throw error;
	  }
	}

	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;

	      return null;
	    }
	  }

	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }

	  return null;
	}

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ExecutionEnvironment = __webpack_require__(168);

	var _DOMUtils = __webpack_require__(169);

	var _createHistory = __webpack_require__(172);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));

	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;

	    return history.listen(listener);
	  }

	  return _extends({}, history, {
	    listen: listen
	  });
	}

	exports['default'] = createDOMHistory;
	module.exports = exports['default'];

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _deepEqual = __webpack_require__(173);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _AsyncUtils = __webpack_require__(176);

	var _Actions = __webpack_require__(167);

	var _createLocation2 = __webpack_require__(177);

	var _createLocation3 = _interopRequireDefault(_createLocation2);

	var _runTransitionHook = __webpack_require__(180);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(181);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}

	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}

	var DefaultKeyLength = 6;

	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var keyLength = options.keyLength;
	  var getUserConfirmation = options.getUserConfirmation;

	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;

	  var transitionHooks = [];

	  function listenBefore(hook) {
	    transitionHooks.push(hook);

	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }

	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;

	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }

	  function updateLocation(newLocation) {
	    var current = getCurrent();

	    location = newLocation;

	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }

	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }

	  function listen(listener) {
	    changeListeners.push(listener);

	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }

	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }

	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }

	  var pendingLocation = undefined;

	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

	    pendingLocation = nextLocation;

	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.

	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var _getCurrentLocation = getCurrentLocation();

	          var pathname = _getCurrentLocation.pathname;
	          var search = _getCurrentLocation.search;

	          var currentPath = pathname + search;
	          var path = nextLocation.pathname + nextLocation.search;

	          if (currentPath === path) nextLocation.action = _Actions.REPLACE;
	        }

	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);

	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }

	  function pushState(state, path) {
	    transitionTo(createLocation(path, state, _Actions.PUSH, createKey()));
	  }

	  function push(path) {
	    pushState(null, path);
	  }

	  function replaceState(state, path) {
	    transitionTo(createLocation(path, state, _Actions.REPLACE, createKey()));
	  }

	  function replace(path) {
	    replaceState(null, path);
	  }

	  function goBack() {
	    go(-1);
	  }

	  function goForward() {
	    go(1);
	  }

	  function createKey() {
	    return createRandomKey(keyLength);
	  }

	  function createPath(path) {
	    if (path == null || typeof path === 'string') return path;

	    var pathname = path.pathname;
	    var search = path.search;
	    var hash = path.hash;

	    var result = pathname;

	    if (search) result += search;

	    if (hash) result += hash;

	    return result;
	  }

	  function createHref(path) {
	    return createPath(path);
	  }

	  function createLocation(path, state, action) {
	    var key = arguments.length <= 3 || arguments[3] === undefined ? createKey() : arguments[3];

	    return _createLocation3['default'](path, state, action, key);
	  }

	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }

	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }

	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    pushState: pushState,
	    replaceState: replaceState,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,

	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead')
	  };
	}

	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(174);
	var isArguments = __webpack_require__(175);

	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;

	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();

	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;

	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}

	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}

	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}

	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 174 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;

	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 175 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';

	exports = module.exports = supportsArgumentsClass ? supported : unsupported;

	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};

	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 176 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.loopAsync = loopAsync;

	function loopAsync(turns, work, callback) {
	  var currentTurn = 0;
	  var isDone = false;

	  function done() {
	    isDone = true;
	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) return;

	    if (currentTurn < turns) {
	      work.call(this, currentTurn++, next, done);
	    } else {
	      done.apply(this, arguments);
	    }
	  }

	  next();
	}

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _Actions = __webpack_require__(167);

	var _parsePath = __webpack_require__(178);

	var _parsePath2 = _interopRequireDefault(_parsePath);

	function createLocation() {
	  var path = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var state = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
	  var action = arguments.length <= 2 || arguments[2] === undefined ? _Actions.POP : arguments[2];
	  var key = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

	  if (typeof path === 'string') path = _parsePath2['default'](path);

	  var pathname = path.pathname || '/';
	  var search = path.search || '';
	  var hash = path.hash || '';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}

	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _extractPath = __webpack_require__(179);

	var _extractPath2 = _interopRequireDefault(_extractPath);

	function parsePath(path) {
	  var pathname = _extractPath2['default'](path);
	  var search = '';
	  var hash = '';

	   false ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }

	  if (pathname === '') pathname = '/';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

	exports['default'] = parsePath;
	module.exports = exports['default'];

/***/ },
/* 179 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);

	  if (match == null) return string;

	  return string.substring(match[0].length);
	}

	exports["default"] = extractPath;
	module.exports = exports["default"];

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);

	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     false ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}

	exports['default'] = runTransitionHook;
	module.exports = exports['default'];

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	function deprecate(fn, message) {
	  return function () {
	     false ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}

	exports['default'] = deprecate;
	module.exports = exports['default'];

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	function isValidChild(object) {
	  return object == null || _react2['default'].isValidElement(object);
	}

	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}

	function checkPropTypes(componentName, propTypes, props) {
	  componentName = componentName || 'UnknownComponent';

	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error = propTypes[propName](props, propName, componentName);

	      /* istanbul ignore if: error logging */
	      if (error instanceof Error)  false ? _warning2['default'](false, error.message) : undefined;
	    }
	  }
	}

	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}

	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);

	  if (type.propTypes) checkPropTypes(type.displayName || type.name, type.propTypes, route);

	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);

	    if (childRoutes.length) route.childRoutes = childRoutes;

	    delete route.children;
	  }

	  return route;
	}

	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *   
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */

	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];

	  _react2['default'].Children.forEach(children, function (element) {
	    if (_react2['default'].isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);

	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });

	  return routes;
	}

	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */

	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }

	  return routes;
	}

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouteUtils = __webpack_require__(182);

	var _getRouteParams = __webpack_require__(184);

	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);

	var _React$PropTypes = _react2['default'].PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;

	/**
	 * A <RoutingContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */

	var RoutingContext = (function (_Component) {
	  _inherits(RoutingContext, _Component);

	  function RoutingContext() {
	    _classCallCheck(this, RoutingContext);

	    _Component.apply(this, arguments);
	  }

	  RoutingContext.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var history = _props.history;
	    var location = _props.location;

	    return { history: history, location: location };
	  };

	  RoutingContext.prototype.createElement = function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  };

	  RoutingContext.prototype.render = function render() {
	    var _this = this;

	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;

	    var element = null;

	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.

	        var route = routes[index];
	        var routeParams = _getRouteParams2['default'](route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };

	        if (_RouteUtils.isReactChildren(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (element.hasOwnProperty(prop)) props[prop] = element[prop];
	          }
	        }

	        if (typeof components === 'object') {
	          var elements = {};

	          for (var key in components) {
	            if (components.hasOwnProperty(key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }

	          return elements;
	        }

	        return _this.createElement(components, props);
	      }, element);
	    }

	    !(element === null || element === false || _react2['default'].isValidElement(element)) ?  false ? _invariant2['default'](false, 'The root route must render a single element') : _invariant2['default'](false) : undefined;

	    return element;
	  };

	  return RoutingContext;
	})(_react.Component);

	RoutingContext.propTypes = {
	  history: object.isRequired,
	  createElement: func.isRequired,
	  location: object.isRequired,
	  routes: array.isRequired,
	  params: object.isRequired,
	  components: array.isRequired
	};

	RoutingContext.defaultProps = {
	  createElement: _react2['default'].createElement
	};

	RoutingContext.childContextTypes = {
	  history: object.isRequired,
	  location: object.isRequired
	};

	exports['default'] = RoutingContext;
	module.exports = exports['default'];

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(185);

	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};

	  if (!route.path) return routeParams;

	  var paramNames = _PatternUtils.getParamNames(route.path);

	  for (var p in params) {
	    if (params.hasOwnProperty(p) && paramNames.indexOf(p) !== -1) routeParams[p] = params[p];
	  }return routeParams;
	}

	exports['default'] = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}

	function escapeSource(string) {
	  return escapeRegExp(string).replace(/\/+/g, '/+');
	}

	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];

	  var match = undefined,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeSource(pattern.slice(lastIndex, match.index));
	    }

	    if (match[1]) {
	      regexpSource += '([^/?#]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '([\\s\\S]*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '([\\s\\S]*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }

	    tokens.push(match[0]);

	    lastIndex = matcher.lastIndex;
	  }

	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeSource(pattern.slice(lastIndex, pattern.length));
	  }

	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}

	var CompiledPatternsCache = {};

	function compilePattern(pattern) {
	  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);

	  return CompiledPatternsCache[pattern];
	}

	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */

	function matchPattern(pattern, pathname) {
	  // Make leading slashes consistent between pattern and pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }

	  var _compilePattern2 = compilePattern(pattern);

	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;

	  regexpSource += '/*'; // Capture path separators

	  // Special-case patterns like '*' for catch-all routes.
	  var captureRemaining = tokens[tokens.length - 1] !== '*';

	  if (captureRemaining) {
	    // This will match newlines in the remaining path.
	    regexpSource += '([\\s\\S]*?)';
	  }

	  var match = pathname.match(new RegExp('^' + regexpSource + '$', 'i'));

	  var remainingPathname = undefined,
	      paramValues = undefined;
	  if (match != null) {
	    if (captureRemaining) {
	      remainingPathname = match.pop();
	      var matchedPath = match[0].substr(0, match[0].length - remainingPathname.length);

	      // If we didn't match the entire pathname, then make sure that the match
	      // we did get ends at a path separator (potentially the one we added
	      // above at the beginning of the path, if the actual match was empty).
	      if (remainingPathname && matchedPath.charAt(matchedPath.length - 1) !== '/') {
	        return {
	          remainingPathname: null,
	          paramNames: paramNames,
	          paramValues: null
	        };
	      }
	    } else {
	      // If this matched at all, then the match was the entire pathname.
	      remainingPathname = '';
	    }

	    paramValues = match.slice(1).map(function (v) {
	      return v != null ? decodeURIComponent(v) : v;
	    });
	  } else {
	    remainingPathname = paramValues = null;
	  }

	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: paramValues
	  };
	}

	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}

	function getParams(pattern, pathname) {
	  var _matchPattern = matchPattern(pattern, pathname);

	  var paramNames = _matchPattern.paramNames;
	  var paramValues = _matchPattern.paramValues;

	  if (paramValues != null) {
	    return paramNames.reduce(function (memo, paramName, index) {
	      memo[paramName] = paramValues[index];
	      return memo;
	    }, {});
	  }

	  return null;
	}

	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */

	function formatPattern(pattern, params) {
	  params = params || {};

	  var _compilePattern3 = compilePattern(pattern);

	  var tokens = _compilePattern3.tokens;

	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;

	  var token = undefined,
	      paramName = undefined,
	      paramValue = undefined;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];

	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;

	      !(paramValue != null || parenCount > 0) ?  false ? _invariant2['default'](false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : _invariant2['default'](false) : undefined;

	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];

	      !(paramValue != null || parenCount > 0) ?  false ? _invariant2['default'](false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : _invariant2['default'](false) : undefined;

	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }

	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _historyLibActions = __webpack_require__(167);

	var _historyLibUseQueries = __webpack_require__(187);

	var _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);

	var _computeChangedRoutes2 = __webpack_require__(192);

	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);

	var _TransitionUtils = __webpack_require__(193);

	var _isActive2 = __webpack_require__(195);

	var _isActive3 = _interopRequireDefault(_isActive2);

	var _getComponents = __webpack_require__(196);

	var _getComponents2 = _interopRequireDefault(_getComponents);

	var _matchRoutes = __webpack_require__(197);

	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);

	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p)) return true;
	  }return false;
	}

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var routes = options.routes;

	    var historyOptions = _objectWithoutProperties(options, ['routes']);

	    var history = _historyLibUseQueries2['default'](createHistory)(historyOptions);
	    var state = {};

	    function isActive(pathname, query) {
	      var indexOnly = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

	      return _isActive3['default'](pathname, query, indexOnly, state.location, state.routes, state.params);
	    }

	    function createLocationFromRedirectInfo(_ref) {
	      var pathname = _ref.pathname;
	      var query = _ref.query;
	      var state = _ref.state;

	      return history.createLocation(history.createPath(pathname, query), state, _historyLibActions.REPLACE);
	    }

	    var partialNextState = undefined;

	    function match(location, callback) {
	      if (partialNextState && partialNextState.location === location) {
	        // Continue from where we left off.
	        finishMatch(partialNextState, callback);
	      } else {
	        _matchRoutes2['default'](routes, location, function (error, nextState) {
	          if (error) {
	            callback(error);
	          } else if (nextState) {
	            finishMatch(_extends({}, nextState, { location: location }), callback);
	          } else {
	            callback();
	          }
	        });
	      }
	    }

	    function finishMatch(nextState, callback) {
	      var _computeChangedRoutes = _computeChangedRoutes3['default'](state, nextState);

	      var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	      var enterRoutes = _computeChangedRoutes.enterRoutes;

	      _TransitionUtils.runLeaveHooks(leaveRoutes);

	      _TransitionUtils.runEnterHooks(enterRoutes, nextState, function (error, redirectInfo) {
	        if (error) {
	          callback(error);
	        } else if (redirectInfo) {
	          callback(null, createLocationFromRedirectInfo(redirectInfo));
	        } else {
	          // TODO: Fetch components after state is updated.
	          _getComponents2['default'](nextState, function (error, components) {
	            if (error) {
	              callback(error);
	            } else {
	              // TODO: Make match a pure function and have some other API
	              // for "match and update state".
	              callback(null, null, state = _extends({}, nextState, { components: components }));
	            }
	          });
	        }
	      });
	    }

	    var RouteGuid = 1;

	    function getRouteID(route) {
	      return route.__id__ || (route.__id__ = RouteGuid++);
	    }

	    var RouteHooks = {};

	    function getRouteHooksForRoutes(routes) {
	      return routes.reduce(function (hooks, route) {
	        hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	        return hooks;
	      }, []);
	    }

	    function transitionHook(location, callback) {
	      _matchRoutes2['default'](routes, location, function (error, nextState) {
	        if (nextState == null) {
	          // TODO: We didn't actually match anything, but hang
	          // onto error/nextState so we don't have to matchRoutes
	          // again in the listen callback.
	          callback();
	          return;
	        }

	        // Cache some state here so we don't have to
	        // matchRoutes() again in the listen callback.
	        partialNextState = _extends({}, nextState, { location: location });

	        var hooks = getRouteHooksForRoutes(_computeChangedRoutes3['default'](state, partialNextState).leaveRoutes);

	        var result = undefined;
	        for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	          // Passing the location arg here indicates to
	          // the user that this is a transition hook.
	          result = hooks[i](location);
	        }

	        callback(result);
	      });
	    }

	    function beforeUnloadHook() {
	      // Synchronously check to see if any route hooks want
	      // to prevent the current window/tab from closing.
	      if (state.routes) {
	        var hooks = getRouteHooksForRoutes(state.routes);

	        var message = undefined;
	        for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	          // Passing no args indicates to the user that this is a
	          // beforeunload hook. We don't know the next location.
	          message = hooks[i]();
	        }

	        return message;
	      }
	    }

	    var unlistenBefore = undefined,
	        unlistenBeforeUnload = undefined;

	    /**
	     * Registers the given hook function to run before leaving the given route.
	     *
	     * During a normal transition, the hook function receives the next location
	     * as its only argument and must return either a) a prompt message to show
	     * the user, to make sure they want to leave the page or b) false, to prevent
	     * the transition.
	     *
	     * During the beforeunload event (in browsers) the hook receives no arguments.
	     * In this case it must return a prompt message to prevent the transition.
	     *
	     * Returns a function that may be used to unbind the listener.
	     */
	    function listenBeforeLeavingRoute(route, hook) {
	      // TODO: Warn if they register for a route that isn't currently
	      // active. They're probably doing something wrong, like re-creating
	      // route objects on every location change.
	      var routeID = getRouteID(route);
	      var hooks = RouteHooks[routeID];

	      if (hooks == null) {
	        var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);

	        hooks = RouteHooks[routeID] = [hook];

	        if (thereWereNoRouteHooks) {
	          // setup transition & beforeunload hooks
	          unlistenBefore = history.listenBefore(transitionHook);

	          if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	        }
	      } else if (hooks.indexOf(hook) === -1) {
	        hooks.push(hook);
	      }

	      return function () {
	        var hooks = RouteHooks[routeID];

	        if (hooks != null) {
	          var newHooks = hooks.filter(function (item) {
	            return item !== hook;
	          });

	          if (newHooks.length === 0) {
	            delete RouteHooks[routeID];

	            if (!hasAnyProperties(RouteHooks)) {
	              // teardown transition & beforeunload hooks
	              if (unlistenBefore) {
	                unlistenBefore();
	                unlistenBefore = null;
	              }

	              if (unlistenBeforeUnload) {
	                unlistenBeforeUnload();
	                unlistenBeforeUnload = null;
	              }
	            }
	          } else {
	            RouteHooks[routeID] = newHooks;
	          }
	        }
	      };
	    }

	    /**
	     * This is the API for stateful environments. As the location
	     * changes, we update state and call the listener. We can also
	     * gracefully handle errors and redirects.
	     */
	    function listen(listener) {
	      // TODO: Only use a single history listener. Otherwise we'll
	      // end up with multiple concurrent calls to match.
	      return history.listen(function (location) {
	        if (state.location === location) {
	          listener(null, state);
	        } else {
	          match(location, function (error, redirectLocation, nextState) {
	            if (error) {
	              listener(error);
	            } else if (redirectLocation) {
	              history.transitionTo(redirectLocation);
	            } else if (nextState) {
	              listener(null, nextState);
	            } else {
	               false ? _warning2['default'](false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : undefined;
	            }
	          });
	        }
	      });
	    }

	    return _extends({}, history, {
	      isActive: isActive,
	      match: match,
	      listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	      listen: listen
	    });
	  };
	}

	exports['default'] = useRoutes;
	module.exports = exports['default'];

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _qs = __webpack_require__(188);

	var _qs2 = _interopRequireDefault(_qs);

	var _runTransitionHook = __webpack_require__(180);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _parsePath = __webpack_require__(178);

	var _parsePath2 = _interopRequireDefault(_parsePath);

	function defaultStringifyQuery(query) {
	  return _qs2['default'].stringify(query, { arrayFormat: 'brackets' }).replace(/%20/g, '+');
	}

	function defaultParseQueryString(queryString) {
	  return _qs2['default'].parse(queryString.replace(/\+/g, '%20'));
	}

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;

	    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);

	    var history = createHistory(historyOptions);

	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;

	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;

	    function addQuery(location) {
	      if (location.query == null) location.query = parseQueryString(location.search.substring(1));

	      return location;
	    }

	    function appendQuery(path, query) {
	      var queryString = undefined;
	      if (!query || (queryString = stringifyQuery(query)) === '') return path;

	      if (typeof path === 'string') path = _parsePath2['default'](path);

	      var search = path.search + (path.search ? '&' : '?') + queryString;

	      return _extends({}, path, {
	        search: search
	      });
	    }

	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }

	    // Override all write methods with query-aware versions.
	    function pushState(state, path, query) {
	      return history.pushState(state, appendQuery(path, query));
	    }

	    function replaceState(state, path, query) {
	      return history.replaceState(state, appendQuery(path, query));
	    }

	    function createPath(path, query) {
	      return history.createPath(appendQuery(path, query));
	    }

	    function createHref(path, query) {
	      return history.createHref(appendQuery(path, query));
	    }

	    function createLocation() {
	      return addQuery(history.createLocation.apply(history, arguments));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      pushState: pushState,
	      replaceState: replaceState,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	}

	exports['default'] = useQueries;
	module.exports = exports['default'];

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Stringify = __webpack_require__(189);
	var Parse = __webpack_require__(191);


	// Declare internals

	var internals = {};


	module.exports = {
	    stringify: Stringify,
	    parse: Parse
	};


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Utils = __webpack_require__(190);


	// Declare internals

	var internals = {
	    delimiter: '&',
	    arrayPrefixGenerators: {
	        brackets: function (prefix, key) {

	            return prefix + '[]';
	        },
	        indices: function (prefix, key) {

	            return prefix + '[' + key + ']';
	        },
	        repeat: function (prefix, key) {

	            return prefix;
	        }
	    },
	    strictNullHandling: false
	};


	internals.stringify = function (obj, prefix, generateArrayPrefix, strictNullHandling, filter) {

	    if (typeof filter === 'function') {
	        obj = filter(prefix, obj);
	    }
	    else if (Utils.isBuffer(obj)) {
	        obj = obj.toString();
	    }
	    else if (obj instanceof Date) {
	        obj = obj.toISOString();
	    }
	    else if (obj === null) {
	        if (strictNullHandling) {
	            return Utils.encode(prefix);
	        }

	        obj = '';
	    }

	    if (typeof obj === 'string' ||
	        typeof obj === 'number' ||
	        typeof obj === 'boolean') {

	        return [Utils.encode(prefix) + '=' + Utils.encode(obj)];
	    }

	    var values = [];

	    if (typeof obj === 'undefined') {
	        return values;
	    }

	    var objKeys = Array.isArray(filter) ? filter : Object.keys(obj);
	    for (var i = 0, il = objKeys.length; i < il; ++i) {
	        var key = objKeys[i];

	        if (Array.isArray(obj)) {
	            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, filter));
	        }
	        else {
	            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']', generateArrayPrefix, strictNullHandling, filter));
	        }
	    }

	    return values;
	};


	module.exports = function (obj, options) {

	    options = options || {};
	    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;
	    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;
	    var objKeys;
	    var filter;
	    if (typeof options.filter === 'function') {
	        filter = options.filter;
	        obj = filter('', obj);
	    }
	    else if (Array.isArray(options.filter)) {
	        objKeys = filter = options.filter;
	    }

	    var keys = [];

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return '';
	    }

	    var arrayFormat;
	    if (options.arrayFormat in internals.arrayPrefixGenerators) {
	        arrayFormat = options.arrayFormat;
	    }
	    else if ('indices' in options) {
	        arrayFormat = options.indices ? 'indices' : 'repeat';
	    }
	    else {
	        arrayFormat = 'indices';
	    }

	    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];

	    if (!objKeys) {
	        objKeys = Object.keys(obj);
	    }
	    for (var i = 0, il = objKeys.length; i < il; ++i) {
	        var key = objKeys[i];
	        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix, strictNullHandling, filter));
	    }

	    return keys.join(delimiter);
	};


/***/ },
/* 190 */
/***/ function(module, exports) {

	// Load modules


	// Declare internals

	var internals = {};
	internals.hexTable = new Array(256);
	for (var h = 0; h < 256; ++h) {
	    internals.hexTable[h] = '%' + ((h < 16 ? '0' : '') + h.toString(16)).toUpperCase();
	}


	exports.arrayToObject = function (source, options) {

	    var obj = options.plainObjects ? Object.create(null) : {};
	    for (var i = 0, il = source.length; i < il; ++i) {
	        if (typeof source[i] !== 'undefined') {

	            obj[i] = source[i];
	        }
	    }

	    return obj;
	};


	exports.merge = function (target, source, options) {

	    if (!source) {
	        return target;
	    }

	    if (typeof source !== 'object') {
	        if (Array.isArray(target)) {
	            target.push(source);
	        }
	        else if (typeof target === 'object') {
	            target[source] = true;
	        }
	        else {
	            target = [target, source];
	        }

	        return target;
	    }

	    if (typeof target !== 'object') {
	        target = [target].concat(source);
	        return target;
	    }

	    if (Array.isArray(target) &&
	        !Array.isArray(source)) {

	        target = exports.arrayToObject(target, options);
	    }

	    var keys = Object.keys(source);
	    for (var k = 0, kl = keys.length; k < kl; ++k) {
	        var key = keys[k];
	        var value = source[key];

	        if (!Object.prototype.hasOwnProperty.call(target, key)) {
	            target[key] = value;
	        }
	        else {
	            target[key] = exports.merge(target[key], value, options);
	        }
	    }

	    return target;
	};


	exports.decode = function (str) {

	    try {
	        return decodeURIComponent(str.replace(/\+/g, ' '));
	    } catch (e) {
	        return str;
	    }
	};

	exports.encode = function (str) {

	    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
	    // It has been adapted here for stricter adherence to RFC 3986
	    if (str.length === 0) {
	        return str;
	    }

	    if (typeof str !== 'string') {
	        str = '' + str;
	    }

	    var out = '';
	    for (var i = 0, il = str.length; i < il; ++i) {
	        var c = str.charCodeAt(i);

	        if (c === 0x2D || // -
	            c === 0x2E || // .
	            c === 0x5F || // _
	            c === 0x7E || // ~
	            (c >= 0x30 && c <= 0x39) || // 0-9
	            (c >= 0x41 && c <= 0x5A) || // a-z
	            (c >= 0x61 && c <= 0x7A)) { // A-Z

	            out += str[i];
	            continue;
	        }

	        if (c < 0x80) {
	            out += internals.hexTable[c];
	            continue;
	        }

	        if (c < 0x800) {
	            out += internals.hexTable[0xC0 | (c >> 6)] + internals.hexTable[0x80 | (c & 0x3F)];
	            continue;
	        }

	        if (c < 0xD800 || c >= 0xE000) {
	            out += internals.hexTable[0xE0 | (c >> 12)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
	            continue;
	        }

	        ++i;
	        c = 0x10000 + (((c & 0x3FF) << 10) | (str.charCodeAt(i) & 0x3FF));
	        out += internals.hexTable[0xF0 | (c >> 18)] + internals.hexTable[0x80 | ((c >> 12) & 0x3F)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
	    }

	    return out;
	};

	exports.compact = function (obj, refs) {

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return obj;
	    }

	    refs = refs || [];
	    var lookup = refs.indexOf(obj);
	    if (lookup !== -1) {
	        return refs[lookup];
	    }

	    refs.push(obj);

	    if (Array.isArray(obj)) {
	        var compacted = [];

	        for (var i = 0, il = obj.length; i < il; ++i) {
	            if (typeof obj[i] !== 'undefined') {
	                compacted.push(obj[i]);
	            }
	        }

	        return compacted;
	    }

	    var keys = Object.keys(obj);
	    for (i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        obj[key] = exports.compact(obj[key], refs);
	    }

	    return obj;
	};


	exports.isRegExp = function (obj) {

	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};


	exports.isBuffer = function (obj) {

	    if (obj === null ||
	        typeof obj === 'undefined') {

	        return false;
	    }

	    return !!(obj.constructor &&
	              obj.constructor.isBuffer &&
	              obj.constructor.isBuffer(obj));
	};


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Utils = __webpack_require__(190);


	// Declare internals

	var internals = {
	    delimiter: '&',
	    depth: 5,
	    arrayLimit: 20,
	    parameterLimit: 1000,
	    strictNullHandling: false,
	    plainObjects: false,
	    allowPrototypes: false
	};


	internals.parseValues = function (str, options) {

	    var obj = {};
	    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

	    for (var i = 0, il = parts.length; i < il; ++i) {
	        var part = parts[i];
	        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

	        if (pos === -1) {
	            obj[Utils.decode(part)] = '';

	            if (options.strictNullHandling) {
	                obj[Utils.decode(part)] = null;
	            }
	        }
	        else {
	            var key = Utils.decode(part.slice(0, pos));
	            var val = Utils.decode(part.slice(pos + 1));

	            if (!Object.prototype.hasOwnProperty.call(obj, key)) {
	                obj[key] = val;
	            }
	            else {
	                obj[key] = [].concat(obj[key]).concat(val);
	            }
	        }
	    }

	    return obj;
	};


	internals.parseObject = function (chain, val, options) {

	    if (!chain.length) {
	        return val;
	    }

	    var root = chain.shift();

	    var obj;
	    if (root === '[]') {
	        obj = [];
	        obj = obj.concat(internals.parseObject(chain, val, options));
	    }
	    else {
	        obj = options.plainObjects ? Object.create(null) : {};
	        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
	        var index = parseInt(cleanRoot, 10);
	        var indexString = '' + index;
	        if (!isNaN(index) &&
	            root !== cleanRoot &&
	            indexString === cleanRoot &&
	            index >= 0 &&
	            (options.parseArrays &&
	             index <= options.arrayLimit)) {

	            obj = [];
	            obj[index] = internals.parseObject(chain, val, options);
	        }
	        else {
	            obj[cleanRoot] = internals.parseObject(chain, val, options);
	        }
	    }

	    return obj;
	};


	internals.parseKeys = function (key, val, options) {

	    if (!key) {
	        return;
	    }

	    // Transform dot notation to bracket notation

	    if (options.allowDots) {
	        key = key.replace(/\.([^\.\[]+)/g, '[$1]');
	    }

	    // The regex chunks

	    var parent = /^([^\[\]]*)/;
	    var child = /(\[[^\[\]]*\])/g;

	    // Get the parent

	    var segment = parent.exec(key);

	    // Stash the parent if it exists

	    var keys = [];
	    if (segment[1]) {
	        // If we aren't using plain objects, optionally prefix keys
	        // that would overwrite object prototype properties
	        if (!options.plainObjects &&
	            Object.prototype.hasOwnProperty(segment[1])) {

	            if (!options.allowPrototypes) {
	                return;
	            }
	        }

	        keys.push(segment[1]);
	    }

	    // Loop through children appending to the array until we hit depth

	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {

	        ++i;
	        if (!options.plainObjects &&
	            Object.prototype.hasOwnProperty(segment[1].replace(/\[|\]/g, ''))) {

	            if (!options.allowPrototypes) {
	                continue;
	            }
	        }
	        keys.push(segment[1]);
	    }

	    // If there's a remainder, just add whatever is left

	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }

	    return internals.parseObject(keys, val, options);
	};


	module.exports = function (str, options) {

	    options = options || {};
	    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;
	    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;
	    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;
	    options.parseArrays = options.parseArrays !== false;
	    options.allowDots = options.allowDots !== false;
	    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;
	    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;
	    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;
	    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;

	    if (str === '' ||
	        str === null ||
	        typeof str === 'undefined') {

	        return options.plainObjects ? Object.create(null) : {};
	    }

	    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;
	    var obj = options.plainObjects ? Object.create(null) : {};

	    // Iterate over the keys and setup the new object

	    var keys = Object.keys(tempObj);
	    for (var i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        var newObj = internals.parseKeys(key, tempObj[key], options);
	        obj = Utils.merge(obj, newObj, options);
	    }

	    return Utils.compact(obj);
	};


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(185);

	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;

	  var paramNames = _PatternUtils.getParamNames(route.path);

	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}

	/**
	 * Returns an object of { leaveRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;

	  var leaveRoutes = undefined,
	      enterRoutes = undefined;
	  if (prevRoutes) {
	    leaveRoutes = prevRoutes.filter(function (route) {
	      return nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	    });

	    // onLeave hooks start at the leaf route.
	    leaveRoutes.reverse();

	    enterRoutes = nextRoutes.filter(function (route) {
	      return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;
	    });
	  } else {
	    leaveRoutes = [];
	    enterRoutes = nextRoutes;
	  }

	  return {
	    leaveRoutes: leaveRoutes,
	    enterRoutes: enterRoutes
	  };
	}

	exports['default'] = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runLeaveHooks = runLeaveHooks;

	var _AsyncUtils = __webpack_require__(194);

	function createEnterHook(hook, route) {
	  return function (a, b, callback) {
	    hook.apply(route, arguments);

	    if (hook.length < 3) {
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}

	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createEnterHook(route.onEnter, route));

	    return hooks;
	  }, []);
	}

	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replaceState, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replaceState short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */

	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);

	  if (!hooks.length) {
	    callback();
	    return;
	  }

	  var redirectInfo = undefined;
	  function replaceState(state, pathname, query) {
	    redirectInfo = { pathname: pathname, query: query, state: state };
	  }

	  _AsyncUtils.loopAsync(hooks.length, function (index, next, done) {
	    hooks[index](nextState, replaceState, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	          next();
	        }
	    });
	  }, callback);
	}

	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */

	function runLeaveHooks(routes) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i]);
	  }
	}

/***/ },
/* 194 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;

	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;

	  function done() {
	    isDone = true;
	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) return;

	    if (currentTurn < turns) {
	      work.call(this, currentTurn++, next, done);
	    } else {
	      done.apply(this, arguments);
	    }
	  }

	  next();
	}

	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];

	  if (length === 0) return callback(null, values);

	  var isDone = false,
	      doneCount = 0;

	  function done(index, error, value) {
	    if (isDone) return;

	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;

	      isDone = ++doneCount === length;

	      if (isDone) callback(null, values);
	    }
	  }

	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(185);

	function deepEqual(a, b) {
	  if (a == b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }

	  if (typeof a === 'object') {
	    for (var p in a) {
	      if (!a.hasOwnProperty(p)) {
	        continue;
	      }

	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!b.hasOwnProperty(p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }

	    return true;
	  }

	  return String(a) === String(b);
	}

	function paramsAreActive(paramNames, paramValues, activeParams) {
	  // FIXME: This doesn't work on repeated params in activeParams.
	  return paramNames.every(function (paramName, index) {
	    return String(paramValues[index]) === String(activeParams[paramName]);
	  });
	}

	function getMatchingRouteIndex(pathname, activeRoutes, activeParams) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];

	  for (var i = 0, len = activeRoutes.length; i < len; ++i) {
	    var route = activeRoutes[i];
	    var pattern = route.path || '';

	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }

	    if (remainingPathname !== null) {
	      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);
	      remainingPathname = matched.remainingPathname;
	      paramNames = [].concat(paramNames, matched.paramNames);
	      paramValues = [].concat(paramValues, matched.paramValues);
	    }

	    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;
	  }

	  return null;
	}

	/**
	 * Returns true if the given pathname matches the active routes
	 * and params.
	 */
	function routeIsActive(pathname, routes, params, indexOnly) {
	  var i = getMatchingRouteIndex(pathname, routes, params);

	  if (i === null) {
	    // No match.
	    return false;
	  } else if (!indexOnly) {
	    // Any match is good enough.
	    return true;
	  }

	  // If any remaining routes past the match index have paths, then we can't
	  // be on the index route.
	  return routes.slice(i + 1).every(function (route) {
	    return !route.path;
	  });
	}

	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;

	  if (query == null) return true;

	  return deepEqual(query, activeQuery);
	}

	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(pathname, query, indexOnly, location, routes, params) {
	  if (location == null) return false;

	  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;

	  return queryIsActive(query, location.query);
	}

	exports['default'] = isActive;
	module.exports = exports['default'];

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _AsyncUtils = __webpack_require__(194);

	function getComponentsForRoute(location, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	  } else if (route.getComponent) {
	    route.getComponent(location, callback);
	  } else if (route.getComponents) {
	    route.getComponents(location, callback);
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  _AsyncUtils.mapAsync(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState.location, route, callback);
	  }, callback);
	}

	exports['default'] = getComponents;
	module.exports = exports['default'];

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _AsyncUtils = __webpack_require__(194);

	var _PatternUtils = __webpack_require__(185);

	var _RouteUtils = __webpack_require__(182);

	function getChildRoutes(route, location, callback) {
	  if (route.childRoutes) {
	    callback(null, route.childRoutes);
	  } else if (route.getChildRoutes) {
	    route.getChildRoutes(location, function (error, childRoutes) {
	      callback(error, !error && _RouteUtils.createRoutes(childRoutes));
	    });
	  } else {
	    callback();
	  }
	}

	function getIndexRoute(route, location, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    route.getIndexRoute(location, function (error, indexRoute) {
	      callback(error, !error && _RouteUtils.createRoutes(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (obj) {
	        return !obj.hasOwnProperty('path');
	      });

	      _AsyncUtils.loopAsync(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}

	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];

	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }

	    return params;
	  }, params);
	}

	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}

	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';

	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }

	  if (remainingPathname !== null) {
	    var matched = _PatternUtils.matchPattern(pattern, remainingPathname);
	    remainingPathname = matched.remainingPathname;
	    paramNames = [].concat(paramNames, matched.paramNames);
	    paramValues = [].concat(paramValues, matched.paramValues);

	    if (remainingPathname === '' && route.path) {
	      var _ret2 = (function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };

	        getIndexRoute(route, location, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;

	               false ? _warning2['default'](indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : undefined;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	               false ? _warning2['default'](!indexRoute.path, 'Index routes should not have paths') : undefined;
	              match.routes.push(indexRoute);
	            }

	            callback(null, match);
	          }
	        });
	        return {
	          v: undefined
	        };
	      })();

	      if (typeof _ret2 === 'object') return _ret2.v;
	    }
	  }

	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    getChildRoutes(route, location, function (error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    });
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback) {
	  var remainingPathname = arguments.length <= 3 || arguments[3] === undefined ? location.pathname : arguments[3];
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
	  return (function () {
	    _AsyncUtils.loopAsync(routes.length, function (index, next, done) {
	      matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	        if (error || match) {
	          done(error, match);
	        } else {
	          next();
	        }
	      });
	    }, callback);
	  })();
	}

	exports['default'] = matchRoutes;
	module.exports = exports['default'];

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.falsy = falsy;

	var _react = __webpack_require__(2);

	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;

	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}

	var history = shape({
	  listen: func.isRequired,
	  pushState: func.isRequired,
	  replaceState: func.isRequired,
	  go: func.isRequired
	});

	exports.history = history;
	var location = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});

	exports.location = location;
	var component = oneOfType([func, string]);
	exports.component = component;
	var components = oneOfType([component, object]);
	exports.components = components;
	var route = oneOfType([object, element]);
	exports.route = route;
	var routes = oneOfType([route, arrayOf(route)]);

	exports.routes = routes;
	exports['default'] = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route
	};

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _React$PropTypes = _react2['default'].PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;

	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	function isEmptyObject(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p)) return false;
	  }return true;
	}

	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * `activeClassName` prop
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */

	var Link = (function (_Component) {
	  _inherits(Link, _Component);

	  function Link() {
	    _classCallCheck(this, Link);

	    _Component.apply(this, arguments);
	  }

	  Link.prototype.handleClick = function handleClick(event) {
	    var allowTransition = true;

	    if (this.props.onClick) this.props.onClick(event);

	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

	    if (event.defaultPrevented === true) allowTransition = false;

	    // If target prop is set (e.g. to "_blank") let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) {
	      if (!allowTransition) event.preventDefault();

	      return;
	    }

	    event.preventDefault();

	    if (allowTransition) {
	      var _props = this.props;
	      var state = _props.state;
	      var to = _props.to;
	      var query = _props.query;
	      var hash = _props.hash;

	      if (hash) to += hash;

	      this.context.history.pushState(state, to, query);
	    }
	  };

	  Link.prototype.render = function render() {
	    var _this = this;

	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;

	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);

	    // Manually override onClick.
	    props.onClick = function (e) {
	      return _this.handleClick(e);
	    };

	    // Ignore if rendered outside the context of history, simplifies unit testing.
	    var history = this.context.history;

	    if (history) {
	      props.href = history.createHref(to, query);

	      if (hash) props.href += hash;

	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (history.isActive(to, query, onlyActiveOnIndex)) {
	          if (activeClassName) props.className += props.className === '' ? activeClassName : ' ' + activeClassName;

	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }

	    return _react2['default'].createElement('a', props);
	  };

	  return Link;
	})(_react.Component);

	Link.contextTypes = {
	  history: object
	};

	Link.propTypes = {
	  to: string.isRequired,
	  query: object,
	  hash: string,
	  state: object,
	  activeStyle: object,
	  activeClassName: string,
	  onlyActiveOnIndex: bool.isRequired,
	  onClick: func
	};

	Link.defaultProps = {
	  onlyActiveOnIndex: false,
	  className: '',
	  style: {}
	};

	exports['default'] = Link;
	module.exports = exports['default'];

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Link = __webpack_require__(199);

	var _Link2 = _interopRequireDefault(_Link);

	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */

	var IndexLink = (function (_Component) {
	  _inherits(IndexLink, _Component);

	  function IndexLink() {
	    _classCallCheck(this, IndexLink);

	    _Component.apply(this, arguments);
	  }

	  IndexLink.prototype.render = function render() {
	    return _react2['default'].createElement(_Link2['default'], _extends({}, this.props, { onlyActiveOnIndex: true }));
	  };

	  return IndexLink;
	})(_react.Component);

	exports['default'] = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Redirect = __webpack_require__(202);

	var _Redirect2 = _interopRequireDefault(_Redirect);

	var _PropTypes = __webpack_require__(198);

	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;

	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */

	var IndexRedirect = (function (_Component) {
	  _inherits(IndexRedirect, _Component);

	  function IndexRedirect() {
	    _classCallCheck(this, IndexRedirect);

	    _Component.apply(this, arguments);
	  }

	  /* istanbul ignore next: sanity check */

	  IndexRedirect.prototype.render = function render() {
	     true ?  false ? _invariant2['default'](false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };

	  return IndexRedirect;
	})(_react.Component);

	IndexRedirect.propTypes = {
	  to: string.isRequired,
	  query: object,
	  state: object,
	  onEnter: _PropTypes.falsy,
	  children: _PropTypes.falsy
	};

	IndexRedirect.createRouteFromReactElement = function (element, parentRoute) {
	  /* istanbul ignore else: sanity check */
	  if (parentRoute) {
	    parentRoute.indexRoute = _Redirect2['default'].createRouteFromReactElement(element);
	  } else {
	     false ? _warning2['default'](false, 'An <IndexRedirect> does not make sense at the root of your route config') : undefined;
	  }
	};

	exports['default'] = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouteUtils = __webpack_require__(182);

	var _PatternUtils = __webpack_require__(185);

	var _PropTypes = __webpack_require__(198);

	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;

	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */

	var Redirect = (function (_Component) {
	  _inherits(Redirect, _Component);

	  function Redirect() {
	    _classCallCheck(this, Redirect);

	    _Component.apply(this, arguments);
	  }

	  /* istanbul ignore next: sanity check */

	  Redirect.prototype.render = function render() {
	     true ?  false ? _invariant2['default'](false, '<Redirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };

	  return Redirect;
	})(_react.Component);

	Redirect.createRouteFromReactElement = function (element) {
	  var route = _RouteUtils.createRouteFromReactElement(element);

	  if (route.from) route.path = route.from;

	  route.onEnter = function (nextState, replaceState) {
	    var location = nextState.location;
	    var params = nextState.params;

	    var pathname = undefined;
	    if (route.to.charAt(0) === '/') {
	      pathname = _PatternUtils.formatPattern(route.to, params);
	    } else if (!route.to) {
	      pathname = location.pathname;
	    } else {
	      var routeIndex = nextState.routes.indexOf(route);
	      var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	      var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	      pathname = _PatternUtils.formatPattern(pattern, params);
	    }

	    replaceState(route.state || location.state, pathname, route.query || location.query);
	  };

	  return route;
	};

	Redirect.getRoutePattern = function (routes, routeIndex) {
	  var parentPattern = '';

	  for (var i = routeIndex; i >= 0; i--) {
	    var route = routes[i];
	    var pattern = route.path || '';
	    parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;

	    if (pattern.indexOf('/') === 0) break;
	  }

	  return '/' + parentPattern;
	};

	Redirect.propTypes = {
	  path: string,
	  from: string, // Alias for path
	  to: string.isRequired,
	  query: object,
	  state: object,
	  onEnter: _PropTypes.falsy,
	  children: _PropTypes.falsy
	};

	exports['default'] = Redirect;
	module.exports = exports['default'];

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _warning = __webpack_require__(164);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouteUtils = __webpack_require__(182);

	var _PropTypes = __webpack_require__(198);

	var func = _react2['default'].PropTypes.func;

	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */

	var IndexRoute = (function (_Component) {
	  _inherits(IndexRoute, _Component);

	  function IndexRoute() {
	    _classCallCheck(this, IndexRoute);

	    _Component.apply(this, arguments);
	  }

	  /* istanbul ignore next: sanity check */

	  IndexRoute.prototype.render = function render() {
	     true ?  false ? _invariant2['default'](false, '<IndexRoute> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };

	  return IndexRoute;
	})(_react.Component);

	IndexRoute.propTypes = {
	  path: _PropTypes.falsy,
	  component: _PropTypes.component,
	  components: _PropTypes.components,
	  getComponent: func,
	  getComponents: func
	};

	IndexRoute.createRouteFromReactElement = function (element, parentRoute) {
	  /* istanbul ignore else: sanity check */
	  if (parentRoute) {
	    parentRoute.indexRoute = _RouteUtils.createRouteFromReactElement(element);
	  } else {
	     false ? _warning2['default'](false, 'An <IndexRoute> does not make sense at the root of your route config') : undefined;
	  }
	};

	exports['default'] = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouteUtils = __webpack_require__(182);

	var _PropTypes = __webpack_require__(198);

	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;

	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */

	var Route = (function (_Component) {
	  _inherits(Route, _Component);

	  function Route() {
	    _classCallCheck(this, Route);

	    _Component.apply(this, arguments);
	  }

	  /* istanbul ignore next: sanity check */

	  Route.prototype.render = function render() {
	     true ?  false ? _invariant2['default'](false, '<Route> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };

	  return Route;
	})(_react.Component);

	Route.createRouteFromReactElement = _RouteUtils.createRouteFromReactElement;

	Route.propTypes = {
	  path: string,
	  component: _PropTypes.component,
	  components: _PropTypes.components,
	  getComponent: func,
	  getComponents: func
	};

	exports['default'] = Route;
	module.exports = exports['default'];

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PropTypes = __webpack_require__(198);

	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {

	  contextTypes: {
	    history: _PropTypes.history
	  },

	  componentWillMount: function componentWillMount() {
	    this.history = this.context.history;
	  }

	};

	exports['default'] = History;
	module.exports = exports['default'];

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var object = _react2['default'].PropTypes.object;

	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */
	var Lifecycle = {

	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },

	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },

	  componentDidMount: function componentDidMount() {
	    !this.routerWillLeave ?  false ? _invariant2['default'](false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : _invariant2['default'](false) : undefined;

	    var route = this.props.route || this.context.route;

	    !route ?  false ? _invariant2['default'](false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : _invariant2['default'](false) : undefined;

	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }

	};

	exports['default'] = Lifecycle;
	module.exports = exports['default'];

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var object = _react2['default'].PropTypes.object;

	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */
	var RouteContext = {

	  propTypes: {
	    route: object.isRequired
	  },

	  childContextTypes: {
	    route: object.isRequired
	  },

	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  }

	};

	exports['default'] = RouteContext;
	module.exports = exports['default'];

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _historyLibCreateMemoryHistory = __webpack_require__(209);

	var _historyLibCreateMemoryHistory2 = _interopRequireDefault(_historyLibCreateMemoryHistory);

	var _historyLibUseBasename = __webpack_require__(210);

	var _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);

	var _RouteUtils = __webpack_require__(182);

	var _useRoutes = __webpack_require__(186);

	var _useRoutes2 = _interopRequireDefault(_useRoutes);

	var createHistory = _useRoutes2['default'](_historyLibUseBasename2['default'](_historyLibCreateMemoryHistory2['default']));

	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser. Use
	 * the history.listen API instead.
	 */
	function match(_ref, callback) {
	  var routes = _ref.routes;
	  var location = _ref.location;
	  var parseQueryString = _ref.parseQueryString;
	  var stringifyQuery = _ref.stringifyQuery;
	  var basename = _ref.basename;

	  !location ?  false ? _invariant2['default'](false, 'match needs a location') : _invariant2['default'](false) : undefined;

	  var history = createHistory({
	    routes: _RouteUtils.createRoutes(routes),
	    parseQueryString: parseQueryString,
	    stringifyQuery: stringifyQuery,
	    basename: basename
	  });

	  // Allow match({ location: '/the/path', ... })
	  if (typeof location === 'string') location = history.createLocation(location);

	  history.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation, nextState && _extends({}, nextState, { history: history }));
	  });
	}

	exports['default'] = match;
	module.exports = exports['default'];

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(167);

	var _createHistory = __webpack_require__(172);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}

	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }

	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));

	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;

	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }

	  entries = entries.map(function (entry) {
	    var key = history.createKey();

	    if (typeof entry === 'string') return { pathname: entry, key: key };

	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });

	     true ?  false ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });

	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  false ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }

	  var storage = createStateStorage(entries);

	  function saveState(key, state) {
	    storage[key] = state;
	  }

	  function readState(key) {
	    return storage[key];
	  }

	  function getCurrentLocation() {
	    var entry = entries[current];
	    var key = entry.key;
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;

	    var path = (basename || '') + pathname + (search || '');

	    var state = undefined;
	    if (key) {
	      state = readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	      entry.key = key;
	    }

	    return history.createLocation(path, state, undefined, key);
	  }

	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }

	  function go(n) {
	    if (n) {
	      !canGo(n) ?  false ? _invariant2['default'](false, 'Cannot go(%s) there is not enough history', n) : _invariant2['default'](false) : undefined;

	      current += n;

	      var currentLocation = getCurrentLocation();

	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }

	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;

	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);

	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }

	  return history;
	}

	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _ExecutionEnvironment = __webpack_require__(168);

	var _runTransitionHook = __webpack_require__(180);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _extractPath = __webpack_require__(179);

	var _extractPath2 = _interopRequireDefault(_extractPath);

	var _parsePath = __webpack_require__(178);

	var _parsePath2 = _interopRequireDefault(_parsePath);

	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var basename = options.basename;

	    var historyOptions = _objectWithoutProperties(options, ['basename']);

	    var history = createHistory(historyOptions);

	    // Automatically use the value of <base href> in HTML
	    // documents as basename if it's not explicitly given.
	    if (basename == null && _ExecutionEnvironment.canUseDOM) {
	      var base = document.getElementsByTagName('base')[0];

	      if (base) basename = _extractPath2['default'](base.href);
	    }

	    function addBasename(location) {
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;

	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }

	      return location;
	    }

	    function prependBasename(path) {
	      if (!basename) return path;

	      if (typeof path === 'string') path = _parsePath2['default'](path);

	      var pname = path.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;

	      return _extends({}, path, {
	        pathname: pathname
	      });
	    }

	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }

	    // Override all write methods with basename-aware versions.
	    function pushState(state, path) {
	      history.pushState(state, prependBasename(path));
	    }

	    function push(path) {
	      pushState(null, path);
	    }

	    function replaceState(state, path) {
	      history.replaceState(state, prependBasename(path));
	    }

	    function replace(path) {
	      replaceState(null, path);
	    }

	    function createPath(path) {
	      return history.createPath(prependBasename(path));
	    }

	    function createHref(path) {
	      return history.createHref(prependBasename(path));
	    }

	    function createLocation() {
	      return addBasename(history.createLocation.apply(history, arguments));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      pushState: pushState,
	      push: push,
	      replaceState: replaceState,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	}

	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.go = go;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _historyLibCreateBrowserHistory = __webpack_require__(212);

	var _historyLibCreateBrowserHistory2 = _interopRequireDefault(_historyLibCreateBrowserHistory);

	var _configNavConfig = __webpack_require__(159);

	var _configNavConfig2 = _interopRequireDefault(_configNavConfig);

	var history = (0, _historyLibCreateBrowserHistory2['default'])();

	function go(path) {
	  if (_configNavConfig2['default'].some(function (m) {
	    return m.link.some(function (n) {
	      return n.link == path;
	    });
	  })) {
	    history.push(path);
	    // $('#nav').find('a').each(function(){
	    //   if(this.getAttribute('href') == path){
	    //     $(this).trigger('click')
	    //   }
	    // });
	  } else {
	      throw Error('error path');
	    }
	}

	exports['default'] = history;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(167);

	var _ExecutionEnvironment = __webpack_require__(168);

	var _DOMUtils = __webpack_require__(169);

	var _DOMStateStorage = __webpack_require__(170);

	var _createDOMHistory = __webpack_require__(171);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;

	  var forceRefresh = options.forceRefresh;

	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;

	  function getCurrentLocation(historyState) {
	    historyState = historyState || window.history.state || {};

	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;

	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();

	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);
	    }

	    return history.createLocation(path, state, undefined, key);
	  }

	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

	      transitionTo(getCurrentLocation(event.state));
	    }

	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    _DOMStateStorage.saveState(key, state);

	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };

	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopPopStateListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopPopStateListener();
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}

	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsIndex = __webpack_require__(160);

	var _utilsCookie = __webpack_require__(214);

	var _utilsCookie2 = _interopRequireDefault(_utilsCookie);

	var _configAppConfig = __webpack_require__(157);

	var Header = (function (_Component) {
	  _inherits(Header, _Component);

	  function Header(props) {
	    _classCallCheck(this, Header);

	    _get(Object.getPrototypeOf(Header.prototype), 'constructor', this).call(this, props);
	    var now = new Date();
	    var user = window.xfxb.user;

	    if (typeof user == 'string') {
	      user = JSON.parse(user);
	    }
	    this.state = {
	      usermenu_open: false,
	      time: (0, _utilsIndex.dateFormat)(new Date()),
	      day: now.getDay(),
	      weekday: ['日', '一', '二', '三', '四', '五', '六'],
	      user: user || {}
	    };
	  }

	  _createClass(Header, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'header-section' },
	        _react2['default'].createElement(
	          'a',
	          { className: 'toggle-btn menu-collapsed', onClick: this.handleNavCollapse },
	          _react2['default'].createElement('i', { className: 'fa fa-bars' })
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'menu-right' },
	          _react2['default'].createElement(
	            'ul',
	            { className: 'notification-menu', id: 'notification-menu' },
	            _react2['default'].createElement(
	              'li',
	              { className: 'timer' },
	              this.state.time + '  星期' + this.state.weekday[this.state.day]
	            ),
	            _react2['default'].createElement(
	              'li',
	              { className: this.state.usermenu_open ? 'open' : '' },
	              _react2['default'].createElement(
	                'a',
	                { href: '#', className: 'btn btn-default dropdown-toggle',
	                  onClick: this.showUserMenu.bind(this), 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	                this.state.user.name || '--',
	                _react2['default'].createElement('span', { className: 'caret' })
	              ),
	              _react2['default'].createElement(
	                'ul',
	                { className: 'dropdown-menu dropdown-menu-usermenu pull-right' },
	                _react2['default'].createElement(
	                  'li',
	                  null,
	                  _react2['default'].createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2['default'].createElement('i', { className: 'fa fa-user' }),
	                    '  个人'
	                  )
	                ),
	                _react2['default'].createElement(
	                  'li',
	                  null,
	                  _react2['default'].createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2['default'].createElement('i', { className: 'fa fa-cog' }),
	                    '  设置'
	                  )
	                ),
	                _react2['default'].createElement(
	                  'li',
	                  null,
	                  _react2['default'].createElement(
	                    'a',
	                    { href: 'javascript:;', onClick: this.logout.bind(this) },
	                    _react2['default'].createElement('i', { className: 'fa fa-sign-out' }),
	                    ' 退出'
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'handleNavCollapse',
	    value: function handleNavCollapse() {
	      var $app = $('#app-container');
	      var c = _configAppConfig.NAV_COLLAPSED_CLASS;
	      if ($app.hasClass(c)) {
	        $app.removeClass(c);
	        _utilsCookie2['default'].set(_configAppConfig.NAV_COLLAPSED_COOKIE, _configAppConfig.NAV_COLLAPSED_COOKIE_NO);
	      } else {
	        $app.addClass(c);
	        $app.find('.sub-menu-list').each(function () {
	          this.style.display = '';
	        });
	        _utilsCookie2['default'].set(_configAppConfig.NAV_COLLAPSED_COOKIE, _configAppConfig.NAV_COLLAPSED_COOKIE_YES);
	      }
	    }
	  }, {
	    key: 'showUserMenu',
	    value: function showUserMenu() {
	      // this.setState({
	      //   usermenu_open: !this.state.usermenu_open
	      // })
	    }
	  }, {
	    key: 'logout',
	    value: function logout() {
	      location.href = "/logout";
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this = this;

	      // $('body').on('click', this.hideDropDown);
	      // $('#notification-menu').on('click', '.dropdown-menu', this.stopPropagation);
	      this.timer = setInterval(function () {
	        var now = new Date();
	        if (now.getDay() != _this.state.day) {
	          _this.setState({
	            time: (0, _utilsIndex.dateFormat)(now),
	            day: now.getDay()
	          });
	        }
	      }, 500);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {}
	    // $('body').off('click', this.hideDropDown);
	    // $('#notification-menu').off('click', this.stopPropagation);

	    // hideDropDown(e){
	    //   $('#notification-menu').find('li.open').removeClass('open');
	    // }
	    // stopPropagation(e){
	    //   e.stopPropagation();
	    //   return false;
	    // }
	
	  }]);

	  return Header;
	})(_react.Component);

	exports['default'] = Header;
	module.exports = exports['default'];
	/*<img src="http://www.qq1234.org/uploads/allimg/141119/2252043613-8.png" alt="" />*/

/***/ },
/* 214 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	var Cookie = {
	  cookieAPI: {
	    get: function get(name) {
	      var nameEQ = name + "=";
	      var ca = document.cookie.split(';'); //把cookie分割成组   
	      for (var i = 0; i < ca.length; i++) {
	        var c = ca[i]; //取得字符串   
	        while (c.charAt(0) == ' ') {
	          //判断一下字符串有没有前导空格   
	          c = c.substring(1, c.length); //有的话，从第二位开始取  
	        }
	        if (c.indexOf(nameEQ) == 0) {
	          //如果含有我们要的name   
	          return unescape(c.substring(nameEQ.length, c.length)); //解码并截取我们要值  
	        }
	      }
	      return false;
	    },
	    set: function set(name, value, options) {
	      if (Cookie.isPlainObject(name)) {
	        for (var k in name) {
	          if (name.hasOwnProperty(k)) this.set(k, name[k], value);
	        }
	      } else {
	        var opt = Cookie.isPlainObject(options) ? options : { expires: options },
	            expires = opt.expires !== undefined ? opt.expires : '',
	            expiresType = typeof expires,
	            path = opt.path !== undefined ? ';path=' + opt.path : ';path=/',
	            domain = opt.domain ? ';domain=' + opt.domain : '',
	            secure = opt.secure ? ';secure' : '';

	        //过期时间
	        if (expiresType === 'string' && expires !== '') expires = new Date(expires);else if (expiresType === 'number') expires = new Date(+new Date() + 1000 * 60 * 60 * 24 * expires);
	        if (expires !== '' && 'toGMTString' in expires) expires = ';expires=' + expires.toGMTString();

	        document.cookie = name + "=" + escape(value) + expires + path + domain + secure; //转码并赋值  
	      }
	    },
	    remove: function remove(names) {
	      names = Cookie.isArray(names) ? names : Cookie.toArray(arguments);
	      for (var i = 0, l = names.length; i < l; i++) {
	        this.set(names[i], '', -1);
	      }
	      return names;
	    },
	    clear: function clear(name) {
	      return this.remove(Cookie.getKeys(this.all()));
	    },
	    all: function all() {
	      if (document.cookie === '') return {};
	      var cookies = document.cookie.split('; '),
	          result = {};
	      for (var i = 0, l = cookies.length; i < l; i++) {
	        var item = cookies[i].split('=');
	        result[unescape(item[0])] = unescape(item[1]);
	      }
	      return result;
	    }
	  },
	  getKeys: Object.names || function (obj) {
	    var names = [],
	        name = '';
	    for (name in obj) {
	      if (obj.hasOwnProperty(name)) names.push(name);
	    }
	    return names;
	  },
	  isPlainObject: function isPlainObject(value) {
	    return !!value && Object.prototype.toString.call(value) === '[object Object]';
	  },
	  isArray: function isArray(value) {
	    return value instanceof Array;
	  },
	  toArray: function toArray(value) {
	    return Array.prototype.slice.call(value);
	  }
	};
	var cookie = function cookie(name, value, options) {
	  var argm = arguments,
	      _cookie = function _cookie() {
	    if (argm.length === 0) return cookie.clear();
	    if (Cookie.isPlainObject(name) || argm.length > 1 && name && value) return cookie.set(name, value, options);
	    if (value === null) return cookie.remove(name);
	    if (argm.length === 1) return cookie.get(name);
	    return cookie.all();
	  };
	  return _cookie();
	};
	for (var a in Cookie.cookieAPI) cookie[a] = Cookie.cookieAPI[a];

	exports['default'] = cookie;
	module.exports = exports['default'];

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _configAppConfig = __webpack_require__(157);

	var _configAppConfig2 = _interopRequireDefault(_configAppConfig);

	var _reactRedux = __webpack_require__(216);

	var _actionsLogin = __webpack_require__(233);

	var _history = __webpack_require__(211);

	var _history2 = _interopRequireDefault(_history);

	var Login = _react2['default'].createClass({
	  displayName: 'Login',

	  render: function render() {
	    var _props = this.props;
	    var login_ing = _props.login_ing;
	    var validate = _props.validate;
	    var error_msg = _props.error_msg;
	    var username = _props.username;
	    var password = _props.password;

	    // validate && $('body').addClass('login-hide'); //通过

	    return _react2['default'].createElement(
	      'div',
	      { ref: 'me', className: 'login-container' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'container' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-signin' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'form-signin-heading text-center' },
	            _react2['default'].createElement('img', { src: _configAppConfig2['default'].root + "images/logo.png", alt: '' })
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'login-wrap' },
	            _react2['default'].createElement('input', { value: username, ref: 'username',
	              onChange: this.onUsernameChange, type: 'text', className: 'form-control', placeholder: '用户名', autofocus: '' }),
	            _react2['default'].createElement('input', { value: password, ref: 'password',
	              onChange: this.onPasswordChange, onKeyDown: this.onEnterHandler, type: 'password', className: 'form-control', placeholder: '密码' }),
	            _react2['default'].createElement(
	              'div',
	              { className: 'error-msg' },
	              error_msg
	            ),
	            _react2['default'].createElement(
	              'button',
	              { disabled: login_ing, onClick: this.login, className: 'btn-login btn-block' },
	              '登录'
	            ),
	            _react2['default'].createElement(
	              'div',
	              { className: 'registration hidden' },
	              '没有账号?',
	              _react2['default'].createElement(
	                'a',
	                { className: '', href: 'registration.html' },
	                '注册'
	              )
	            ),
	            _react2['default'].createElement(
	              'label',
	              { className: 'checkbox hidden' },
	              _react2['default'].createElement('input', { type: 'checkbox', value: 'remember-me' }),
	              ' 记住我',
	              _react2['default'].createElement(
	                'span',
	                { className: 'pull-right' },
	                _react2['default'].createElement(
	                  'a',
	                  { 'data-toggle': 'modal', href: '#myModal' },
	                  ' 忘记密码?'
	                )
	              )
	            )
	          ),
	          _react2['default'].createElement(
	            'div',
	            { 'aria-hidden': 'true', 'aria-labelledby': 'myModalLabel', role: 'dialog', tabIndex: '-1', id: 'myModal', className: 'modal fade' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-dialog' },
	              _react2['default'].createElement(
	                'div',
	                { className: 'modal-content' },
	                _react2['default'].createElement(
	                  'div',
	                  { className: 'modal-header' },
	                  _react2['default'].createElement(
	                    'button',
	                    { type: 'button', className: 'close', 'data-dismiss': 'modal', 'aria-hidden': 'true' },
	                    '×'
	                  ),
	                  _react2['default'].createElement(
	                    'h4',
	                    { className: 'modal-title' },
	                    '忘记密码 ?'
	                  )
	                ),
	                _react2['default'].createElement(
	                  'div',
	                  { className: 'modal-body' },
	                  _react2['default'].createElement(
	                    'p',
	                    null,
	                    '在下面输入你的邮箱地址以重置密码.'
	                  ),
	                  _react2['default'].createElement('input', { type: 'text', name: '邮箱', placeholder: 'Email', autoComplete: 'off', className: 'form-control placeholder-no-fix' })
	                ),
	                _react2['default'].createElement(
	                  'div',
	                  { className: 'modal-footer' },
	                  _react2['default'].createElement(
	                    'button',
	                    { 'data-dismiss': 'modal', className: 'btn btn-default', type: 'button' },
	                    '取消'
	                  ),
	                  _react2['default'].createElement(
	                    'button',
	                    { className: 'btn btn-primary', type: 'button' },
	                    '确定'
	                  )
	                )
	              )
	            )
	          )
	        )
	      )
	    );
	  },
	  login: function login() {
	    var _props2 = this.props;
	    var username = _props2.username;
	    var password = _props2.password;
	    var dispatch = _props2.dispatch;
	    var login_ing = _props2.login_ing;

	    if (login_ing) {
	      return;
	    } else if (!username) {
	      this.tipNoInput('username');return;
	    } else if (!password) {
	      this.tipNoInput('password');return;
	    }
	    dispatch((0, _actionsLogin.login)(username, password)).done(function (data) {
	      window.xfxb.login = true;
	      window.xfxb.user = data.user || {};
	      //登录后，直接定位到所在url
	      _history2['default'].push(location.pathname + location.search);
	    });
	  },
	  onUsernameChange: function onUsernameChange(e) {
	    this.props.dispatch((0, _actionsLogin.usernameChange)(e.target.value));
	  },
	  onPasswordChange: function onPasswordChange(e) {
	    this.props.dispatch((0, _actionsLogin.passwordChange)(e.target.value));
	  },
	  resetErrorMsg: function resetErrorMsg() {
	    this.props.dispatch((0, _actionsLogin.resetErrorMsg)());
	  },
	  onEnterHandler: function onEnterHandler(e) {
	    if (e.which == 13) {
	      this.login();
	    }
	  },
	  tipNoInput: function tipNoInput(ref) {
	    var $input = $(this.refs[ref]).addClass('tip').focus();
	    setTimeout(function () {
	      $input.removeClass('tip');
	    }, 400);
	  },
	  componentDidMount: function componentDidMount() {
	    $([this.refs.username, this.refs.password]).on('click', this.resetErrorMsg);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    $([this.refs.username, this.refs.password]).off('click', this.resetErrorMsg);
	  }
	});

	function mapStateToProps(state) {
	  return state.login;
	}

	// function mapDispatchToProps(dispatch) {
	//   return bindActionCreators(CounterActions, dispatch)
	// }

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps)(Login);
	module.exports = exports['default'];

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }

	var _componentsProvider = __webpack_require__(217);

	exports.Provider = _interopRequire(_componentsProvider);

	var _componentsConnect = __webpack_require__(219);

	exports.connect = _interopRequire(_componentsConnect);

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _utilsStoreShape = __webpack_require__(218);

	var _utilsStoreShape2 = _interopRequireDefault(_utilsStoreShape);

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }

	  didWarnAboutReceivingStore = true;
	  console.error( // eslint-disable-line no-console
	  '<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/rackt/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}

	var Provider = (function (_Component) {
	  _inherits(Provider, _Component);

	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };

	  function Provider(props, context) {
	    _classCallCheck(this, Provider);

	    _Component.call(this, props, context);
	    this.store = props.store;
	  }

	  Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;

	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };

	  Provider.prototype.render = function render() {
	    var children = this.props.children;

	    return _react.Children.only(children);
	  };

	  return Provider;
	})(_react.Component);

	exports['default'] = Provider;

	Provider.propTypes = {
	  store: _utilsStoreShape2['default'].isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _utilsStoreShape2['default'].isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	exports['default'] = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});
	module.exports = exports['default'];

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = connect;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsStoreShape = __webpack_require__(218);

	var _utilsStoreShape2 = _interopRequireDefault(_utilsStoreShape);

	var _utilsShallowEqual = __webpack_require__(220);

	var _utilsShallowEqual2 = _interopRequireDefault(_utilsShallowEqual);

	var _utilsIsPlainObject = __webpack_require__(221);

	var _utilsIsPlainObject2 = _interopRequireDefault(_utilsIsPlainObject);

	var _utilsWrapActionCreators = __webpack_require__(222);

	var _utilsWrapActionCreators2 = _interopRequireDefault(_utilsWrapActionCreators);

	var _hoistNonReactStatics = __webpack_require__(232);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(166);

	var _invariant2 = _interopRequireDefault(_invariant);

	var defaultMapStateToProps = function defaultMapStateToProps() {
	  return {};
	};
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	// Helps track hot reloading.
	var nextVersion = 0;

	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	  var shouldSubscribe = Boolean(mapStateToProps);
	  var finalMapStateToProps = mapStateToProps || defaultMapStateToProps;
	  var finalMapDispatchToProps = _utilsIsPlainObject2['default'](mapDispatchToProps) ? _utilsWrapActionCreators2['default'](mapDispatchToProps) : mapDispatchToProps || defaultMapDispatchToProps;
	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var shouldUpdateStateProps = finalMapStateToProps.length > 1;
	  var shouldUpdateDispatchProps = finalMapDispatchToProps.length > 1;
	  var _options$pure = options.pure;
	  var pure = _options$pure === undefined ? true : _options$pure;
	  var _options$withRef = options.withRef;
	  var withRef = _options$withRef === undefined ? false : _options$withRef;

	  // Helps track hot reloading.
	  var version = nextVersion++;

	  function computeStateProps(store, props) {
	    var state = store.getState();
	    var stateProps = shouldUpdateStateProps ? finalMapStateToProps(state, props) : finalMapStateToProps(state);

	    _invariant2['default'](_utilsIsPlainObject2['default'](stateProps), '`mapStateToProps` must return an object. Instead received %s.', stateProps);
	    return stateProps;
	  }

	  function computeDispatchProps(store, props) {
	    var dispatch = store.dispatch;

	    var dispatchProps = shouldUpdateDispatchProps ? finalMapDispatchToProps(dispatch, props) : finalMapDispatchToProps(dispatch);

	    _invariant2['default'](_utilsIsPlainObject2['default'](dispatchProps), '`mapDispatchToProps` must return an object. Instead received %s.', dispatchProps);
	    return dispatchProps;
	  }

	  function _computeNextState(stateProps, dispatchProps, parentProps) {
	    var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	    _invariant2['default'](_utilsIsPlainObject2['default'](mergedProps), '`mergeProps` must return an object. Instead received %s.', mergedProps);
	    return mergedProps;
	  }

	  return function wrapWithConnect(WrappedComponent) {
	    var Connect = (function (_Component) {
	      _inherits(Connect, _Component);

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
	        if (!pure) {
	          this.updateStateProps(nextProps);
	          this.updateDispatchProps(nextProps);
	          this.updateState(nextProps);
	          return true;
	        }

	        var storeChanged = nextState.storeState !== this.state.storeState;
	        var propsChanged = !_utilsShallowEqual2['default'](nextProps, this.props);
	        var mapStateProducedChange = false;
	        var dispatchPropsChanged = false;

	        if (storeChanged || propsChanged && shouldUpdateStateProps) {
	          mapStateProducedChange = this.updateStateProps(nextProps);
	        }

	        if (propsChanged && shouldUpdateDispatchProps) {
	          dispatchPropsChanged = this.updateDispatchProps(nextProps);
	        }

	        if (propsChanged || mapStateProducedChange || dispatchPropsChanged) {
	          this.updateState(nextProps);
	          return true;
	        }

	        return false;
	      };

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        _Component.call(this, props, context);
	        this.version = version;
	        this.store = props.store || context.store;

	        _invariant2['default'](this.store, 'Could not find "store" in either the context or ' + ('props of "' + this.constructor.displayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + this.constructor.displayName + '".'));

	        this.stateProps = computeStateProps(this.store, props);
	        this.dispatchProps = computeDispatchProps(this.store, props);
	        this.state = { storeState: null };
	        this.updateState();
	      }

	      Connect.prototype.computeNextState = function computeNextState() {
	        var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];

	        return _computeNextState(this.stateProps, this.dispatchProps, props);
	      };

	      Connect.prototype.updateStateProps = function updateStateProps() {
	        var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];

	        var nextStateProps = computeStateProps(this.store, props);
	        if (_utilsShallowEqual2['default'](nextStateProps, this.stateProps)) {
	          return false;
	        }

	        this.stateProps = nextStateProps;
	        return true;
	      };

	      Connect.prototype.updateDispatchProps = function updateDispatchProps() {
	        var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];

	        var nextDispatchProps = computeDispatchProps(this.store, props);
	        if (_utilsShallowEqual2['default'](nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }

	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };

	      Connect.prototype.updateState = function updateState() {
	        var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];

	        this.nextState = this.computeNextState(props);
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };

	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };

	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	      };

	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }

	        this.setState({
	          storeState: this.store.getState()
	        });
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        _invariant2['default'](withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');

	        return this.refs.wrappedInstance;
	      };

	      Connect.prototype.render = function render() {
	        var ref = withRef ? 'wrappedInstance' : null;
	        return _react2['default'].createElement(WrappedComponent, _extends({}, this.nextState, { ref: ref }));
	      };

	      return Connect;
	    })(_react.Component);

	    Connect.displayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _utilsStoreShape2['default']
	    };
	    Connect.propTypes = {
	      store: _utilsStoreShape2['default']
	    };

	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }

	        // We are hot reloading!
	        this.version = version;

	        // Update the state and bindings.
	        this.trySubscribe();
	        this.updateStateProps();
	        this.updateDispatchProps();
	        this.updateState();
	      };
	    }

	    return _hoistNonReactStatics2['default'](Connect, WrappedComponent);
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 220 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = shallowEqual;

	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = exports["default"];

/***/ },
/* 221 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = isPlainObject;
	var fnToString = function fnToString(fn) {
	  return Function.prototype.toString.call(fn);
	};

	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */

	function isPlainObject(obj) {
	  if (!obj || typeof obj !== 'object') {
	    return false;
	  }

	  var proto = typeof obj.constructor === 'function' ? Object.getPrototypeOf(obj) : Object.prototype;

	  if (proto === null) {
	    return true;
	  }

	  var constructor = proto.constructor;

	  return typeof constructor === 'function' && constructor instanceof constructor && fnToString(constructor) === fnToString(Object);
	}

	module.exports = exports['default'];

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = wrapActionCreators;

	var _redux = __webpack_require__(223);

	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return _redux.bindActionCreators(actionCreators, dispatch);
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _createStore = __webpack_require__(224);

	var _createStore2 = _interopRequireDefault(_createStore);

	var _utilsCombineReducers = __webpack_require__(226);

	var _utilsCombineReducers2 = _interopRequireDefault(_utilsCombineReducers);

	var _utilsBindActionCreators = __webpack_require__(229);

	var _utilsBindActionCreators2 = _interopRequireDefault(_utilsBindActionCreators);

	var _utilsApplyMiddleware = __webpack_require__(230);

	var _utilsApplyMiddleware2 = _interopRequireDefault(_utilsApplyMiddleware);

	var _utilsCompose = __webpack_require__(231);

	var _utilsCompose2 = _interopRequireDefault(_utilsCompose);

	exports.createStore = _createStore2['default'];
	exports.combineReducers = _utilsCombineReducers2['default'];
	exports.bindActionCreators = _utilsBindActionCreators2['default'];
	exports.applyMiddleware = _utilsApplyMiddleware2['default'];
	exports.compose = _utilsCompose2['default'];

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = createStore;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsIsPlainObject = __webpack_require__(225);

	var _utilsIsPlainObject2 = _interopRequireDefault(_utilsIsPlainObject);

	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = {
	  INIT: '@@redux/INIT'
	};

	exports.ActionTypes = ActionTypes;
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [initialState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */

	function createStore(reducer, initialState) {
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }

	  var currentReducer = reducer;
	  var currentState = initialState;
	  var listeners = [];
	  var isDispatching = false;

	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }

	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    listeners.push(listener);
	    var isSubscribed = true;

	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }

	      isSubscribed = false;
	      var index = listeners.indexOf(listener);
	      listeners.splice(index, 1);
	    };
	  }

	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!_utilsIsPlainObject2['default'](action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }

	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }

	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }

	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }

	    listeners.slice().forEach(function (listener) {
	      return listener();
	    });
	    return action;
	  }

	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }

	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });

	  return {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  };
	}

/***/ },
/* 225 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = isPlainObject;
	var fnToString = function fnToString(fn) {
	  return Function.prototype.toString.call(fn);
	};

	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */

	function isPlainObject(obj) {
	  if (!obj || typeof obj !== 'object') {
	    return false;
	  }

	  var proto = typeof obj.constructor === 'function' ? Object.getPrototypeOf(obj) : Object.prototype;

	  if (proto === null) {
	    return true;
	  }

	  var constructor = proto.constructor;

	  return typeof constructor === 'function' && constructor instanceof constructor && fnToString(constructor) === fnToString(Object);
	}

	module.exports = exports['default'];

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = combineReducers;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _createStore = __webpack_require__(224);

	var _utilsIsPlainObject = __webpack_require__(225);

	var _utilsIsPlainObject2 = _interopRequireDefault(_utilsIsPlainObject);

	var _utilsMapValues = __webpack_require__(227);

	var _utilsMapValues2 = _interopRequireDefault(_utilsMapValues);

	var _utilsPick = __webpack_require__(228);

	var _utilsPick2 = _interopRequireDefault(_utilsPick);

	/* eslint-disable no-console */

	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

	  return 'Reducer "' + key + '" returned undefined handling ' + actionName + '. ' + 'To ignore an action, you must explicitly return the previous state.';
	}

	function getUnexpectedStateKeyWarningMessage(inputState, outputState, action) {
	  var reducerKeys = Object.keys(outputState);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';

	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }

	  if (!_utilsIsPlainObject2['default'](inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + ({}).toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }

	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return reducerKeys.indexOf(key) < 0;
	  });

	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}

	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }

	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}

	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */

	function combineReducers(reducers) {
	  var finalReducers = _utilsPick2['default'](reducers, function (val) {
	    return typeof val === 'function';
	  });
	  var sanityError;

	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }

	  var defaultState = _utilsMapValues2['default'](finalReducers, function () {
	    return undefined;
	  });

	  return function combination(state, action) {
	    if (state === undefined) state = defaultState;

	    if (sanityError) {
	      throw sanityError;
	    }

	    var hasChanged = false;
	    var finalState = _utilsMapValues2['default'](finalReducers, function (reducer, key) {
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	      return nextStateForKey;
	    });

	    if (false) {
	      var warningMessage = getUnexpectedStateKeyWarningMessage(state, finalState, action);
	      if (warningMessage) {
	        console.error(warningMessage);
	      }
	    }

	    return hasChanged ? finalState : state;
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 227 */
/***/ function(module, exports) {

	/**
	 * Applies a function to every key-value pair inside an object.
	 *
	 * @param {Object} obj The source object.
	 * @param {Function} fn The mapper function that receives the value and the key.
	 * @returns {Object} A new object that contains the mapped values for the keys.
	 */
	"use strict";

	exports.__esModule = true;
	exports["default"] = mapValues;

	function mapValues(obj, fn) {
	  return Object.keys(obj).reduce(function (result, key) {
	    result[key] = fn(obj[key], key);
	    return result;
	  }, {});
	}

	module.exports = exports["default"];

/***/ },
/* 228 */
/***/ function(module, exports) {

	/**
	 * Picks key-value pairs from an object where values satisfy a predicate.
	 *
	 * @param {Object} obj The object to pick from.
	 * @param {Function} fn The predicate the values must satisfy to be copied.
	 * @returns {Object} The object with the values that satisfied the predicate.
	 */
	"use strict";

	exports.__esModule = true;
	exports["default"] = pick;

	function pick(obj, fn) {
	  return Object.keys(obj).reduce(function (result, key) {
	    if (fn(obj[key])) {
	      result[key] = obj[key];
	    }
	    return result;
	  }, {});
	}

	module.exports = exports["default"];

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = bindActionCreators;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsMapValues = __webpack_require__(227);

	var _utilsMapValues2 = _interopRequireDefault(_utilsMapValues);

	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}

	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */

	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }

	  if (typeof actionCreators !== 'object' || actionCreators === null || actionCreators === undefined) {
	    // eslint-disable-line no-eq-null
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }

	  return _utilsMapValues2['default'](actionCreators, function (actionCreator) {
	    return bindActionCreator(actionCreator, dispatch);
	  });
	}

	module.exports = exports['default'];

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = applyMiddleware;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _compose = __webpack_require__(231);

	var _compose2 = _interopRequireDefault(_compose);

	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */

	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  return function (next) {
	    return function (reducer, initialState) {
	      var store = next(reducer, initialState);
	      var _dispatch = store.dispatch;
	      var chain = [];

	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 231 */
/***/ function(module, exports) {

	/**
	 * Composes single-argument functions from right to left.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing functions from right to
	 * left. For example, compose(f, g, h) is identical to arg => f(g(h(arg))).
	 */
	"use strict";

	exports.__esModule = true;
	exports["default"] = compose;

	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  return function (arg) {
	    return funcs.reduceRight(function (composed, f) {
	      return f(composed);
	    }, arg);
	  };
	}

	module.exports = exports["default"];

/***/ },
/* 232 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent) {
	    var keys = Object.getOwnPropertyNames(sourceComponent);
	    for (var i=0; i<keys.length; ++i) {
	        if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]]) {
	            targetComponent[keys[i]] = sourceComponent[keys[i]];
	        }
	    }

	    return targetComponent;
	};


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.login = login;
	exports.usernameChange = usernameChange;
	exports.passwordChange = passwordChange;
	exports.resetErrorMsg = resetErrorMsg;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var LOGIN_START = 'LOGIN_START';
	exports.LOGIN_START = LOGIN_START;
	var LOGIN_SUCCESS = 'LOGIN_SUCCESS';
	exports.LOGIN_SUCCESS = LOGIN_SUCCESS;
	var LOGIN_FAIL = 'LOGIN_FAIL';
	exports.LOGIN_FAIL = LOGIN_FAIL;
	var USERNAME_CHANGE = 'USERNAME_CHANGE';
	exports.USERNAME_CHANGE = USERNAME_CHANGE;
	var PASSWORD_CHANGE = 'PASSWORD_CHANGE';

	exports.PASSWORD_CHANGE = PASSWORD_CHANGE;

	function login(username, password) {
	  return function (dispatch) {
	    dispatch({
	      type: LOGIN_START
	    });
	    return (0, _utilsRequest.post)(_configUrl2['default'].login.toString(), { username: username, password: password }).done(function (json) {
	      dispatch({
	        type: LOGIN_SUCCESS
	      });
	    }).fail(function (msg) {
	      dispatch({
	        type: LOGIN_FAIL,
	        msg: msg
	      });
	    });
	  };
	}

	function usernameChange(username) {
	  return {
	    type: USERNAME_CHANGE,
	    username: username
	  };
	}

	function passwordChange(password) {
	  return {
	    type: PASSWORD_CHANGE,
	    password: password
	  };
	}

	var RESET_ERROR_MSG = 'RESET_ERROR_MSG';
	exports.RESET_ERROR_MSG = RESET_ERROR_MSG;

	function resetErrorMsg() {
	  return {
	    type: RESET_ERROR_MSG
	  };
	}

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.get = get;
	exports.post = post;
	exports.put = put;
	exports.del = del;
	exports.GET = GET;
	exports.POST = POST;
	exports.PUT = PUT;
	exports.test = test;
	exports.TEST = TEST;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _superagent = __webpack_require__(235);

	var _superagent2 = _interopRequireDefault(_superagent);

	var _promise = __webpack_require__(238);

	var _promise2 = _interopRequireDefault(_promise);

	var _configAppConfig = __webpack_require__(157);

	var _utilsIndex = __webpack_require__(160);

	function _end_callback(resolve, reject) {
	  return function (err, res) {
	    if (err) {
	      console.error(err);
	      reject('请求失败！');
	      return;
	    }
	    if (res.ok) {
	      var _res$body = res.body;
	      var code = _res$body.code;
	      var msg = _res$body.msg;
	      var data = _res$body.data;

	      if (code === _configAppConfig.SUCCESS_CODE) {
	        resolve(data, msg);
	      } else if (code === _configAppConfig.NO_MORE_CODE) {
	        resolve(data);
	      } else if (code === _configAppConfig.EXPIRE_CODE) {
	        location.href = location.href;
	      } else {
	        console.error(msg || 'request error');
	        reject(msg, code);
	      }
	    } else {
	      reject(res.text || 'error');
	    }
	  };
	}

	//基本封装

	function get(url, data) {
	  return new _promise2['default'](function (resolve, reject) {
	    _superagent2['default'].get(url).query(data).set('X-Requested-With', 'XMLHttpRequest').end(_end_callback(resolve, reject));
	  });
	}

	function post(url, data) {
	  return new _promise2['default'](function (resolve, reject) {
	    _superagent2['default'].post(url).send(data).set('X-Requested-With', 'XMLHttpRequest').end(_end_callback(resolve, reject));
	  });
	}

	function put(url, data) {
	  return new _promise2['default'](function (resolve, reject) {
	    _superagent2['default'].put(url).send(data).set('X-Requested-With', 'XMLHttpRequest').end(_end_callback(resolve, reject));
	  });
	}

	function del(url, data) {
	  return new _promise2['default'](function (resolve, reject) {
	    _superagent2['default'].del(url).send(data).set('X-Requested-With', 'XMLHttpRequest').end(_end_callback(resolve, reject));
	  });
	}

	//最简封装

	function GET(url, query_data, action_type) {
	  return function (dispatch) {
	    return get(url, query_data).done(function (data) {
	      dispatch({
	        type: action_type,
	        data: data
	      });
	    });
	  };
	}

	function POST(url, send_data, action_type) {
	  return function (dispatch, getState) {
	    //key: 0->正在处理，1->成功，2->失败 (减少信号量)
	    dispatch({
	      type: action_type,
	      key: _configAppConfig.REQUEST.ING
	    });
	    return post(url, send_data).done(function (data) {
	      dispatch({
	        type: action_type,
	        key: _configAppConfig.REQUEST.SUCCESS,
	        data: data
	      });
	    }).fail(function (msg, code) {
	      dispatch({
	        type: action_type,
	        key: _configAppConfig.REQUEST.FAIL,
	        msg: msg,
	        code: code
	      });
	    });
	  };
	}

	function PUT(url, send_data, action_type) {
	  return function (dispatch, getState) {
	    //key: 0->正在处理，1->成功，2->失败 (减少信号量)
	    dispatch({
	      type: action_type,
	      key: _configAppConfig.REQUEST.ING
	    });
	    return put(url, send_data).done(function () {
	      dispatch({
	        type: action_type,
	        key: _configAppConfig.REQUEST.SUCCESS
	      });
	    }).fail(function () {
	      dispatch({
	        type: action_type,
	        key: _configAppConfig.REQUEST.FAIL
	      });
	    });
	  };
	}

	/**
	 * 模拟普通ajax的过程
	 * @param  {Boolean} ajax_status true代表成功，false代表失败
	 * @param  {[type]} ajax_time   ajax 持续时间
	 */

	function test(ajax_status, ajax_time, data) {
	  if (ajax_status === undefined) ajax_status = true;
	  if (ajax_time === undefined) ajax_time = 2000;

	  return function (dispatch) {
	    return new _promise2['default'](function (resolve, reject) {
	      setTimeout(function () {
	        dispatch({ type: '__JUST_A_TEST_ACTION' });
	        ajax_status ? resolve(data) : reject(data);
	      }, ajax_time);
	    });
	  };
	}

	/**
	 * @param {Object} data
	 * @param {Array<String/Object>, String/Object} 
	 *    signal : 当为Array时，会直接先派发第一个信号，然后延时后派发第二个信号，用于模拟提交的过程
	 *    为String时：代表纯粹的信号名，
	 *    当为Object时：表示已封装的信号对象 eg: {type: XXXXX, key: x}，直接可dispatch，这里为了
	 *      减少信号量，采用了type名相同，key值区分的办法，来达到减少信号量的目的
	 * @param {Number} time
	 * @package {Boolean} _resolve : 模拟成功还是失败
	 */

	function TEST(data, signal, time) {
	  var _resolve = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];

	  return function (dispatch) {
	    //智能派发
	    var _dispatch = function _dispatch(s) {
	      if (_utilsIndex.core.isObject(s)) {
	        return dispatch(s);
	      } else if (_utilsIndex.core.isString(s)) {
	        return dispatch({
	          type: s,
	          data: data
	        });
	      }
	    };

	    if (_utilsIndex.core.isArray(signal)) {
	      if (signal.length == 2) {
	        _dispatch(signal[0]);
	        signal = signal[1];
	      } else {
	        throw Error('error params "signal" in request method : "TEST"');
	      }
	    }
	    return new _promise2['default'](function (resolve, reject) {
	      setTimeout(function () {
	        _resolve ? resolve(_dispatch(signal)) : reject(_dispatch(signal));
	      }, time || 200);
	    });
	  };
	}

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies.
	 */

	var Emitter = __webpack_require__(236);
	var reduce = __webpack_require__(237);

	/**
	 * Root reference for iframes.
	 */

	var root;
	if (typeof window !== 'undefined') { // Browser window
	  root = window;
	} else if (typeof self !== 'undefined') { // Web Worker
	  root = self;
	} else { // Other environments
	  root = this;
	}

	/**
	 * Noop.
	 */

	function noop(){};

	/**
	 * Check if `obj` is a host object,
	 * we don't want to serialize these :)
	 *
	 * TODO: future proof, move to compoent land
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isHost(obj) {
	  var str = {}.toString.call(obj);

	  switch (str) {
	    case '[object File]':
	    case '[object Blob]':
	    case '[object FormData]':
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Determine XHR.
	 */

	request.getXHR = function () {
	  if (root.XMLHttpRequest
	      && (!root.location || 'file:' != root.location.protocol
	          || !root.ActiveXObject)) {
	    return new XMLHttpRequest;
	  } else {
	    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}
	    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}
	    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}
	    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}
	  }
	  return false;
	};

	/**
	 * Removes leading and trailing whitespace, added to support IE.
	 *
	 * @param {String} s
	 * @return {String}
	 * @api private
	 */

	var trim = ''.trim
	  ? function(s) { return s.trim(); }
	  : function(s) { return s.replace(/(^\s*|\s*$)/g, ''); };

	/**
	 * Check if `obj` is an object.
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isObject(obj) {
	  return obj === Object(obj);
	}

	/**
	 * Serialize the given `obj`.
	 *
	 * @param {Object} obj
	 * @return {String}
	 * @api private
	 */

	function serialize(obj) {
	  if (!isObject(obj)) return obj;
	  var pairs = [];
	  for (var key in obj) {
	    if (null != obj[key]) {
	      pushEncodedKeyValuePair(pairs, key, obj[key]);
	        }
	      }
	  return pairs.join('&');
	}

	/**
	 * Helps 'serialize' with serializing arrays.
	 * Mutates the pairs array.
	 *
	 * @param {Array} pairs
	 * @param {String} key
	 * @param {Mixed} val
	 */

	function pushEncodedKeyValuePair(pairs, key, val) {
	  if (Array.isArray(val)) {
	    return val.forEach(function(v) {
	      pushEncodedKeyValuePair(pairs, key, v);
	    });
	  }
	  pairs.push(encodeURIComponent(key)
	    + '=' + encodeURIComponent(val));
	}

	/**
	 * Expose serialization method.
	 */

	 request.serializeObject = serialize;

	 /**
	  * Parse the given x-www-form-urlencoded `str`.
	  *
	  * @param {String} str
	  * @return {Object}
	  * @api private
	  */

	function parseString(str) {
	  var obj = {};
	  var pairs = str.split('&');
	  var parts;
	  var pair;

	  for (var i = 0, len = pairs.length; i < len; ++i) {
	    pair = pairs[i];
	    parts = pair.split('=');
	    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);
	  }

	  return obj;
	}

	/**
	 * Expose parser.
	 */

	request.parseString = parseString;

	/**
	 * Default MIME type map.
	 *
	 *     superagent.types.xml = 'application/xml';
	 *
	 */

	request.types = {
	  html: 'text/html',
	  json: 'application/json',
	  xml: 'application/xml',
	  urlencoded: 'application/x-www-form-urlencoded',
	  'form': 'application/x-www-form-urlencoded',
	  'form-data': 'application/x-www-form-urlencoded'
	};

	/**
	 * Default serialization map.
	 *
	 *     superagent.serialize['application/xml'] = function(obj){
	 *       return 'generated xml here';
	 *     };
	 *
	 */

	 request.serialize = {
	   'application/x-www-form-urlencoded': serialize,
	   'application/json': JSON.stringify
	 };

	 /**
	  * Default parsers.
	  *
	  *     superagent.parse['application/xml'] = function(str){
	  *       return { object parsed from str };
	  *     };
	  *
	  */

	request.parse = {
	  'application/x-www-form-urlencoded': parseString,
	  'application/json': JSON.parse
	};

	/**
	 * Parse the given header `str` into
	 * an object containing the mapped fields.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function parseHeader(str) {
	  var lines = str.split(/\r?\n/);
	  var fields = {};
	  var index;
	  var line;
	  var field;
	  var val;

	  lines.pop(); // trailing CRLF

	  for (var i = 0, len = lines.length; i < len; ++i) {
	    line = lines[i];
	    index = line.indexOf(':');
	    field = line.slice(0, index).toLowerCase();
	    val = trim(line.slice(index + 1));
	    fields[field] = val;
	  }

	  return fields;
	}

	/**
	 * Return the mime type for the given `str`.
	 *
	 * @param {String} str
	 * @return {String}
	 * @api private
	 */

	function type(str){
	  return str.split(/ *; */).shift();
	};

	/**
	 * Return header field parameters.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function params(str){
	  return reduce(str.split(/ *; */), function(obj, str){
	    var parts = str.split(/ *= */)
	      , key = parts.shift()
	      , val = parts.shift();

	    if (key && val) obj[key] = val;
	    return obj;
	  }, {});
	};

	/**
	 * Initialize a new `Response` with the given `xhr`.
	 *
	 *  - set flags (.ok, .error, etc)
	 *  - parse header
	 *
	 * Examples:
	 *
	 *  Aliasing `superagent` as `request` is nice:
	 *
	 *      request = superagent;
	 *
	 *  We can use the promise-like API, or pass callbacks:
	 *
	 *      request.get('/').end(function(res){});
	 *      request.get('/', function(res){});
	 *
	 *  Sending data can be chained:
	 *
	 *      request
	 *        .post('/user')
	 *        .send({ name: 'tj' })
	 *        .end(function(res){});
	 *
	 *  Or passed to `.send()`:
	 *
	 *      request
	 *        .post('/user')
	 *        .send({ name: 'tj' }, function(res){});
	 *
	 *  Or passed to `.post()`:
	 *
	 *      request
	 *        .post('/user', { name: 'tj' })
	 *        .end(function(res){});
	 *
	 * Or further reduced to a single call for simple cases:
	 *
	 *      request
	 *        .post('/user', { name: 'tj' }, function(res){});
	 *
	 * @param {XMLHTTPRequest} xhr
	 * @param {Object} options
	 * @api private
	 */

	function Response(req, options) {
	  options = options || {};
	  this.req = req;
	  this.xhr = this.req.xhr;
	  // responseText is accessible only if responseType is '' or 'text' and on older browsers
	  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')
	     ? this.xhr.responseText
	     : null;
	  this.statusText = this.req.xhr.statusText;
	  this.setStatusProperties(this.xhr.status);
	  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
	  // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but
	  // getResponseHeader still works. so we get content-type even if getting
	  // other headers fails.
	  this.header['content-type'] = this.xhr.getResponseHeader('content-type');
	  this.setHeaderProperties(this.header);
	  this.body = this.req.method != 'HEAD'
	    ? this.parseBody(this.text ? this.text : this.xhr.response)
	    : null;
	}

	/**
	 * Get case-insensitive `field` value.
	 *
	 * @param {String} field
	 * @return {String}
	 * @api public
	 */

	Response.prototype.get = function(field){
	  return this.header[field.toLowerCase()];
	};

	/**
	 * Set header related properties:
	 *
	 *   - `.type` the content type without params
	 *
	 * A response of "Content-Type: text/plain; charset=utf-8"
	 * will provide you with a `.type` of "text/plain".
	 *
	 * @param {Object} header
	 * @api private
	 */

	Response.prototype.setHeaderProperties = function(header){
	  // content-type
	  var ct = this.header['content-type'] || '';
	  this.type = type(ct);

	  // params
	  var obj = params(ct);
	  for (var key in obj) this[key] = obj[key];
	};

	/**
	 * Parse the given body `str`.
	 *
	 * Used for auto-parsing of bodies. Parsers
	 * are defined on the `superagent.parse` object.
	 *
	 * @param {String} str
	 * @return {Mixed}
	 * @api private
	 */

	Response.prototype.parseBody = function(str){
	  var parse = request.parse[this.type];
	  return parse && str && (str.length || str instanceof Object)
	    ? parse(str)
	    : null;
	};

	/**
	 * Set flags such as `.ok` based on `status`.
	 *
	 * For example a 2xx response will give you a `.ok` of __true__
	 * whereas 5xx will be __false__ and `.error` will be __true__. The
	 * `.clientError` and `.serverError` are also available to be more
	 * specific, and `.statusType` is the class of error ranging from 1..5
	 * sometimes useful for mapping respond colors etc.
	 *
	 * "sugar" properties are also defined for common cases. Currently providing:
	 *
	 *   - .noContent
	 *   - .badRequest
	 *   - .unauthorized
	 *   - .notAcceptable
	 *   - .notFound
	 *
	 * @param {Number} status
	 * @api private
	 */

	Response.prototype.setStatusProperties = function(status){
	  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
	  if (status === 1223) {
	    status = 204;
	  }

	  var type = status / 100 | 0;

	  // status / class
	  this.status = this.statusCode = status;
	  this.statusType = type;

	  // basics
	  this.info = 1 == type;
	  this.ok = 2 == type;
	  this.clientError = 4 == type;
	  this.serverError = 5 == type;
	  this.error = (4 == type || 5 == type)
	    ? this.toError()
	    : false;

	  // sugar
	  this.accepted = 202 == status;
	  this.noContent = 204 == status;
	  this.badRequest = 400 == status;
	  this.unauthorized = 401 == status;
	  this.notAcceptable = 406 == status;
	  this.notFound = 404 == status;
	  this.forbidden = 403 == status;
	};

	/**
	 * Return an `Error` representative of this response.
	 *
	 * @return {Error}
	 * @api public
	 */

	Response.prototype.toError = function(){
	  var req = this.req;
	  var method = req.method;
	  var url = req.url;

	  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
	  var err = new Error(msg);
	  err.status = this.status;
	  err.method = method;
	  err.url = url;

	  return err;
	};

	/**
	 * Expose `Response`.
	 */

	request.Response = Response;

	/**
	 * Initialize a new `Request` with the given `method` and `url`.
	 *
	 * @param {String} method
	 * @param {String} url
	 * @api public
	 */

	function Request(method, url) {
	  var self = this;
	  Emitter.call(this);
	  this._query = this._query || [];
	  this.method = method;
	  this.url = url;
	  this.header = {};
	  this._header = {};
	  this.on('end', function(){
	    var err = null;
	    var res = null;

	    try {
	      res = new Response(self);
	    } catch(e) {
	      err = new Error('Parser is unable to parse the response');
	      err.parse = true;
	      err.original = e;
	      return self.callback(err);
	    }

	    self.emit('response', res);

	    if (err) {
	      return self.callback(err, res);
	    }

	    if (res.status >= 200 && res.status < 300) {
	      return self.callback(err, res);
	    }

	    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');
	    new_err.original = err;
	    new_err.response = res;
	    new_err.status = res.status;

	    self.callback(new_err, res);
	  });
	}

	/**
	 * Mixin `Emitter`.
	 */

	Emitter(Request.prototype);

	/**
	 * Allow for extension
	 */

	Request.prototype.use = function(fn) {
	  fn(this);
	  return this;
	}

	/**
	 * Set timeout to `ms`.
	 *
	 * @param {Number} ms
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.timeout = function(ms){
	  this._timeout = ms;
	  return this;
	};

	/**
	 * Clear previous timeout.
	 *
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.clearTimeout = function(){
	  this._timeout = 0;
	  clearTimeout(this._timer);
	  return this;
	};

	/**
	 * Abort the request, and clear potential timeout.
	 *
	 * @return {Request}
	 * @api public
	 */

	Request.prototype.abort = function(){
	  if (this.aborted) return;
	  this.aborted = true;
	  this.xhr.abort();
	  this.clearTimeout();
	  this.emit('abort');
	  return this;
	};

	/**
	 * Set header `field` to `val`, or multiple fields with one object.
	 *
	 * Examples:
	 *
	 *      req.get('/')
	 *        .set('Accept', 'application/json')
	 *        .set('X-API-Key', 'foobar')
	 *        .end(callback);
	 *
	 *      req.get('/')
	 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
	 *        .end(callback);
	 *
	 * @param {String|Object} field
	 * @param {String} val
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.set = function(field, val){
	  if (isObject(field)) {
	    for (var key in field) {
	      this.set(key, field[key]);
	    }
	    return this;
	  }
	  this._header[field.toLowerCase()] = val;
	  this.header[field] = val;
	  return this;
	};

	/**
	 * Remove header `field`.
	 *
	 * Example:
	 *
	 *      req.get('/')
	 *        .unset('User-Agent')
	 *        .end(callback);
	 *
	 * @param {String} field
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.unset = function(field){
	  delete this._header[field.toLowerCase()];
	  delete this.header[field];
	  return this;
	};

	/**
	 * Get case-insensitive header `field` value.
	 *
	 * @param {String} field
	 * @return {String}
	 * @api private
	 */

	Request.prototype.getHeader = function(field){
	  return this._header[field.toLowerCase()];
	};

	/**
	 * Set Content-Type to `type`, mapping values from `request.types`.
	 *
	 * Examples:
	 *
	 *      superagent.types.xml = 'application/xml';
	 *
	 *      request.post('/')
	 *        .type('xml')
	 *        .send(xmlstring)
	 *        .end(callback);
	 *
	 *      request.post('/')
	 *        .type('application/xml')
	 *        .send(xmlstring)
	 *        .end(callback);
	 *
	 * @param {String} type
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.type = function(type){
	  this.set('Content-Type', request.types[type] || type);
	  return this;
	};

	/**
	 * Force given parser
	 *
	 * Sets the body parser no matter type.
	 *
	 * @param {Function}
	 * @api public
	 */

	Request.prototype.parse = function(fn){
	  this._parser = fn;
	  return this;
	};

	/**
	 * Set Accept to `type`, mapping values from `request.types`.
	 *
	 * Examples:
	 *
	 *      superagent.types.json = 'application/json';
	 *
	 *      request.get('/agent')
	 *        .accept('json')
	 *        .end(callback);
	 *
	 *      request.get('/agent')
	 *        .accept('application/json')
	 *        .end(callback);
	 *
	 * @param {String} accept
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.accept = function(type){
	  this.set('Accept', request.types[type] || type);
	  return this;
	};

	/**
	 * Set Authorization field value with `user` and `pass`.
	 *
	 * @param {String} user
	 * @param {String} pass
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.auth = function(user, pass){
	  var str = btoa(user + ':' + pass);
	  this.set('Authorization', 'Basic ' + str);
	  return this;
	};

	/**
	* Add query-string `val`.
	*
	* Examples:
	*
	*   request.get('/shoes')
	*     .query('size=10')
	*     .query({ color: 'blue' })
	*
	* @param {Object|String} val
	* @return {Request} for chaining
	* @api public
	*/

	Request.prototype.query = function(val){
	  if ('string' != typeof val) val = serialize(val);
	  if (val) this._query.push(val);
	  return this;
	};

	/**
	 * Write the field `name` and `val` for "multipart/form-data"
	 * request bodies.
	 *
	 * ``` js
	 * request.post('/upload')
	 *   .field('foo', 'bar')
	 *   .end(callback);
	 * ```
	 *
	 * @param {String} name
	 * @param {String|Blob|File} val
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.field = function(name, val){
	  if (!this._formData) this._formData = new root.FormData();
	  this._formData.append(name, val);
	  return this;
	};

	/**
	 * Queue the given `file` as an attachment to the specified `field`,
	 * with optional `filename`.
	 *
	 * ``` js
	 * request.post('/upload')
	 *   .attach(new Blob(['<a id="a"><b id="b">hey!</b></a>'], { type: "text/html"}))
	 *   .end(callback);
	 * ```
	 *
	 * @param {String} field
	 * @param {Blob|File} file
	 * @param {String} filename
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.attach = function(field, file, filename){
	  if (!this._formData) this._formData = new root.FormData();
	  this._formData.append(field, file, filename);
	  return this;
	};

	/**
	 * Send `data`, defaulting the `.type()` to "json" when
	 * an object is given.
	 *
	 * Examples:
	 *
	 *       // querystring
	 *       request.get('/search')
	 *         .end(callback)
	 *
	 *       // multiple data "writes"
	 *       request.get('/search')
	 *         .send({ search: 'query' })
	 *         .send({ range: '1..5' })
	 *         .send({ order: 'desc' })
	 *         .end(callback)
	 *
	 *       // manual json
	 *       request.post('/user')
	 *         .type('json')
	 *         .send('{"name":"tj"}')
	 *         .end(callback)
	 *
	 *       // auto json
	 *       request.post('/user')
	 *         .send({ name: 'tj' })
	 *         .end(callback)
	 *
	 *       // manual x-www-form-urlencoded
	 *       request.post('/user')
	 *         .type('form')
	 *         .send('name=tj')
	 *         .end(callback)
	 *
	 *       // auto x-www-form-urlencoded
	 *       request.post('/user')
	 *         .type('form')
	 *         .send({ name: 'tj' })
	 *         .end(callback)
	 *
	 *       // defaults to x-www-form-urlencoded
	  *      request.post('/user')
	  *        .send('name=tobi')
	  *        .send('species=ferret')
	  *        .end(callback)
	 *
	 * @param {String|Object} data
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.send = function(data){
	  var obj = isObject(data);
	  var type = this.getHeader('Content-Type');

	  // merge
	  if (obj && isObject(this._data)) {
	    for (var key in data) {
	      this._data[key] = data[key];
	    }
	  } else if ('string' == typeof data) {
	    if (!type) this.type('form');
	    type = this.getHeader('Content-Type');
	    if ('application/x-www-form-urlencoded' == type) {
	      this._data = this._data
	        ? this._data + '&' + data
	        : data;
	    } else {
	      this._data = (this._data || '') + data;
	    }
	  } else {
	    this._data = data;
	  }

	  if (!obj || isHost(data)) return this;
	  if (!type) this.type('json');
	  return this;
	};

	/**
	 * Invoke the callback with `err` and `res`
	 * and handle arity check.
	 *
	 * @param {Error} err
	 * @param {Response} res
	 * @api private
	 */

	Request.prototype.callback = function(err, res){
	  var fn = this._callback;
	  this.clearTimeout();
	  fn(err, res);
	};

	/**
	 * Invoke callback with x-domain error.
	 *
	 * @api private
	 */

	Request.prototype.crossDomainError = function(){
	  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');
	  err.crossDomain = true;
	  this.callback(err);
	};

	/**
	 * Invoke callback with timeout error.
	 *
	 * @api private
	 */

	Request.prototype.timeoutError = function(){
	  var timeout = this._timeout;
	  var err = new Error('timeout of ' + timeout + 'ms exceeded');
	  err.timeout = timeout;
	  this.callback(err);
	};

	/**
	 * Enable transmission of cookies with x-domain requests.
	 *
	 * Note that for this to work the origin must not be
	 * using "Access-Control-Allow-Origin" with a wildcard,
	 * and also must set "Access-Control-Allow-Credentials"
	 * to "true".
	 *
	 * @api public
	 */

	Request.prototype.withCredentials = function(){
	  this._withCredentials = true;
	  return this;
	};

	/**
	 * Initiate request, invoking callback `fn(res)`
	 * with an instanceof `Response`.
	 *
	 * @param {Function} fn
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.end = function(fn){
	  var self = this;
	  var xhr = this.xhr = request.getXHR();
	  var query = this._query.join('&');
	  var timeout = this._timeout;
	  var data = this._formData || this._data;

	  // store callback
	  this._callback = fn || noop;

	  // state change
	  xhr.onreadystatechange = function(){
	    if (4 != xhr.readyState) return;

	    // In IE9, reads to any property (e.g. status) off of an aborted XHR will
	    // result in the error "Could not complete the operation due to error c00c023f"
	    var status;
	    try { status = xhr.status } catch(e) { status = 0; }

	    if (0 == status) {
	      if (self.timedout) return self.timeoutError();
	      if (self.aborted) return;
	      return self.crossDomainError();
	    }
	    self.emit('end');
	  };

	  // progress
	  var handleProgress = function(e){
	    if (e.total > 0) {
	      e.percent = e.loaded / e.total * 100;
	    }
	    self.emit('progress', e);
	  };
	  if (this.hasListeners('progress')) {
	    xhr.onprogress = handleProgress;
	  }
	  try {
	    if (xhr.upload && this.hasListeners('progress')) {
	      xhr.upload.onprogress = handleProgress;
	    }
	  } catch(e) {
	    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.
	    // Reported here:
	    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context
	  }

	  // timeout
	  if (timeout && !this._timer) {
	    this._timer = setTimeout(function(){
	      self.timedout = true;
	      self.abort();
	    }, timeout);
	  }

	  // querystring
	  if (query) {
	    query = request.serializeObject(query);
	    this.url += ~this.url.indexOf('?')
	      ? '&' + query
	      : '?' + query;
	  }

	  // initiate request
	  xhr.open(this.method, this.url, true);

	  // CORS
	  if (this._withCredentials) xhr.withCredentials = true;

	  // body
	  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {
	    // serialize stuff
	    var contentType = this.getHeader('Content-Type');
	    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];
	    if (serialize) data = serialize(data);
	  }

	  // set header fields
	  for (var field in this.header) {
	    if (null == this.header[field]) continue;
	    xhr.setRequestHeader(field, this.header[field]);
	  }

	  // send stuff
	  this.emit('request', this);

	  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)
	  // We need null here if data is undefined
	  xhr.send(typeof data !== 'undefined' ? data : null);
	  return this;
	};

	/**
	 * Faux promise support
	 *
	 * @param {Function} fulfill
	 * @param {Function} reject
	 * @return {Request}
	 */

	Request.prototype.then = function (fulfill, reject) {
	  return this.end(function(err, res) {
	    err ? reject(err) : fulfill(res);
	  });
	}

	/**
	 * Expose `Request`.
	 */

	request.Request = Request;

	/**
	 * Issue a request:
	 *
	 * Examples:
	 *
	 *    request('GET', '/users').end(callback)
	 *    request('/users').end(callback)
	 *    request('/users', callback)
	 *
	 * @param {String} method
	 * @param {String|Function} url or callback
	 * @return {Request}
	 * @api public
	 */

	function request(method, url) {
	  // callback
	  if ('function' == typeof url) {
	    return new Request('GET', method).end(url);
	  }

	  // url first
	  if (1 == arguments.length) {
	    return new Request('GET', method);
	  }

	  return new Request(method, url);
	}

	/**
	 * GET `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} data or fn
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.get = function(url, data, fn){
	  var req = request('GET', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.query(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * HEAD `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} data or fn
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.head = function(url, data, fn){
	  var req = request('HEAD', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * DELETE `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	function del(url, fn){
	  var req = request('DELETE', url);
	  if (fn) req.end(fn);
	  return req;
	};

	request.del = del;
	request.delete = del;

	/**
	 * PATCH `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed} data
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.patch = function(url, data, fn){
	  var req = request('PATCH', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * POST `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed} data
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.post = function(url, data, fn){
	  var req = request('POST', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * PUT `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} data or fn
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.put = function(url, data, fn){
	  var req = request('PUT', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * Expose `request`.
	 */

	module.exports = request;


/***/ },
/* 236 */
/***/ function(module, exports) {

	
	/**
	 * Expose `Emitter`.
	 */

	module.exports = Emitter;

	/**
	 * Initialize a new `Emitter`.
	 *
	 * @api public
	 */

	function Emitter(obj) {
	  if (obj) return mixin(obj);
	};

	/**
	 * Mixin the emitter properties.
	 *
	 * @param {Object} obj
	 * @return {Object}
	 * @api private
	 */

	function mixin(obj) {
	  for (var key in Emitter.prototype) {
	    obj[key] = Emitter.prototype[key];
	  }
	  return obj;
	}

	/**
	 * Listen on the given `event` with `fn`.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.on =
	Emitter.prototype.addEventListener = function(event, fn){
	  this._callbacks = this._callbacks || {};
	  (this._callbacks[event] = this._callbacks[event] || [])
	    .push(fn);
	  return this;
	};

	/**
	 * Adds an `event` listener that will be invoked a single
	 * time then automatically removed.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.once = function(event, fn){
	  var self = this;
	  this._callbacks = this._callbacks || {};

	  function on() {
	    self.off(event, on);
	    fn.apply(this, arguments);
	  }

	  on.fn = fn;
	  this.on(event, on);
	  return this;
	};

	/**
	 * Remove the given callback for `event` or all
	 * registered callbacks.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.off =
	Emitter.prototype.removeListener =
	Emitter.prototype.removeAllListeners =
	Emitter.prototype.removeEventListener = function(event, fn){
	  this._callbacks = this._callbacks || {};

	  // all
	  if (0 == arguments.length) {
	    this._callbacks = {};
	    return this;
	  }

	  // specific event
	  var callbacks = this._callbacks[event];
	  if (!callbacks) return this;

	  // remove all handlers
	  if (1 == arguments.length) {
	    delete this._callbacks[event];
	    return this;
	  }

	  // remove specific handler
	  var cb;
	  for (var i = 0; i < callbacks.length; i++) {
	    cb = callbacks[i];
	    if (cb === fn || cb.fn === fn) {
	      callbacks.splice(i, 1);
	      break;
	    }
	  }
	  return this;
	};

	/**
	 * Emit `event` with the given args.
	 *
	 * @param {String} event
	 * @param {Mixed} ...
	 * @return {Emitter}
	 */

	Emitter.prototype.emit = function(event){
	  this._callbacks = this._callbacks || {};
	  var args = [].slice.call(arguments, 1)
	    , callbacks = this._callbacks[event];

	  if (callbacks) {
	    callbacks = callbacks.slice(0);
	    for (var i = 0, len = callbacks.length; i < len; ++i) {
	      callbacks[i].apply(this, args);
	    }
	  }

	  return this;
	};

	/**
	 * Return array of callbacks for `event`.
	 *
	 * @param {String} event
	 * @return {Array}
	 * @api public
	 */

	Emitter.prototype.listeners = function(event){
	  this._callbacks = this._callbacks || {};
	  return this._callbacks[event] || [];
	};

	/**
	 * Check if this emitter has `event` handlers.
	 *
	 * @param {String} event
	 * @return {Boolean}
	 * @api public
	 */

	Emitter.prototype.hasListeners = function(event){
	  return !! this.listeners(event).length;
	};


/***/ },
/* 237 */
/***/ function(module, exports) {

	
	/**
	 * Reduce `arr` with `fn`.
	 *
	 * @param {Array} arr
	 * @param {Function} fn
	 * @param {Mixed} initial
	 *
	 * TODO: combatible error handling?
	 */

	module.exports = function(arr, fn, initial){  
	  var idx = 0;
	  var len = arr.length;
	  var curr = arguments.length == 3
	    ? initial
	    : arr[idx++];

	  while (idx < len) {
	    curr = fn.call(null, curr, arr[idx], ++idx, arr);
	  }
	  
	  return curr;
	};

/***/ },
/* 238 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = Promise;

	function Promise(async_task) {
	  if (typeof async_task == 'function') {
	    var $d = $.Deferred();
	    async_task($d.resolve, $d.reject);
	    return $d;
	  }
	}

	module.exports = exports['default'];

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _appConfig = __webpack_require__(157);

	function SiteUrl(s) {
	  this.url = decodeURIComponent(s);
	}

	//ajax根路径
	SiteUrl.prototype._url_base = _appConfig.ajax;

	/*
	 * 无参数： 直接返回相应url
	 * 有参数： 将参数解析到url并返回(注意是按顺序解析)
	 */
	SiteUrl.prototype.toString = function () {
	  var u = this.url;
	  if (arguments.length) {
	    for (var i = 0, len = arguments.length; i < len; i++) {
	      u = u.replace(/:\w+/, arguments[i]);
	    }
	  }
	  return this._url_base + u;
	};

	var URL = (function () {
	  /*********************************/
	  /****** app url global config ****/
	  /*********************************/
	  var url = {
	    login: '/login',

	    //订单
	    orders: '/orders',
	    order_add: '/order',
	    order_detail: '/order/:orderId',
	    save_order: '/order/:orderId',
	    submit_order: '/order/:orderId/submit',
	    provinces: '/provinces',
	    cities: '/province/:provinceId/cities',
	    districts: '/city/:cityId/districts',
	    order_srcs: '/order/srcs',
	    pay_modes: '/pay/modes',
	    order_sign: '/order/:orderId/signin',
	    order_unsign: '/order/:orderId/unsignin',
	    order_opt_record: '/order/:orderId/history',
	    order_exception: '/order/:orderId/exception',
	    cancel_order: '/order/:orderId/cancel',
	    alter_delivery: '/order/:orderId/delivery',
	    alter_station: '/order/:orderId/station',
	    check_groupbuy_psd: '/coupon', //验券

	    //产品
	    categories: '/product/categories',
	    products: '/products',

	    //送货管理
	    order_exchange: '/orders/exchange', //订单转送单列表
	    order_delivery: '/orders/delivery', //送货单管理列表
	    order_distribute: '/orders/signin', //配送单管理列表
	    print: '/orders/print',
	    apply_print: '/order/reprint/apply', //申请打印
	    print_review_list: '/order/reprint/applies',
	    review_print_apply: '/order/reprint/apply/:apply_id', //审核申请
	    reprint_validate: '/order/:orderId/validate',
	    reprint: '/order/:orderId/reprint', //重新打印

	    //配送员
	    deliveryman: '/delivery/deliverymans',
	    deliveryman_apply: '/delivery/deliveryman', //分配配送员

	    //地址
	    stations: '/stations', //配送站
	    shops: '/district/:districtId/shops', //门店
	    auto_loc: '/delivery/autoAllocate', //自动分配配送站

	    //配送区域管理
	    station_info: '/stations/getStationsByName', //单个配送站信息
	    station_list_info: '/city/:cityId/stations', //指定城市下配送站信息
	    station_scope: '/station/:stationId', //配送范围
	    new_station_scope: 'station/:stationId/coords' };

	  //修改配送范围
	  for (var a in url) {
	    url[a] = new SiteUrl(url[a]);
	  }
	  return url;
	})();

	exports['default'] = URL;
	module.exports = exports['default'];

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * access_control_list : 权限列表
	 */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = validate;
	exports.onEnter = onEnter;

	var _configAppConfig = __webpack_require__(157);

	var PERMISSIONS = undefined;
	//测试数据
	// const PERMISSIONS = [
	//   'OrderManage',
	//     'OrderManageView',
	//     'OrderManageEdit',
	//     'OrderManageAddressFilter',
	//   'DeliveryChange',
	//     'DeliveryManageChangeStationFilter',
	//     'DeliveryManageChangeAddressFilter',
	//   'DeliveryManage',
	//     'DeliveryManageDeliveryAddressFilter',
	//   'DistributeManage',
	//     'DeliveryManageDistributeStationFilter',
	//     'DeliveryManageDistributeAddressFilter',
	//   'PrintReview',
	// ];

	/**
	 * 有无该权限
	 * @param  {String} role 权限名
	 */

	function validate(role) {
	  //禁用权限控制
	  if (!_configAppConfig.acl) {
	    return true;
	  }
	  //初始化PERMISSIONS：分两种情况
	  //1. 第一次登录后；2. 已登陆后刷新；
	  if (!PERMISSIONS) {
	    var user = window.xfxb.user;

	    if (user) {
	      if (typeof user === 'string') {
	        try {
	          PERMISSIONS = JSON.parse(user).permissions || [];
	        } catch (e) {
	          console.error(e);
	          PERMISSIONS = [];
	        }
	      } else {
	        PERMISSIONS = user.permissions || [];
	      }
	    } else {
	      return false; //未知错误，权限全部为禁止
	    }
	  }
	  return PERMISSIONS.some(function (n) {
	    return n === role;
	  });
	}

	/**
	 * 注意，路由的权限控制存在于两部分，一部分在react-router当中，一部分在nav当中;
	 * 该方法用于react-router当中，进行权限控制
	 * @param  {String} role 权限名
	 */

	function onEnter(role) {
	  return function (state, replace) {
	    //登录成功之后，才有必要进行validate
	    if (window.xfxb.login) {
	      if (!validate(role)) {
	        replace({}, '/403', null);
	      }
	    }
	  };
	}

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _reduxForm = __webpack_require__(242);

	var _reactAddonsLinkedStateMixin = __webpack_require__(284);

	var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsAction_types = __webpack_require__(289);

	var _actionsOrders = __webpack_require__(290);

	var OrderActions = _interopRequireWildcard(_actionsOrders);

	var _actionsOrder_manage = __webpack_require__(291);

	var OrderManageActions = _interopRequireWildcard(_actionsOrder_manage);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _configAppConfig = __webpack_require__(157);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _commonLinkers = __webpack_require__(304);

	var _commonLinkers2 = _interopRequireDefault(_commonLinkers);

	var _commonSearch_input = __webpack_require__(305);

	var _commonSearch_input2 = _interopRequireDefault(_commonSearch_input);

	var _commonLoading = __webpack_require__(306);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonRecipient_info = __webpack_require__(308);

	var _commonRecipient_info2 = _interopRequireDefault(_commonRecipient_info);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var _utilsIndex = __webpack_require__(160);

	var _utilsAcl = __webpack_require__(240);

	var _utilsAcl2 = _interopRequireDefault(_utilsAcl);

	var _mixinsMap = __webpack_require__(310);

	var _commonOrder_products_detail = __webpack_require__(312);

	var _commonOrder_products_detail2 = _interopRequireDefault(_commonOrder_products_detail);

	var _order_detail_modal = __webpack_require__(313);

	var _order_detail_modal2 = _interopRequireDefault(_order_detail_modal);

	var _manage_alter_delivery_modal = __webpack_require__(314);

	var _manage_alter_delivery_modal2 = _interopRequireDefault(_manage_alter_delivery_modal);

	var _commonOrder_srcs_selects = __webpack_require__(316);

	var _commonOrder_srcs_selects2 = _interopRequireDefault(_commonOrder_srcs_selects);

	var _commonOperation_record_modalJs = __webpack_require__(317);

	var _commonOperation_record_modalJs2 = _interopRequireDefault(_commonOperation_record_modalJs);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  /**
	   * 每个页面的filter都对应一个form表单，在全局state的form字段下
	   */

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(
	          'button',
	          { onClick: this.addOrder.bind(this), className: 'btn btn-sm btn-theme pull-left' },
	          '添加订单'
	        ),
	        _react2['default'].createElement(_commonLinkers2['default'], {
	          data: ['总订单页面', '处理页面'],
	          active: '总订单页面',
	          onChange: this.filterHandler.bind(this),
	          className: 'pull-right' })
	      );
	    }
	  }, {
	    key: 'addOrder',
	    value: function addOrder() {
	      // history.replace('/om/index/add');
	      _history_instance2['default'].push('/om/index/add');
	    }
	  }, {
	    key: 'filterHandler',
	    value: function filterHandler(name) {
	      var searchOpts = { page_no: 0, page_size: this.props.pageSize };
	      if (name == '总订单页面') {
	        searchOpts.is_submit = undefined;
	      } else {
	        searchOpts.is_submit = 0;
	      }
	      this.props.getOrderList(searchOpts);
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var FilterHeader = (function (_Component2) {
	  _inherits(FilterHeader, _Component2);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      submit_opts: [{ id: 1, text: '已提交' }, { id: 0, text: '未提交' }],
	      deal_opts: [{ id: 1, text: '已处理' }, { id: 0, text: '未处理' }],
	      selected_order_src_level1_id: _configAppConfig.SELECT_DEFAULT_VALUE,
	      search_ing: false
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var keywords = _props$fields.keywords;
	      var begin_time = _props$fields.begin_time;
	      var end_time = _props$fields.end_time;
	      var is_submit = _props$fields.is_submit;
	      var is_deal = _props$fields.is_deal;
	      var src_id = _props$fields.src_id;
	      var province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var status = _props$fields.status;
	      var provinces = _props.provinces;
	      var cities = _props.cities;
	      var all_order_srcs = _props.all_order_srcs;
	      var all_order_status = _props.all_order_status;
	      var search_ing = this.state.search_ing;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body form-inline' },
	          _react2['default'].createElement('input', _extends({}, keywords, { className: 'form-control input-xs v-mg', placeholder: '关键字' })),
	          ' 开始时间',
	          _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': begin_time, className: 'short-input' }),
	          ' 配送时间',
	          _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': end_time, className: 'short-input space-right' }),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, is_submit, { options: this.state.submit_opts, 'default-text': '是否提交', className: 'space-right' })),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, is_deal, { options: this.state.deal_opts, 'default-text': '是否处理', className: 'space-right' })),
	          _react2['default'].createElement(_commonOrder_srcs_selects2['default'], { all_order_srcs: all_order_srcs, src_id: src_id }),
	          (0, _utilsAcl2['default'])('OrderManageAddressFilter') ? [_react2['default'].createElement(_commonSelect2['default'], _extends({}, province_id, { onChange: this.onProvinceChange.bind(this, province_id.onChange), options: provinces, ref: 'province', 'default-text': '选择省份', key: 'province', className: 'space-right' })), _react2['default'].createElement(_commonSelect2['default'], _extends({}, city_id, { options: cities, 'default-text': '选择城市', ref: 'city', key: 'city', className: 'space-right' }))] : null,
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, status, { options: all_order_status, 'default-text': '订单状态', className: 'space-right' })),
	          _react2['default'].createElement(
	            'button',
	            { disabled: search_ing, 'data-submitting': search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs' },
	            _react2['default'].createElement('i', { className: 'fa fa-search' }),
	            ' 搜索'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this = this;

	      setTimeout(function () {
	        var _props$actions = _this.props.actions;
	        var getProvinces = _props$actions.getProvinces;
	        var getOrderSrcs = _props$actions.getOrderSrcs;

	        getProvinces();
	        getOrderSrcs();
	        (0, _utilsLazy_load2['default'])('noty');
	      }, 0);
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.actions.provinceReset();
	      if (value != this.refs.province.props['default-value']) var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.actions.getCities(value).done(function () {
	        $city.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this2 = this;

	      this.setState({ search_ing: true });
	      this.props.actions.getOrderList({ page_no: 0, page_size: this.props.page_size }).always(function () {
	        _this2.setState({ search_ing: false });
	      });
	    }
	  }]);

	  return FilterHeader;
	})(_react.Component);

	FilterHeader.propTypes = {
	  actions: _react.PropTypes.object.isRequired
	};
	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'order_manage_filter',
	  fields: ['keywords', 'begin_time', 'end_time', 'is_submit', 'is_deal', 'src_id', 'province_id', 'city_id', 'status']
	})(FilterHeader);

	var OrderRow = _react2['default'].createClass({
	  displayName: 'OrderRow',

	  render: function render() {
	    var props = this.props;

	    var src_name = props.src_name ? props.src_name.split(',') : ['', ''];
	    var _order_status = _configAppConfig.order_status[props.status] || {};
	    return _react2['default'].createElement(
	      'tr',
	      { className: props.active_order_id == props.order_id ? 'active' : '', onClick: this.clickHandler },
	      _react2['default'].createElement(
	        'td',
	        null,
	        this.ACL([_react2['default'].createElement(
	          'a',
	          { onClick: this.editHandler, key: 'OrderManageEdit', href: 'javascript:;' },
	          '[编辑]'
	        ), _react2['default'].createElement('br', { key: '1' })], [_react2['default'].createElement(
	          'a',
	          { onClick: this.viewOrderDetail, key: 'OrderManageView', href: 'javascript:;' },
	          '[查看]'
	        ), _react2['default'].createElement('br', { key: '2' })], [_react2['default'].createElement(
	          'a',
	          { onClick: this.alterDelivery, key: 'OrderManageAlterDelivery', href: 'javascript:;', className: 'nowrap' },
	          '[修改配送]'
	        ), _react2['default'].createElement('br', { key: '3' })], [_react2['default'].createElement(
	          'a',
	          { onClick: this.alterStation, key: 'OrderManageAlterStation', href: 'javascript:;', className: 'nowrap' },
	          '[分配配送站]'
	        ), _react2['default'].createElement('br', { key: '4' })], [_react2['default'].createElement(
	          'a',
	          { onClick: this.cancelOrder, key: 'OrderManageCancel', href: 'javascript:;', className: 'nowrap' },
	          '[订单取消]'
	        )])
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.merchant_id
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.order_id
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.owner_name,
	        _react2['default'].createElement('br', null),
	        props.owner_mobile
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'time' },
	          props.created_time
	        )
	      ),
	      _react2['default'].createElement(_commonRecipient_info2['default'], { data: props }),
	      _react2['default'].createElement(
	        'td',
	        null,
	        [props.delivery_type, props.delivery_type == '门店自提' ? _react2['default'].createElement(
	          'div',
	          { key: 'shop', className: 'theme-font-bg round-2' },
	          props.recipient_address.split(/\s+/g)[1] || ' - '
	        ) : null]
	      ),
	      _react2['default'].createElement(
	        'td',
	        { className: 'nowrap' },
	        src_name[0],
	        src_name[1] ? [_react2['default'].createElement('br', null), _react2['default'].createElement(
	          'span',
	          { key: 'src_2', className: 'bordered bg-warning' },
	          src_name[1]
	        )] : null
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement(
	          'strong',
	          { className: 'strong' },
	          props.pay_status
	        )
	      ),
	      _react2['default'].createElement(
	        'td',
	        { className: 'nowrap text-left' },
	        '原价：￥',
	        props.total_original_price / 100,
	        ' ',
	        _react2['default'].createElement('br', null),
	        '实际售价：￥',
	        props.total_discount_price / 100,
	        ' ',
	        _react2['default'].createElement('br', null),
	        '应收金额：￥',
	        props.total_amount / 100
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'bordered bold order-status', style: { color: _order_status.color || 'inherit', background: _order_status.bg } },
	          _order_status.value
	        )
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.delivery_name
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'time' },
	          props.delivery_time
	        )
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.is_submit == '1' ? '是' : '否'
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.is_deal == '1' ? '是' : '否'
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.city
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.cancel_reason
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'remark-in-table' },
	          props.remarks
	        )
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.updated_by
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        props.created_by
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement(
	          'a',
	          { onClick: this.viewOrderOperationRecord, className: 'inline-block time', href: 'javascript:;' },
	          props.updated_time
	        )
	      )
	    );
	  },
	  ACL: function ACL() {
	    var status = this.props.status;

	    var roles = null;
	    switch (status) {
	      case 'UNTREATED':
	        roles = ['OrderManageEdit', 'OrderManageCancel', 'OrderManageView'];break;
	      case 'TREATED':
	        roles = ['OrderManageEdit', 'OrderManageCancel', 'OrderManageView'];break;
	      case 'STATION':
	        roles = ['OrderManageCancel', 'OrderManageAlterDelivery', 'OrderManageView'];break;
	      case 'INLINE':
	        roles = ['OrderManageAlterDelivery', 'OrderManageView'];break;
	      case 'DELIVERY':
	      case 'DELIVERY':
	      default:
	        roles = ['OrderManageView'];break;
	    }
	    var results = [];
	    for (var i = 0, len = arguments.length; i < len; i++) {
	      var ele = arguments[i][0];
	      if ((0, _utilsAcl2['default'])(ele.key) && roles.some(function (n) {
	        return n == ele.key;
	      })) {
	        results.push(arguments[i]);
	      }
	    }
	    return results;
	  },
	  activeOrder: function activeOrder() {
	    var _props2 = this.props;
	    var order_id = _props2.order_id;
	    var active_order_id = _props2.active_order_id;
	    var activeOrder = _props2.activeOrder;
	    var prepareDeliveryDataOK = _props2.prepareDeliveryDataOK;
	    var getProvinces = _props2.getProvinces;
	    var getCities = _props2.getCities;
	    var getDistricts = _props2.getDistricts;
	    var getDeliveryShops = _props2.getDeliveryShops;
	    var getDeliveryStations = _props2.getDeliveryStations;

	    if (order_id != active_order_id) {
	      activeOrder(order_id).done(function (data) {
	        //这里拉取数据完全是为了给“修改配送”modal使用
	        setTimeout((function () {
	          $.when(getProvinces(), getCities(data.province_id), getDistricts(data.city_id), getDeliveryShops(data.regionalism_id), getDeliveryStations()).done(prepareDeliveryDataOK);
	        }).bind(this), 400);
	      });
	    }
	  },
	  clickHandler: function clickHandler() {
	    this.activeOrder();
	    this.props.showProductsDetail();
	  },
	  editHandler: function editHandler(e) {
	    _history_instance2['default'].push('/om/index/' + this.props.order_id);
	    e.stopPropagation();
	  },
	  viewOrderDetail: function viewOrderDetail(e) {
	    this.props.viewOrderDetail(this.props);
	    this.activeOrder();
	    e.stopPropagation();
	  },
	  alterDelivery: function alterDelivery(e) {
	    this.props.showAlterDelivery();
	    this.activeOrder();
	    e.stopPropagation();
	  },
	  alterStation: function alterStation(e) {
	    this.props.showAlterStation();
	    this.activeOrder();
	    e.stopPropagation();
	  },
	  viewOrderOperationRecord: function viewOrderOperationRecord(e) {
	    this.props.viewOrderOperationRecord(this.props);
	    e.stopPropagation();
	  },
	  cancelOrder: function cancelOrder(e) {
	    this.props.showCancelOrder(this.props);
	    this.activeOrder();
	    e.stopPropagation();
	  },
	  orderException: function orderException(e) {
	    //已被弃用
	    this.props.showOrderException(this.props);
	    this.activeOrder();
	    e.stopPropagation();
	  }
	});

	var ManagePannel = (function (_Component3) {
	  _inherits(ManagePannel, _Component3);

	  function ManagePannel(props) {
	    _classCallCheck(this, ManagePannel);

	    _get(Object.getPrototypeOf(ManagePannel.prototype), 'constructor', this).call(this, props);
	    this.viewOrderDetail = this.viewOrderDetail.bind(this);
	    this.showAlterDelivery = this.showAlterDelivery.bind(this);
	    this.showAlterStation = this.showAlterStation.bind(this);
	    this.showCancelOrder = this.showCancelOrder.bind(this);
	    this.showOrderException = this.showOrderException.bind(this);
	    this.viewOrderOperationRecord = this.viewOrderOperationRecord.bind(this);
	    this.search = this.search.bind(this);
	    this.state = {
	      page_size: 5
	    };
	  }

	  _createClass(ManagePannel, [{
	    key: 'render',
	    value: function render() {
	      var _this3 = this;

	      var _props3 = this.props;
	      var filter = _props3.filter;
	      var area = _props3.area;
	      var alter_delivery_area = _props3.alter_delivery_area;
	      var delivery_stations = _props3.delivery_stations;
	      var _props3$main = _props3.main;
	      var submitting = _props3$main.submitting;
	      var prepare_delivery_data_ok = _props3$main.prepare_delivery_data_ok;
	      var activeOrder = _props3.activeOrder;
	      var showProductsDetail = _props3.showProductsDetail;
	      var operationRecord = _props3.operationRecord;
	      var dispatch = _props3.dispatch;
	      var getOrderList = _props3.getOrderList;
	      var getOrderOptRecord = _props3.getOrderOptRecord;
	      var resetOrderOptRecord = _props3.resetOrderOptRecord;
	      var cancelOrder = _props3.cancelOrder;
	      var orderException = _props3.orderException;
	      var _props$orders = this.props.orders;
	      var loading = _props$orders.loading;
	      var page_no = _props$orders.page_no;
	      var total = _props$orders.total;
	      var list = _props$orders.list;
	      var check_order_info = _props$orders.check_order_info;
	      var active_order_id = _props$orders.active_order_id;
	      var show_products_detail = _props$orders.show_products_detail;
	      var viewOrderDetail = this.viewOrderDetail;
	      var showAlterDelivery = this.showAlterDelivery;
	      var showAlterStation = this.showAlterStation;
	      var showCancelOrder = this.showCancelOrder;
	      var showOrderException = this.showOrderException;
	      var viewOrderOperationRecord = this.viewOrderOperationRecord;
	      var search = this.search;

	      var content = list.map(function (n, i) {
	        return _react2['default'].createElement(OrderRow, _extends({ key: n.order_id
	        }, _extends({}, n, { active_order_id: active_order_id }, _this3.props, { viewOrderDetail: viewOrderDetail, showAlterDelivery: showAlterDelivery, showAlterStation: showAlterStation, showCancelOrder: showCancelOrder, showOrderException: showOrderException, viewOrderOperationRecord: viewOrderOperationRecord })));
	      });
	      return _react2['default'].createElement(
	        'div',
	        { className: 'order-manage' },
	        _react2['default'].createElement(TopHeader, { getOrderList: getOrderList, pageSize: this.state.page_size }),
	        _react2['default'].createElement(FilterHeader, _extends({}, _extends({}, filter, area), {
	          actions: _extends({}, (0, _redux.bindActionCreators)(_extends({}, (0, _actionsArea2['default'])(), { getOrderSrcs: _actionsOrder_manage_form.getOrderSrcs }), dispatch), { getOrderList: getOrderList }),
	          page_size: this.state.page_size })),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '订单列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive main-list' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作管理'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '商户订单'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单号'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '下单人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '下单时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '收货人信息'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送方式'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单来源'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '支付状态'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '总金额'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单状态'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送站'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '是否提交'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '是否处理'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '所属城市'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '取消理由'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '备注'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '创建人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作时间'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  (0, _commonLoading.tableLoader)(loading, content)
	                )
	              )
	            ),
	            _react2['default'].createElement(_commonPagination2['default'], {
	              page_no: page_no,
	              total_count: total,
	              page_size: this.state.page_size,
	              onPageChange: this.onPageChange.bind(this)
	            })
	          )
	        ),
	        show_products_detail && check_order_info ? _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              null,
	              '订单管理 >> 产品详情'
	            ),
	            _react2['default'].createElement(_commonOrder_products_detail2['default'], { products: check_order_info.products })
	          )
	        ) : null,
	        _react2['default'].createElement(_order_detail_modal2['default'], { ref: 'detail_modal', data: check_order_info || {} }),
	        _react2['default'].createElement(_commonOperation_record_modalJs2['default'], _extends({ ref: 'OperationRecordModal' }, _extends({ getOrderOptRecord: getOrderOptRecord, resetOrderOptRecord: resetOrderOptRecord }, operationRecord))),
	        _react2['default'].createElement(CancelOrderModal, _extends({ ref: 'CancelOrderModal' }, { submitting: submitting, cancelOrder: cancelOrder, callback: search })),
	        _react2['default'].createElement(OrderExceptionModal, _extends({ ref: 'OrderExceptionModal' }, { submitting: submitting, orderException: orderException, callback: search })),
	        _react2['default'].createElement(AlterStationModal, _extends({ ref: 'AlterStationModal'
	        }, _extends({ submitting: submitting }, delivery_stations, { order: check_order_info, active_order_id: active_order_id, show_products_detail: show_products_detail, loading: !prepare_delivery_data_ok
	        }, alter_delivery_area, { actions: this.props, callback: search }))),
	        _react2['default'].createElement(_manage_alter_delivery_modal2['default'], _extends({ ref: 'AlterDeliveryModal'
	        }, _extends({ submitting: submitting }, delivery_stations, { order: check_order_info, active_order_id: active_order_id, show_products_detail: show_products_detail, loading: !prepare_delivery_data_ok
	        }, alter_delivery_area, { actions: this.props, callback: search })))
	      );
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.search(page);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.search();
	    }
	  }, {
	    key: 'search',
	    value: function search(page) {
	      page = typeof page == 'undefined' ? this.props.orders.page_no : page;
	      this.props.getOrderList({ page_no: page, page_size: this.state.page_size });
	    }
	  }, {
	    key: 'viewOrderDetail',
	    value: function viewOrderDetail() {
	      this.refs.detail_modal.show();
	    }
	  }, {
	    key: 'showAlterDelivery',
	    value: function showAlterDelivery() {
	      this.refs.AlterDeliveryModal.show();
	    }
	  }, {
	    key: 'showAlterStation',
	    value: function showAlterStation() {
	      this.refs.AlterStationModal.show();
	    }
	  }, {
	    key: 'showCancelOrder',
	    value: function showCancelOrder(order) {
	      this.refs.CancelOrderModal.show(order);
	    }
	  }, {
	    key: 'showOrderException',
	    value: function showOrderException(order) {
	      this.refs.OrderExceptionModal.show(order);
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(order) {
	      this.refs.OperationRecordModal.show(order);
	    }
	  }]);

	  return ManagePannel;
	})(_react.Component);

	function mapStateToProps(_ref) {
	  var orderManage = _ref.orderManage;

	  return orderManage;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  var actions = (0, _redux.bindActionCreators)(_extends({}, OrderActions, (0, _actionsArea2['default'])(_actionsAction_types.AreaActionTypes2), {
	    getDeliveryStations: _actionsOrder_manage_form.getDeliveryStations,
	    autoGetDeliveryStations: _actionsOrder_manage_form.autoGetDeliveryStations
	  }, OrderManageActions), dispatch);
	  actions.dispatch = dispatch;
	  return actions;
	}

	// export default connect(mapStateToProps, OrderActions)(ManagePannel);
	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ManagePannel);

	/***************   *******   *****************/
	/***************   子模态框   *****************/
	/***************   *******   *****************/

	var CancelOrderModal = _react2['default'].createClass({
	  displayName: 'CancelOrderModal',

	  getInitialState: function getInitialState() {
	    return {
	      reason: '',
	      tips: '请填写取消原因或从下方选择原因',
	      order: {},
	      reasons: ['客户打电话取消', '订单信息有误', '无法生产并与客户沟通']
	    };
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  render: function render() {
	    var _this4 = this;

	    var reasons = this.state.reasons.map(function (n, i) {
	      return _react2['default'].createElement(
	        'button',
	        { onClick: _this4.chooseReason.bind(_this4, n), key: i, className: 'btn btn-default btn-xs space' },
	        n
	      );
	    });
	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { submitting: this.props.submitting, title: '取消订单', onConfirm: this.onConfirm, onCancel: this.hideCallback, ref: 'modal' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group round', style: { border: '1px solid #ccc' } },
	        _react2['default'].createElement('textarea', {
	          valueLink: this.linkState('reason'),
	          className: 'form-control',
	          style: { 'border': 'none', maxWidth: '100%' },
	          placeholder: this.state.tips,
	          rows: '3'
	        }),
	        _react2['default'].createElement('hr', { className: 'dotted', style: { margin: '10px 0' } }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'text-center', style: { 'paddingBottom': 10 } },
	          reasons
	        )
	      )
	    );
	  },
	  chooseReason: function chooseReason(reason) {
	    this.setState({ reason: reason });
	  },
	  onConfirm: function onConfirm() {
	    var _state = this.state;
	    var reason = _state.reason;
	    var tips = _state.tips;
	    var _state$order = _state.order;
	    var order_id = _state$order.order_id;
	    var updated_time = _state$order.updated_time;

	    if (reason) {
	      this.props.cancelOrder(order_id, { cancel_reason: reason, updated_time: updated_time }).done((function () {
	        this.refs.modal.hide();
	        this.props.callback();
	      }).bind(this)).fail((function () {
	        (0, _utilsIndex.Noty)('error', '异常错误');
	      }).bind(this));
	    } else {
	      (0, _utilsIndex.Noty)('warning', tips);
	    }
	  },
	  componentDidMount: function componentDidMount() {},
	  show: function show(order) {
	    this.setState({ order: order }, function () {
	      this.refs.modal.show();
	    });
	  },
	  hideCallback: function hideCallback() {
	    this.setState(this.getInitialState());
	  }
	});

	var AlterStationModal = _react2['default'].createClass({
	  displayName: 'AlterStationModal',

	  propTypes: {
	    actions: _react.PropTypes.shape({
	      autoGetDeliveryStations: _react.PropTypes.func.isRequired
	    })
	  },
	  getInitialState: function getInitialState() {
	    return {
	      delivery_id: undefined,
	      handling: false,
	      auto_match_delivery_center: false,
	      auto_match_msg: ''
	    };
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (nextProps.order) {
	      this.setState({ delivery_id: nextProps.order.delivery_id });
	    }
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  render: function render() {
	    var _props4 = this.props;
	    var submitting = _props4.submitting;
	    var loading = _props4.loading;
	    var order = _props4.order;
	    var handling = this.state.handling;

	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { loading: loading, disabled: handling, submitting: submitting, onConfirm: this.onConfirm, title: '分配配送站', onCancel: this.hideCallback, ref: 'modal' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '收货地址：'
	        ),
	        order && order.province_name + ' ' + order.city_name + ' ' + order.regionalism_name + ' ' + order.recipient_address
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '配送中心：'
	        ),
	        _react2['default'].createElement(_commonSelect2['default'], { ref: 'delivery_center', valueLink: this.linkState('delivery_id'), className: 'transition', options: this.props.delivery_stations }),
	        '　',
	        _react2['default'].createElement(
	          'button',
	          { onClick: this.autoMatchHandler, disabled: handling, 'data-submitting': handling, className: 'btn btn-xs btn-theme' },
	          '自动分配'
	        ),
	        ' ',
	        _react2['default'].createElement(
	          'span',
	          { className: this.state.auto_match_delivery_center ? 'text-success' : 'text-danger' },
	          this.state.auto_match_msg
	        )
	      )
	    );
	  },
	  componentDidMount: function componentDidMount() {
	    setTimeout((function () {
	      (0, _mixinsMap.createMap)(this);
	    }).bind(this), 100);
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).on('click', this.clearMsg);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).off('click', this.clearMsg);
	  },
	  clearMsg: function clearMsg() {
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).removeClass('alert-success alert-danger');
	    this.setState({ auto_match_msg: '' });
	  },
	  autoMatchHandler: function autoMatchHandler(e) {
	    var order = this.props.order;

	    this.setState({ handling: true }, function () {
	      var _this5 = this;

	      _mixinsMap.autoMatch.call(this, order.city_name, order.regionalism_name + order.recipient_address).done(function (delivery_id) {
	        if (delivery_id) _this5.setState({ delivery_id: delivery_id });
	      }).always(function () {
	        _this5.setState({ handling: false });
	      });
	    });
	  },
	  onConfirm: function onConfirm() {
	    var delivery_id = this.state.delivery_id;

	    var delivery_name = $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).find('option:selected').html();
	    if (!delivery_id || delivery_id == _configAppConfig.SELECT_DEFAULT_VALUE) {
	      (0, _utilsIndex.Noty)('warning', '请选择配送中心');return;
	    }
	    var _props5 = this.props;
	    var alterStation = _props5.actions.alterStation;
	    var active_order_id = _props5.active_order_id;
	    var callback = _props5.callback;
	    var updated_time = _props5.order.updated_time;

	    alterStation(active_order_id, { delivery_id: delivery_id, delivery_name: delivery_name, updated_time: updated_time }).done((function () {
	      callback();
	      this.refs.modal.hide();
	    }).bind(this)).fail(function () {
	      (0, _utilsIndex.Noty)('error', '服务器异常');
	    });
	  },
	  show: function show() {
	    this.refs.modal.show();
	  },
	  hideCallback: function hideCallback() {
	    // this.refs.modal.hide();
	    this.setState(this.getInitialState());
	    this.props.actions.resetDeliveryStations();
	  }
	});

	var OrderExceptionModal = _react2['default'].createClass({
	  displayName: 'OrderExceptionModal',

	  getInitialState: function getInitialState() {
	    return {
	      reason: '',
	      tips: '请填写异常原因或从下方选择原因',
	      order: {},
	      reasons: ['配送站分配有误', '蛋糕无法派送']
	    };
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  render: function render() {
	    var _this6 = this;

	    var reasons = this.state.reasons.map(function (n, i) {
	      return _react2['default'].createElement(
	        'button',
	        { onClick: _this6.chooseReason.bind(_this6, n), key: i, className: 'btn btn-default btn-xs space' },
	        n
	      );
	    });
	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { submitting: this.props.submitting, onConfirm: this.onConfirm, title: '订单异常', onCancel: this.hideCallback, ref: 'modal' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group round', style: { border: '1px solid #ccc' } },
	        _react2['default'].createElement('textarea', {
	          valueLink: this.linkState('reason'),
	          className: 'form-control',
	          style: { 'border': 'none', maxWidth: '100%' },
	          placeholder: this.state.tips,
	          rows: '3'
	        }),
	        _react2['default'].createElement('hr', { className: 'dotted', style: { margin: '10px 0' } }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'text-center', style: { 'paddingBottom': 10 } },
	          reasons
	        )
	      )
	    );
	  },
	  chooseReason: function chooseReason(reason) {
	    this.setState({ reason: reason });
	  },
	  onConfirm: function onConfirm() {
	    var _state2 = this.state;
	    var reason = _state2.reason;
	    var tips = _state2.tips;
	    var order = _state2.order;

	    if (reason) {
	      this.props.orderException(order.order_id, { cancel_reason: reason }).done((function () {
	        this.refs.modal.hide();
	        this.props.callback();
	      }).bind(this)).fail((function () {
	        (0, _utilsIndex.Noty)('error', '异常错误');
	      }).bind(this));
	    } else {
	      (0, _utilsIndex.Noty)('warning', tips);
	    }
	  },
	  componentDidMount: function componentDidMount() {},
	  show: function show(order) {
	    this.setState({ order: order }, function () {
	      this.refs.modal.show();
	    });
	  },
	  hideCallback: function hideCallback() {
	    this.setState(this.getInitialState());
	  }
	});
	module.exports = exports['default'];
	/*收货人信息*/ /*配送方式*/ /*订单来源*/ /*订单状态*/

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(216);

	var _createAll2 = __webpack_require__(243);

	var _createAll3 = _interopRequireDefault(_createAll2);

	var _createAll = _createAll3['default'](false, _react2['default'], _reactRedux.connect);

	var actionTypes = _createAll.actionTypes;
	var blur = _createAll.blur;
	var change = _createAll.change;
	var changeWithKey = _createAll.changeWithKey;
	var destroy = _createAll.destroy;
	var focus = _createAll.focus;
	var reducer = _createAll.reducer;
	var reduxForm = _createAll.reduxForm;
	var getValues = _createAll.getValues;
	var initialize = _createAll.initialize;
	var initializeWithKey = _createAll.initializeWithKey;
	var propTypes = _createAll.propTypes;
	var reset = _createAll.reset;
	var startAsyncValidation = _createAll.startAsyncValidation;
	var startSubmit = _createAll.startSubmit;
	var stopAsyncValidation = _createAll.stopAsyncValidation;
	var stopSubmit = _createAll.stopSubmit;
	var touch = _createAll.touch;
	var touchWithKey = _createAll.touchWithKey;
	var untouch = _createAll.untouch;
	var untouchWithKey = _createAll.untouchWithKey;
	exports.actionTypes = actionTypes;
	exports.blur = blur;
	exports.change = change;
	exports.changeWithKey = changeWithKey;
	exports.destroy = destroy;
	exports.focus = focus;
	exports.reducer = reducer;
	exports.reduxForm = reduxForm;
	exports.getValues = getValues;
	exports.initialize = initialize;
	exports.initializeWithKey = initializeWithKey;
	exports.propTypes = propTypes;
	exports.reset = reset;
	exports.startAsyncValidation = startAsyncValidation;
	exports.startSubmit = startSubmit;
	exports.stopAsyncValidation = stopAsyncValidation;
	exports.stopSubmit = stopSubmit;
	exports.touch = touch;
	exports.touchWithKey = touchWithKey;
	exports.untouch = untouch;
	exports.untouchWithKey = untouchWithKey;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = createAll;

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _reducer = __webpack_require__(244);

	var _reducer2 = _interopRequireDefault(_reducer);

	var _createReduxForm = __webpack_require__(253);

	var _createReduxForm2 = _interopRequireDefault(_createReduxForm);

	var _mapValues = __webpack_require__(246);

	var _mapValues2 = _interopRequireDefault(_mapValues);

	var _bindActionData = __webpack_require__(260);

	var _bindActionData2 = _interopRequireDefault(_bindActionData);

	var _actions = __webpack_require__(259);

	var actions = _interopRequireWildcard(_actions);

	var _actionTypes = __webpack_require__(245);

	var actionTypes = _interopRequireWildcard(_actionTypes);

	var _createPropTypes = __webpack_require__(283);

	var _createPropTypes2 = _interopRequireDefault(_createPropTypes);

	var _getValuesFromState = __webpack_require__(249);

	var _getValuesFromState2 = _interopRequireDefault(_getValuesFromState);

	// bind form as first parameter of action creators
	var boundActions = _extends({}, _mapValues2['default'](_extends({}, actions, {
	  changeWithKey: function changeWithKey(key) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    return _bindActionData2['default'](actions.change, { key: key }).apply(undefined, args);
	  },
	  initializeWithKey: function initializeWithKey(key) {
	    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	      args[_key2 - 1] = arguments[_key2];
	    }

	    return _bindActionData2['default'](actions.initialize, { key: key }).apply(undefined, args);
	  },
	  reset: function reset(key) {
	    return _bindActionData2['default'](actions.reset, { key: key })();
	  },
	  touchWithKey: function touchWithKey(key) {
	    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	      args[_key3 - 1] = arguments[_key3];
	    }

	    return _bindActionData2['default'](actions.touch, { key: key }).apply(undefined, args);
	  },
	  untouchWithKey: function untouchWithKey(key) {
	    for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	      args[_key4 - 1] = arguments[_key4];
	    }

	    return _bindActionData2['default'](actions.untouch, { key: key }).apply(undefined, args);
	  },
	  destroy: function destroy(key) {
	    return _bindActionData2['default'](actions.destroy, { key: key })();
	  }
	}), function (action) {
	  return function (form) {
	    for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	      args[_key5 - 1] = arguments[_key5];
	    }

	    return _bindActionData2['default'](action, { form: form }).apply(undefined, args);
	  };
	}));

	var blur = boundActions.blur;
	var change = boundActions.change;
	var changeWithKey = boundActions.changeWithKey;
	var destroy = boundActions.destroy;
	var focus = boundActions.focus;
	var initialize = boundActions.initialize;
	var initializeWithKey = boundActions.initializeWithKey;
	var reset = boundActions.reset;
	var startAsyncValidation = boundActions.startAsyncValidation;
	var startSubmit = boundActions.startSubmit;
	var stopAsyncValidation = boundActions.stopAsyncValidation;
	var stopSubmit = boundActions.stopSubmit;
	var submitFailed = boundActions.submitFailed;
	var touch = boundActions.touch;
	var touchWithKey = boundActions.touchWithKey;
	var untouch = boundActions.untouch;
	var untouchWithKey = boundActions.untouchWithKey;

	function createAll(isReactNative, React, connect) {
	  return {
	    actionTypes: actionTypes,
	    blur: blur,
	    change: change,
	    changeWithKey: changeWithKey,
	    destroy: destroy,
	    focus: focus,
	    getValues: _getValuesFromState2['default'],
	    initialize: initialize,
	    initializeWithKey: initializeWithKey,
	    propTypes: _createPropTypes2['default'](React),
	    reduxForm: _createReduxForm2['default'](isReactNative, React, connect),
	    reducer: _reducer2['default'],
	    reset: reset,
	    startAsyncValidation: startAsyncValidation,
	    startSubmit: startSubmit,
	    stopAsyncValidation: stopAsyncValidation,
	    stopSubmit: stopSubmit,
	    submitFailed: submitFailed,
	    touch: touch,
	    touchWithKey: touchWithKey,
	    untouch: untouch,
	    untouchWithKey: untouchWithKey
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _initialState, _behaviors;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _actionTypes = __webpack_require__(245);

	var _mapValues = __webpack_require__(246);

	var _mapValues2 = _interopRequireDefault(_mapValues);

	var _read = __webpack_require__(247);

	var _read2 = _interopRequireDefault(_read);

	var _write = __webpack_require__(248);

	var _write2 = _interopRequireDefault(_write);

	var _getValuesFromState = __webpack_require__(249);

	var _getValuesFromState2 = _interopRequireDefault(_getValuesFromState);

	var _initializeState = __webpack_require__(250);

	var _initializeState2 = _interopRequireDefault(_initializeState);

	var _resetState = __webpack_require__(251);

	var _resetState2 = _interopRequireDefault(_resetState);

	var _setErrors = __webpack_require__(252);

	var _setErrors2 = _interopRequireDefault(_setErrors);

	var globalErrorKey = '_error';

	exports.globalErrorKey = globalErrorKey;
	var initialState = (_initialState = {
	  _active: undefined,
	  _asyncValidating: false
	}, _initialState[globalErrorKey] = undefined, _initialState._submitting = false, _initialState._submitFailed = false, _initialState);

	exports.initialState = initialState;
	var behaviors = (_behaviors = {}, _behaviors[_actionTypes.ADD_ARRAY_VALUE] = function (state, _ref) {
	  var path = _ref.path;
	  var index = _ref.index;
	  var value = _ref.value;

	  var array = _read2['default'](path, state);
	  var stateCopy = _extends({}, state);
	  var arrayCopy = array ? [].concat(array) : [];
	  var newValue = { value: value };
	  if (index === undefined) {
	    arrayCopy.push(newValue);
	  } else {
	    arrayCopy.splice(index, 0, newValue);
	  }
	  return _write2['default'](path, arrayCopy, stateCopy);
	}, _behaviors[_actionTypes.BLUR] = function (state, _ref2) {
	  var field = _ref2.field;
	  var value = _ref2.value;
	  var touch = _ref2.touch;

	  // remove _active from state
	  var _active = state._active;

	  var stateCopy = _objectWithoutProperties(state, ['_active']);

	  // eslint-disable-line prefer-const
	  return _write2['default'](field, function (previous) {
	    var result = _extends({}, previous);
	    if (value !== undefined) {
	      result.value = value;
	    }
	    if (touch) {
	      result.touched = true;
	    }
	    return result;
	  }, stateCopy);
	}, _behaviors[_actionTypes.CHANGE] = function (state, _ref3) {
	  var field = _ref3.field;
	  var value = _ref3.value;
	  var touch = _ref3.touch;

	  return _write2['default'](field, function (previous) {
	    var _extends13 = _extends({}, previous, { value: value });

	    var asyncError = _extends13.asyncError;
	    var submitError = _extends13.submitError;

	    var result = _objectWithoutProperties(_extends13, ['asyncError', 'submitError']);

	    if (touch) {
	      result.touched = true;
	    }
	    return result;
	  }, state);
	}, _behaviors[_actionTypes.DESTROY] = function () {
	  return undefined;
	}, _behaviors[_actionTypes.FOCUS] = function (state, _ref4) {
	  var field = _ref4.field;

	  var stateCopy = _write2['default'](field + '.visited', true, state);
	  stateCopy._active = field;
	  return stateCopy;
	}, _behaviors[_actionTypes.INITIALIZE] = function (state, _ref5) {
	  var _extends2;

	  var data = _ref5.data;
	  var fields = _ref5.fields;

	  return _extends({}, _initializeState2['default'](data, fields, state), (_extends2 = {
	    _asyncValidating: false,
	    _active: undefined
	  }, _extends2[globalErrorKey] = undefined, _extends2._submitting = false, _extends2._submitFailed = false, _extends2));
	}, _behaviors[_actionTypes.REMOVE_ARRAY_VALUE] = function (state, _ref6) {
	  var path = _ref6.path;
	  var index = _ref6.index;

	  var array = _read2['default'](path, state);
	  var stateCopy = _extends({}, state);
	  var arrayCopy = array ? [].concat(array) : [];
	  if (index === undefined) {
	    arrayCopy.pop();
	  } else if (isNaN(index)) {
	    delete arrayCopy[index];
	  } else {
	    arrayCopy.splice(index, 1);
	  }
	  return _write2['default'](path, arrayCopy, stateCopy);
	}, _behaviors[_actionTypes.RESET] = function (state) {
	  var _extends3;

	  return _extends({}, _resetState2['default'](state), (_extends3 = {
	    _active: undefined,
	    _asyncValidating: false
	  }, _extends3[globalErrorKey] = undefined, _extends3._submitting = false, _extends3._submitFailed = false, _extends3));
	}, _behaviors[_actionTypes.START_ASYNC_VALIDATION] = function (state) {
	  return _extends({}, state, {
	    _asyncValidating: true
	  });
	}, _behaviors[_actionTypes.START_SUBMIT] = function (state) {
	  return _extends({}, state, {
	    _submitting: true
	  });
	}, _behaviors[_actionTypes.STOP_ASYNC_VALIDATION] = function (state, _ref7) {
	  var _extends4;

	  var errors = _ref7.errors;

	  return _extends({}, _setErrors2['default'](state, errors, 'asyncError'), (_extends4 = {
	    _asyncValidating: false
	  }, _extends4[globalErrorKey] = errors && errors[globalErrorKey], _extends4));
	}, _behaviors[_actionTypes.STOP_SUBMIT] = function (state, _ref8) {
	  var _extends5;

	  var errors = _ref8.errors;

	  return _extends({}, _setErrors2['default'](state, errors, 'submitError'), (_extends5 = {}, _extends5[globalErrorKey] = errors && errors[globalErrorKey], _extends5._submitting = false, _extends5._submitFailed = !!(errors && Object.keys(errors).length), _extends5));
	}, _behaviors[_actionTypes.SUBMIT_FAILED] = function (state) {
	  return _extends({}, state, {
	    _submitFailed: true
	  });
	}, _behaviors[_actionTypes.TOUCH] = function (state, _ref9) {
	  var fields = _ref9.fields;

	  return _extends({}, state, fields.reduce(function (accumulator, field) {
	    return _write2['default'](field, function (value) {
	      return _extends({}, value, { touched: true });
	    }, accumulator);
	  }, state));
	}, _behaviors[_actionTypes.UNTOUCH] = function (state, _ref10) {
	  var fields = _ref10.fields;

	  return _extends({}, state, fields.reduce(function (accumulator, field) {
	    return _write2['default'](field, function (value) {
	      if (value) {
	        var touched = value.touched;

	        var rest = _objectWithoutProperties(value, ['touched']);

	        return rest;
	      }
	      return value;
	    }, accumulator);
	  }, state));
	}, _behaviors);

	var reducer = function reducer() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  var behavior = behaviors[action.type];
	  return behavior ? behavior(state, action) : state;
	};

	function formReducer() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  var _extends11;

	  var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var form = action.form;
	  var key = action.key;

	  var rest = _objectWithoutProperties(action, ['form', 'key']);

	  // eslint-disable-line no-redeclare
	  if (!form) {
	    return state;
	  }
	  if (key) {
	    var _extends8, _extends9;

	    if (action.type === _actionTypes.DESTROY) {
	      var _extends7;

	      return _extends({}, state, (_extends7 = {}, _extends7[form] = state[form] && Object.keys(state[form]).reduce(function (accumulator, stateKey) {
	        var _extends6;

	        return stateKey === key ? accumulator : _extends({}, accumulator, (_extends6 = {}, _extends6[stateKey] = state[form][stateKey], _extends6));
	      }, {}), _extends7));
	    }
	    return _extends({}, state, (_extends9 = {}, _extends9[form] = _extends({}, state[form], (_extends8 = {}, _extends8[key] = reducer((state[form] || {})[key], rest), _extends8)), _extends9));
	  }
	  if (action.type === _actionTypes.DESTROY) {
	    return Object.keys(state).reduce(function (accumulator, formName) {
	      var _extends10;

	      return formName === form ? accumulator : _extends({}, accumulator, (_extends10 = {}, _extends10[formName] = state[formName], _extends10));
	    }, {});
	  }
	  return _extends({}, state, (_extends11 = {}, _extends11[form] = reducer(state[form], rest), _extends11));
	}

	/**
	 * Adds additional functionality to the reducer
	 */
	function decorate(target) {
	  target.plugin = function plugin(reducers) {
	    var _this = this;

	    // use 'function' keyword to enable 'this'
	    return decorate(function () {
	      var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	      var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var result = _this(state, action);
	      return _extends({}, result, _mapValues2['default'](reducers, function (pluginReducer, key) {
	        return pluginReducer(result[key] || initialState, action);
	      }));
	    });
	  };

	  target.normalize = function normalize(normalizers) {
	    var _this2 = this;

	    // use 'function' keyword to enable 'this'
	    return decorate(function () {
	      var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	      var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var result = _this2(state, action);
	      return _extends({}, result, _mapValues2['default'](normalizers, function (formNormalizers, form) {
	        var runNormalize = function runNormalize(previous, currentResult) {
	          var previousValues = _getValuesFromState2['default'](_extends({}, initialState, previous));
	          var formResult = _extends({}, initialState, currentResult);
	          return _extends({}, formResult, _mapValues2['default'](formNormalizers, function (fieldNormalizer, field) {
	            return _extends({}, formResult[field], {
	              value: fieldNormalizer(formResult[field] ? formResult[field].value : undefined, // value
	              previous && previous[field] ? previous[field].value : undefined, // previous value
	              _getValuesFromState2['default'](formResult), // all field values
	              previousValues) // all previous field values
	            });
	          }));
	        };
	        if (action.key) {
	          var _extends12;

	          return _extends({}, result[form], (_extends12 = {}, _extends12[action.key] = runNormalize(state[form][action.key], result[form][action.key]), _extends12));
	        }
	        return runNormalize(state[form], result[form]);
	      }));
	    });
	  };

	  return target;
	}

	exports['default'] = decorate(formReducer);

/***/ },
/* 245 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var ADD_ARRAY_VALUE = 'redux-form/ADD_ARRAY_VALUE';
	exports.ADD_ARRAY_VALUE = ADD_ARRAY_VALUE;
	var BLUR = 'redux-form/BLUR';
	exports.BLUR = BLUR;
	var CHANGE = 'redux-form/CHANGE';
	exports.CHANGE = CHANGE;
	var DESTROY = 'redux-form/DESTROY';
	exports.DESTROY = DESTROY;
	var FOCUS = 'redux-form/FOCUS';
	exports.FOCUS = FOCUS;
	var INITIALIZE = 'redux-form/INITIALIZE';
	exports.INITIALIZE = INITIALIZE;
	var REMOVE_ARRAY_VALUE = 'redux-form/REMOVE_ARRAY_VALUE';
	exports.REMOVE_ARRAY_VALUE = REMOVE_ARRAY_VALUE;
	var RESET = 'redux-form/RESET';
	exports.RESET = RESET;
	var START_ASYNC_VALIDATION = 'redux-form/START_ASYNC_VALIDATION';
	exports.START_ASYNC_VALIDATION = START_ASYNC_VALIDATION;
	var START_SUBMIT = 'redux-form/START_SUBMIT';
	exports.START_SUBMIT = START_SUBMIT;
	var STOP_ASYNC_VALIDATION = 'redux-form/STOP_ASYNC_VALIDATION';
	exports.STOP_ASYNC_VALIDATION = STOP_ASYNC_VALIDATION;
	var STOP_SUBMIT = 'redux-form/STOP_SUBMIT';
	exports.STOP_SUBMIT = STOP_SUBMIT;
	var SUBMIT_FAILED = 'redux-form/SUBMIT_FAILED';
	exports.SUBMIT_FAILED = SUBMIT_FAILED;
	var TOUCH = 'redux-form/TOUCH';
	exports.TOUCH = TOUCH;
	var UNTOUCH = 'redux-form/UNTOUCH';
	exports.UNTOUCH = UNTOUCH;

/***/ },
/* 246 */
/***/ function(module, exports) {

	/**
	 * Maps all the values in the given object through the given function and saves them, by key, to a result object
	 */
	"use strict";

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports["default"] = mapValues;

	function mapValues(obj, fn) {
	  return obj ? Object.keys(obj).reduce(function (accumulator, key) {
	    var _extends2;

	    return _extends({}, accumulator, (_extends2 = {}, _extends2[key] = fn(obj[key], key), _extends2));
	  }, {}) : obj;
	}

	module.exports = exports["default"];

/***/ },
/* 247 */
/***/ function(module, exports) {

	/**
	 * Reads any potentially deep value from an object using dot and array syntax
	 */
	'use strict';

	exports.__esModule = true;
	var read = function read(_x, _x2) {
	  var _again = true;

	  _function: while (_again) {
	    var path = _x,
	        object = _x2;
	    _again = false;

	    if (!path || !object) {
	      return object;
	    }
	    var dotIndex = path.indexOf('.');
	    if (dotIndex === 0) {
	      _x = path.substring(1);
	      _x2 = object;
	      _again = true;
	      dotIndex = undefined;
	      continue _function;
	    }
	    var openIndex = path.indexOf('[');
	    var closeIndex = path.indexOf(']');
	    if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {
	      // iterate down object tree
	      _x = path.substring(dotIndex + 1);
	      _x2 = object[path.substring(0, dotIndex)];
	      _again = true;
	      dotIndex = openIndex = closeIndex = undefined;
	      continue _function;
	    }
	    if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	      if (closeIndex < 0) {
	        throw new Error('found [ but no ]');
	      }
	      var key = path.substring(0, openIndex);
	      var index = path.substring(openIndex + 1, closeIndex);
	      if (!index.length) {
	        return object[key];
	      }
	      if (openIndex === 0) {
	        _x = path.substring(closeIndex + 1);
	        _x2 = object[index];
	        _again = true;
	        dotIndex = openIndex = closeIndex = key = index = undefined;
	        continue _function;
	      }
	      if (!object[key]) {
	        return undefined;
	      }
	      _x = path.substring(closeIndex + 1);
	      _x2 = object[key][index];
	      _again = true;
	      dotIndex = openIndex = closeIndex = key = index = undefined;
	      continue _function;
	    }
	    return object[path];
	  }
	};

	exports['default'] = read;
	module.exports = exports['default'];

/***/ },
/* 248 */
/***/ function(module, exports) {

	/**
	 * Writes any potentially deep value from an object using dot and array syntax,
	 * and returns a new copy of the object.
	 */
	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var write = function write(_x, _x2, _x3) {
	  var _again = true;

	  _function: while (_again) {
	    var path = _x,
	        value = _x2,
	        object = _x3;

	    var _extends7;

	    _again = false;

	    var dotIndex = path.indexOf('.');
	    if (dotIndex === 0) {
	      _x = path.substring(1);
	      _x2 = value;
	      _x3 = object;
	      _again = true;
	      _extends7 = dotIndex = undefined;
	      continue _function;
	    }
	    var openIndex = path.indexOf('[');
	    var closeIndex = path.indexOf(']');
	    if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {
	      var _extends2;

	      // is dot notation
	      var key = path.substring(0, dotIndex);
	      return _extends({}, object, (_extends2 = {}, _extends2[key] = write(path.substring(dotIndex + 1), value, object[key] || {}), _extends2));
	    }
	    if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	      var _extends6;

	      var _extends4;

	      var _extends3;

	      var _extends5;

	      var _ret = (function () {
	        // is array notation
	        if (closeIndex < 0) {
	          throw new Error('found [ but no ]');
	        }
	        var key = path.substring(0, openIndex);
	        var index = path.substring(openIndex + 1, closeIndex);
	        var array = object[key] || [];
	        var rest = path.substring(closeIndex + 1);
	        if (index) {
	          // indexed array
	          if (rest.length) {
	            // need to keep recursing
	            var dest = array[index] || {};
	            var arrayCopy = [].concat(array);
	            arrayCopy[index] = write(rest, value, dest);
	            return {
	              v: _extends({}, object || {}, (_extends3 = {}, _extends3[key] = arrayCopy, _extends3))
	            };
	          }
	          var copy = [].concat(array);
	          copy[index] = typeof value === 'function' ? value(copy[index]) : value;
	          return {
	            v: _extends({}, object || {}, (_extends4 = {}, _extends4[key] = copy, _extends4))
	          };
	        }
	        // indexless array
	        if (rest.length) {
	          // need to keep recursing
	          if ((!array || !array.length) && typeof value === 'function') {
	            return {
	              v: object
	            }; // don't even set a value under [key]
	          }
	          var arrayCopy = array.map(function (dest) {
	            return write(rest, value, dest);
	          });
	          return {
	            v: _extends({}, object || {}, (_extends5 = {}, _extends5[key] = arrayCopy, _extends5))
	          };
	        }
	        var result = undefined;
	        if (Array.isArray(value)) {
	          result = value;
	        } else if (object[key]) {
	          result = array.map(function (dest) {
	            return typeof value === 'function' ? value(dest) : value;
	          });
	        } else if (typeof value === 'function') {
	          return {
	            v: object
	          }; // don't even set a value under [key]
	        } else {
	            result = value;
	          }
	        return {
	          v: _extends({}, object || {}, (_extends6 = {}, _extends6[key] = result, _extends6))
	        };
	      })();

	      if (typeof _ret === 'object') return _ret.v;
	    }
	    return _extends({}, object, (_extends7 = {}, _extends7[path] = typeof value === 'function' ? value(object[path]) : value, _extends7));
	  }
	};

	exports['default'] = write;
	module.exports = exports['default'];

/***/ },
/* 249 */
/***/ function(module, exports) {

	/**
	 * A different version of getValues() that does not need the fields array
	 */
	'use strict';

	exports.__esModule = true;
	var getValuesFromState = function getValuesFromState(state) {
	  if (!state) {
	    return state;
	  }
	  var keys = Object.keys(state);
	  if (!keys.length) {
	    return undefined;
	  }
	  return keys.reduce(function (accumulator, key) {
	    var field = state[key];
	    if (field) {
	      if (field.hasOwnProperty && field.hasOwnProperty('value')) {
	        if (field.value !== undefined) {
	          accumulator[key] = field.value;
	        }
	      } else if (Array.isArray(field)) {
	        accumulator[key] = field.map(function (arrayField) {
	          return arrayField.value || getValuesFromState(arrayField);
	        });
	      } else if (typeof field !== 'string') {
	        accumulator[key] = getValuesFromState(field);
	      }
	    }
	    return accumulator;
	  }, {});
	};

	exports['default'] = getValuesFromState;
	module.exports = exports['default'];

/***/ },
/* 250 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var updateEntry = function updateEntry(entry, value) {
	  if (entry && entry.value !== undefined) {
	    return { initial: value, value: entry.value };
	  }
	  return value === undefined ? {} : { initial: value, value: value };
	};

	/**
	 * Sets the initial values into the state and returns a new copy of the state
	 */
	var initializeState = function initializeState(values, fields) {
	  var state = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  if (!fields) {
	    throw new Error('fields must be passed when initializing state');
	  }
	  if (!values || !fields.length) {
	    return state;
	  }
	  var initializeField = function initializeField(_x2, _x3, _x4) {
	    var _again = true;

	    _function: while (_again) {
	      var path = _x2,
	          src = _x3,
	          dest = _x4;
	      _again = false;

	      var dotIndex = path.indexOf('.');
	      if (dotIndex === 0) {
	        _x2 = path.substring(1);
	        _x3 = src;
	        _x4 = dest;
	        _again = true;
	        dotIndex = undefined;
	        continue _function;
	      }
	      var openIndex = path.indexOf('[');
	      var closeIndex = path.indexOf(']');
	      var result = dest || {};
	      if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {
	        // is dot notation
	        var key = path.substring(0, dotIndex);
	        result[key] = src[key] && initializeField(path.substring(dotIndex + 1), src[key], result[key] || {});
	      } else if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	        (function () {
	          // is array notation
	          if (closeIndex < 0) {
	            throw new Error('found \'[\' but no \']\': \'' + path + '\'');
	          }
	          var key = path.substring(0, openIndex);
	          var srcArray = src[key];
	          var destArray = result[key];
	          var rest = path.substring(closeIndex + 1);
	          if (Array.isArray(srcArray)) {
	            if (rest.length) {
	              // need to keep recursing
	              result[key] = srcArray.map(function (srcValue, srcIndex) {
	                return initializeField(rest, srcValue, destArray && destArray[srcIndex]);
	              });
	            } else {
	              result[key] = srcArray.map(function (srcValue, srcIndex) {
	                return updateEntry(destArray && destArray[srcIndex], srcValue);
	              });
	            }
	          } else {
	            result[key] = updateEntry(destArray, srcArray);
	          }
	        })();
	      } else {
	        result[path] = updateEntry(result[path], src && src[path]);
	      }
	      return result;
	    }
	  };
	  return fields.reduce(function (accumulator, field) {
	    return initializeField(field, values, accumulator);
	  }, _extends({}, state));
	};

	exports['default'] = initializeState;
	module.exports = exports['default'];

/***/ },
/* 251 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var reset = function reset(value) {
	  return value === undefined || value && value.initial === undefined ? {} : { initial: value.initial, value: value.initial };
	};
	var isLeaf = function isLeaf(value) {
	  return value && typeof value === 'object' && (value.value !== undefined || value.initial !== undefined);
	};

	/**
	 * Sets the initial values into the state and returns a new copy of the state
	 */
	var resetState = function resetState(values) {
	  return values ? Object.keys(values).reduce(function (accumulator, key) {
	    var value = values[key];
	    if (Array.isArray(value)) {
	      accumulator[key] = value.map(function (item) {
	        return isLeaf(item) ? reset(item) : resetState(item);
	      });
	    } else if (value) {
	      if (isLeaf(value)) {
	        accumulator[key] = reset(value);
	      } else if (typeof value === 'object' && value !== null) {
	        accumulator[key] = resetState(value);
	      } else {
	        accumulator[key] = value;
	      }
	    }
	    return accumulator;
	  }, {}) : values;
	};

	exports['default'] = resetState;
	module.exports = exports['default'];

/***/ },
/* 252 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var isMetaKey = function isMetaKey(key) {
	  return key[0] === '_';
	};

	/**
	 * Sets an error on a field deep in the tree, returning a new copy of the state
	 */
	var setErrors = function setErrors(_x, _x2, _x3) {
	  var _again = true;

	  _function: while (_again) {
	    var state = _x,
	        errors = _x2,
	        destKey = _x3;
	    _again = false;

	    var clear = function clear() {
	      if (Array.isArray(state)) {
	        return state.map(function (stateItem, index) {
	          return setErrors(stateItem, errors && errors[index], destKey);
	        });
	      }
	      if (typeof state === 'object') {
	        return Object.keys(state).reduce(function (accumulator, key) {
	          var _extends2;

	          return isMetaKey(key) ? accumulator : _extends({}, accumulator, (_extends2 = {}, _extends2[key] = setErrors(state[key], errors && errors[key], destKey), _extends2));
	        }, state);
	      }
	      return state;
	    };
	    if (!errors) {
	      if (state[destKey]) {
	        var copy = _extends({}, state);
	        delete copy[destKey];
	        return copy;
	      }
	      return clear();
	    }
	    if (typeof errors === 'string') {
	      var _extends3;

	      return _extends({}, state, (_extends3 = {}, _extends3[destKey] = errors, _extends3));
	    }
	    // must be actual error
	    if (Array.isArray(errors)) {
	      if (!state || Array.isArray(state)) {
	        var _ret = (function () {
	          var copy = (state || []).map(function (stateItem, index) {
	            return setErrors(stateItem, errors[index], destKey);
	          });
	          errors.forEach(function (errorItem, index) {
	            return copy[index] = setErrors(copy[index], errorItem, destKey);
	          });
	          return {
	            v: copy
	          };
	        })();

	        if (typeof _ret === 'object') return _ret.v;
	      }
	      _x = state;
	      _x2 = errors[0];
	      _x3 = destKey;
	      _again = true;
	      clear = copy = _extends3 = _ret = undefined;
	      continue _function;
	    }
	    return Object.keys(errors).reduce(function (accumulator, key) {
	      var _extends4;

	      return isMetaKey(key) ? accumulator : _extends({}, accumulator, (_extends4 = {}, _extends4[key] = setErrors(state && state[key], errors[key], destKey), _extends4));
	    }, clear() || {});
	  }
	};

	exports['default'] = setErrors;
	module.exports = exports['default'];

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _createReduxFormConnector = __webpack_require__(254);

	var _createReduxFormConnector2 = _interopRequireDefault(_createReduxFormConnector);

	var _hoistNonReactStatics = __webpack_require__(232);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	/**
	 * The decorator that is the main API to redux-form
	 */
	var createReduxForm = function createReduxForm(isReactNative, React, connect) {
	  var Component = React.Component;

	  var reduxFormConnector = _createReduxFormConnector2['default'](isReactNative, React, connect);
	  return function (config, mapStateToProps, mapDispatchToProps) {
	    return function (WrappedComponent) {
	      var ReduxFormConnector = reduxFormConnector(WrappedComponent, mapStateToProps, mapDispatchToProps);
	      var configWithDefaults = _extends({
	        touchOnBlur: true,
	        touchOnChange: false,
	        destroyOnUnmount: true
	      }, config);

	      var ConnectedForm = (function (_Component) {
	        _inherits(ConnectedForm, _Component);

	        function ConnectedForm() {
	          _classCallCheck(this, ConnectedForm);

	          _Component.apply(this, arguments);
	        }

	        ConnectedForm.prototype.render = function render() {
	          return React.createElement(ReduxFormConnector, _extends({}, configWithDefaults, this.props));
	        };

	        return ConnectedForm;
	      })(Component);

	      return _hoistNonReactStatics2['default'](ConnectedForm, WrappedComponent);
	    };
	  };
	};

	exports['default'] = createReduxForm;
	module.exports = exports['default'];

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _reactLazyCache = __webpack_require__(255);

	var _reactLazyCache2 = _interopRequireDefault(_reactLazyCache);

	var _getDisplayName = __webpack_require__(257);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	var _createHigherOrderComponent = __webpack_require__(258);

	var _createHigherOrderComponent2 = _interopRequireDefault(_createHigherOrderComponent);

	/**
	 * This component tracks props that affect how the form is mounted to the store. Normally these should not change,
	 * but if they do, the connected components below it need to be redefined.
	 */
	var createReduxFormConnector = function createReduxFormConnector(isReactNative, React, connect) {
	  return function (WrappedComponent, mapStateToProps, mapDispatchToProps) {
	    var Component = React.Component;
	    var PropTypes = React.PropTypes;

	    var ReduxFormConnector = (function (_Component) {
	      _inherits(ReduxFormConnector, _Component);

	      function ReduxFormConnector(props) {
	        _classCallCheck(this, ReduxFormConnector);

	        _Component.call(this, props);
	        this.cache = _reactLazyCache2['default'](this, {
	          ReduxForm: {
	            params: [
	            // props that effect how redux-form connects to the redux store
	            'reduxMountPoint', 'form', 'formKey', 'getFormState'],
	            fn: _createHigherOrderComponent2['default'](props, isReactNative, React, connect, WrappedComponent, mapStateToProps, mapDispatchToProps)
	          }
	        });
	      }

	      ReduxFormConnector.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.cache.componentWillReceiveProps(nextProps);
	      };

	      ReduxFormConnector.prototype.render = function render() {
	        var ReduxForm = this.cache.ReduxForm;

	        // remove some redux-form config-only props
	        var _props = this.props;
	        var reduxMountPoint = _props.reduxMountPoint;
	        var destroyOnUnmount = _props.destroyOnUnmount;
	        var form = _props.form;
	        var getFormState = _props.getFormState;
	        var touchOnBlur = _props.touchOnBlur;
	        var touchOnChange = _props.touchOnChange;

	        var passableProps = _objectWithoutProperties(_props, ['reduxMountPoint', 'destroyOnUnmount', 'form', 'getFormState', 'touchOnBlur', 'touchOnChange']);

	        // eslint-disable-line no-redeclare
	        return React.createElement(ReduxForm, passableProps);
	      };

	      return ReduxFormConnector;
	    })(Component);

	    ReduxFormConnector.displayName = 'ReduxFormConnector(' + _getDisplayName2['default'](WrappedComponent) + ')';
	    ReduxFormConnector.WrappedComponent = WrappedComponent;
	    ReduxFormConnector.propTypes = {
	      destroyOnUnmount: PropTypes.bool,
	      reduxMountPoint: PropTypes.string,
	      form: PropTypes.string.isRequired,
	      formKey: PropTypes.string,
	      getFormState: PropTypes.func,
	      touchOnBlur: PropTypes.bool,
	      touchOnChange: PropTypes.bool
	    };
	    ReduxFormConnector.defaultProps = {
	      reduxMountPoint: 'form',
	      getFormState: function getFormState(state, reduxMountPoint) {
	        return state[reduxMountPoint];
	      }
	    };
	    return ReduxFormConnector;
	  };
	};

	exports['default'] = createReduxFormConnector;
	module.exports = exports['default'];

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _lazyCache = __webpack_require__(256);

	var _lazyCache2 = _interopRequireDefault(_lazyCache);

	exports['default'] = _lazyCache2['default'];
	module.exports = exports['default'];

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = lazyCache;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _deepEqual = __webpack_require__(173);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	function lazyCache(component, calculators) {
	  var allProps = [];
	  var cache = {};
	  var api = {};
	  var uncache = function uncache(changedProp) {
	    Object.keys(cache).forEach(function (key) {
	      if (~cache[key].props.indexOf(changedProp)) {
	        delete cache[key].value;
	        uncache(key);
	      }
	    });
	  };

	  Object.keys(calculators).forEach(function (key) {
	    var fn = calculators[key].fn;
	    var props = calculators[key].params;
	    props.forEach(function (param) {
	      if (! ~allProps.indexOf(param)) {
	        allProps.push(param);
	      }
	    });
	    cache[key] = { props: props };
	    Object.defineProperty(api, key, {
	      get: function get() {
	        var cached = cache[key];
	        if (cached && cached.value !== undefined) {
	          return cached.value;
	        }
	        var params = props.map(function (prop) {
	          return component.props[prop] || api[prop];
	        });
	        var value = fn.apply(undefined, params);
	        cache[key] = { props: props, value: value };
	        return value;
	      }
	    });
	  });
	  api.componentWillReceiveProps = function (nextProps) {
	    var diffProps = [];
	    allProps.forEach(function (prop) {
	      if (!_deepEqual2['default'](component.props[prop], nextProps[prop])) {
	        diffProps.push(prop);
	      }
	    });
	    diffProps.forEach(uncache);
	  };
	  return api;
	}

	module.exports = exports['default'];

/***/ },
/* 257 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = getDisplayName;

	function getDisplayName(Comp) {
	  return Comp.displayName || Comp.name || 'Component';
	}

	module.exports = exports['default'];

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _actions = __webpack_require__(259);

	var importedActions = _interopRequireWildcard(_actions);

	var _getDisplayName = __webpack_require__(257);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	var _reducer = __webpack_require__(244);

	var _deepEqual = __webpack_require__(173);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _bindActionData = __webpack_require__(260);

	var _bindActionData2 = _interopRequireDefault(_bindActionData);

	var _getValues = __webpack_require__(261);

	var _getValues2 = _interopRequireDefault(_getValues);

	var _isValid = __webpack_require__(262);

	var _isValid2 = _interopRequireDefault(_isValid);

	var _readFields = __webpack_require__(263);

	var _readFields2 = _interopRequireDefault(_readFields);

	var _handleSubmit2 = __webpack_require__(277);

	var _handleSubmit3 = _interopRequireDefault(_handleSubmit2);

	var _asyncValidation = __webpack_require__(278);

	var _asyncValidation2 = _interopRequireDefault(_asyncValidation);

	var _eventsSilenceEvents = __webpack_require__(279);

	var _eventsSilenceEvents2 = _interopRequireDefault(_eventsSilenceEvents);

	var _eventsSilenceEvent = __webpack_require__(280);

	var _eventsSilenceEvent2 = _interopRequireDefault(_eventsSilenceEvent);

	var _wrapMapDispatchToProps = __webpack_require__(281);

	var _wrapMapDispatchToProps2 = _interopRequireDefault(_wrapMapDispatchToProps);

	var _wrapMapStateToProps = __webpack_require__(282);

	var _wrapMapStateToProps2 = _interopRequireDefault(_wrapMapStateToProps);

	/**
	 * Creates a HOC that knows how to create redux-connected sub-components.
	 */
	var createHigherOrderComponent = function createHigherOrderComponent(config, isReactNative, React, connect, WrappedComponent, mapStateToProps, mapDispatchToProps) {
	  var Component = React.Component;
	  var PropTypes = React.PropTypes;

	  return function (reduxMountPoint, formName, formKey, getFormState) {
	    var ReduxForm = (function (_Component) {
	      _inherits(ReduxForm, _Component);

	      function ReduxForm(props) {
	        _classCallCheck(this, ReduxForm);

	        _Component.call(this, props);
	        // bind functions
	        this.asyncValidate = this.asyncValidate.bind(this);
	        this.handleSubmit = this.handleSubmit.bind(this);
	        this.fields = _readFields2['default'](props, {}, {}, this.asyncValidate, isReactNative);
	      }

	      ReduxForm.prototype.componentWillMount = function componentWillMount() {
	        var _props = this.props;
	        var fields = _props.fields;
	        var initialize = _props.initialize;
	        var initialValues = _props.initialValues;

	        if (initialValues) {
	          initialize(initialValues, fields);
	        }
	      };

	      ReduxForm.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!_deepEqual2['default'](this.props.fields, nextProps.fields) || !_deepEqual2['default'](this.props.form, nextProps.form)) {
	          this.fields = _readFields2['default'](nextProps, this.props, this.fields, this.asyncValidate, isReactNative);
	        }
	        if (!_deepEqual2['default'](this.props.initialValues, nextProps.initialValues)) {
	          this.props.initialize(nextProps.initialValues, nextProps.fields);
	        }
	      };

	      ReduxForm.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (config.destroyOnUnmount) {
	          this.props.destroy();
	        }
	      };

	      ReduxForm.prototype.asyncValidate = function asyncValidate(name, value) {
	        var _this = this;

	        var _props2 = this.props;
	        var asyncValidate = _props2.asyncValidate;
	        var dispatch = _props2.dispatch;
	        var fields = _props2.fields;
	        var form = _props2.form;
	        var startAsyncValidation = _props2.startAsyncValidation;
	        var stopAsyncValidation = _props2.stopAsyncValidation;
	        var validate = _props2.validate;

	        if (asyncValidate) {
	          var _ret = (function () {
	            var values = _getValues2['default'](fields, form);
	            if (name) {
	              values[name] = value;
	            }
	            var syncErrors = validate(values, _this.props);

	            // if blur validating, only run async validate if sync validation passes
	            if (!name || _isValid2['default'](syncErrors[name])) {
	              return {
	                v: _asyncValidation2['default'](function () {
	                  return asyncValidate(values, dispatch, _this.props);
	                }, startAsyncValidation, stopAsyncValidation)
	              };
	            }
	          })();

	          if (typeof _ret === 'object') return _ret.v;
	        }
	      };

	      ReduxForm.prototype.handleSubmit = function handleSubmit(submitOrEvent) {
	        var _this2 = this;

	        var _props3 = this.props;
	        var onSubmit = _props3.onSubmit;
	        var fields = _props3.fields;
	        var form = _props3.form;

	        var check = function check(submit) {
	          if (!submit || typeof submit !== 'function') {
	            throw new Error('You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop');
	          }
	          return submit;
	        };
	        var values = _getValues2['default'](fields, form);
	        return !submitOrEvent || _eventsSilenceEvent2['default'](submitOrEvent) ?
	        // submitOrEvent is an event: fire submit
	        _handleSubmit3['default'](check(onSubmit), values, this.props, this.asyncValidate) :
	        // submitOrEvent is the submit function: return deferred submit thunk
	        _eventsSilenceEvents2['default'](function (event) {
	          _eventsSilenceEvent2['default'](event);
	          _handleSubmit3['default'](check(submitOrEvent), values, _this2.props, _this2.asyncValidate);
	        });
	      };

	      ReduxForm.prototype.render = function render() {
	        var _ref,
	            _this3 = this;

	        var allFields = this.fields;
	        var _props4 = this.props;
	        var addArrayValue = _props4.addArrayValue;
	        var asyncBlurFields = _props4.asyncBlurFields;
	        var blur = _props4.blur;
	        var change = _props4.change;
	        var destroy = _props4.destroy;
	        var focus = _props4.focus;
	        var fields = _props4.fields;
	        var form = _props4.form;
	        var initialValues = _props4.initialValues;
	        var initialize = _props4.initialize;
	        var onSubmit = _props4.onSubmit;
	        var propNamespace = _props4.propNamespace;
	        var reset = _props4.reset;
	        var removeArrayValue = _props4.removeArrayValue;
	        var returnRejectedSubmitPromise = _props4.returnRejectedSubmitPromise;
	        var startAsyncValidation = _props4.startAsyncValidation;
	        var startSubmit = _props4.startSubmit;
	        var stopAsyncValidation = _props4.stopAsyncValidation;
	        var stopSubmit = _props4.stopSubmit;
	        var submitFailed = _props4.submitFailed;
	        var touch = _props4.touch;
	        var untouch = _props4.untouch;
	        var validate = _props4.validate;

	        var passableProps = _objectWithoutProperties(_props4, ['addArrayValue', 'asyncBlurFields', 'blur', 'change', 'destroy', 'focus', 'fields', 'form', 'initialValues', 'initialize', 'onSubmit', 'propNamespace', 'reset', 'removeArrayValue', 'returnRejectedSubmitPromise', 'startAsyncValidation', 'startSubmit', 'stopAsyncValidation', 'stopSubmit', 'submitFailed', 'touch', 'untouch', 'validate']);

	        // eslint-disable-line no-redeclare
	        var _allFields$_meta = allFields._meta;
	        var allPristine = _allFields$_meta.allPristine;
	        var allValid = _allFields$_meta.allValid;
	        var errors = _allFields$_meta.errors;
	        var formError = _allFields$_meta.formError;
	        var values = _allFields$_meta.values;

	        var props = {
	          // State:
	          active: form._active,
	          asyncValidating: form._asyncValidating,
	          dirty: !allPristine,
	          error: formError,
	          errors: errors,
	          fields: allFields,
	          formKey: formKey,
	          invalid: !allValid,
	          pristine: allPristine,
	          submitting: form._submitting,
	          submitFailed: form._submitFailed,
	          valid: allValid,
	          values: values,

	          // Actions:
	          asyncValidate: _eventsSilenceEvents2['default'](function () {
	            return _this3.asyncValidate();
	          }),
	          // ^ doesn't just pass this.asyncValidate to disallow values passing
	          destroyForm: _eventsSilenceEvents2['default'](destroy),
	          handleSubmit: this.handleSubmit,
	          initializeForm: _eventsSilenceEvents2['default'](function (initValues) {
	            return initialize(initValues, fields);
	          }),
	          resetForm: _eventsSilenceEvents2['default'](reset),
	          touch: _eventsSilenceEvents2['default'](function () {
	            return touch.apply(undefined, arguments);
	          }),
	          touchAll: _eventsSilenceEvents2['default'](function () {
	            return touch.apply(undefined, fields);
	          }),
	          untouch: _eventsSilenceEvents2['default'](function () {
	            return untouch.apply(undefined, arguments);
	          }),
	          untouchAll: _eventsSilenceEvents2['default'](function () {
	            return untouch.apply(undefined, fields);
	          })
	        };
	        var passedProps = propNamespace ? (_ref = {}, _ref[propNamespace] = props, _ref) : props;
	        return React.createElement(WrappedComponent, _extends({}, passableProps, passedProps));
	      };

	      return ReduxForm;
	    })(Component);

	    ReduxForm.displayName = 'ReduxForm(' + _getDisplayName2['default'](WrappedComponent) + ')';
	    ReduxForm.WrappedComponent = WrappedComponent;
	    ReduxForm.propTypes = {
	      // props:
	      asyncBlurFields: PropTypes.arrayOf(PropTypes.string),
	      asyncValidate: PropTypes.func,
	      dispatch: PropTypes.func.isRequired,
	      fields: PropTypes.arrayOf(PropTypes.string).isRequired,
	      form: PropTypes.object,
	      initialValues: PropTypes.any,
	      onSubmit: PropTypes.func,
	      propNamespace: PropTypes.string,
	      readonly: PropTypes.bool,
	      returnRejectedSubmitPromise: PropTypes.bool,
	      validate: PropTypes.func,

	      // actions:
	      addArrayValue: PropTypes.func.isRequired,
	      blur: PropTypes.func.isRequired,
	      change: PropTypes.func.isRequired,
	      destroy: PropTypes.func.isRequired,
	      focus: PropTypes.func.isRequired,
	      initialize: PropTypes.func.isRequired,
	      removeArrayValue: PropTypes.func.isRequired,
	      reset: PropTypes.func.isRequired,
	      startAsyncValidation: PropTypes.func.isRequired,
	      startSubmit: PropTypes.func.isRequired,
	      stopAsyncValidation: PropTypes.func.isRequired,
	      stopSubmit: PropTypes.func.isRequired,
	      submitFailed: PropTypes.func.isRequired,
	      touch: PropTypes.func.isRequired,
	      untouch: PropTypes.func.isRequired
	    };
	    ReduxForm.defaultProps = {
	      asyncBlurFields: [],
	      form: _reducer.initialState,
	      readonly: false,
	      returnRejectedSubmitPromise: false,
	      validate: function validate() {
	        return {};
	      }
	    };

	    // bind touch flags to blur and change
	    var unboundActions = _extends({}, importedActions, {
	      blur: _bindActionData2['default'](importedActions.blur, {
	        touch: !!config.touchOnBlur
	      }),
	      change: _bindActionData2['default'](importedActions.change, {
	        touch: !!config.touchOnChange
	      })
	    });

	    // make redux connector with or without form key
	    var decorate = formKey !== undefined && formKey !== null ? connect(_wrapMapStateToProps2['default'](mapStateToProps, function (state) {
	      var formState = getFormState(state, reduxMountPoint);
	      if (!formState) {
	        throw new Error('You need to mount the redux-form reducer at "' + reduxMountPoint + '"');
	      }
	      return formState && formState[formName] && formState[formName][formKey];
	    }), _wrapMapDispatchToProps2['default'](mapDispatchToProps, _bindActionData2['default'](unboundActions, { form: formName, key: formKey }))) : connect(_wrapMapStateToProps2['default'](mapStateToProps, function (state) {
	      var formState = getFormState(state, reduxMountPoint);
	      if (!formState) {
	        throw new Error('You need to mount the redux-form reducer at "' + reduxMountPoint + '"');
	      }
	      return formState && formState[formName];
	    }), _wrapMapDispatchToProps2['default'](mapDispatchToProps, _bindActionData2['default'](unboundActions, { form: formName })));

	    return decorate(ReduxForm);
	  };
	};

	exports['default'] = createHigherOrderComponent;
	module.exports = exports['default'];
	// contains dispatch

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _actionTypes = __webpack_require__(245);

	var addArrayValue = function addArrayValue(path, value, index) {
	  return { type: _actionTypes.ADD_ARRAY_VALUE, path: path, value: value, index: index };
	};

	exports.addArrayValue = addArrayValue;
	var blur = function blur(field, value) {
	  return { type: _actionTypes.BLUR, field: field, value: value };
	};

	exports.blur = blur;
	var change = function change(field, value) {
	  return { type: _actionTypes.CHANGE, field: field, value: value };
	};

	exports.change = change;
	var destroy = function destroy() {
	  return { type: _actionTypes.DESTROY };
	};

	exports.destroy = destroy;
	var focus = function focus(field) {
	  return { type: _actionTypes.FOCUS, field: field };
	};

	exports.focus = focus;
	var initialize = function initialize(data, fields) {
	  if (!Array.isArray(fields)) {
	    throw new Error('must provide fields array to initialize() action creator');
	  }
	  return { type: _actionTypes.INITIALIZE, data: data, fields: fields };
	};

	exports.initialize = initialize;
	var removeArrayValue = function removeArrayValue(path, index) {
	  return { type: _actionTypes.REMOVE_ARRAY_VALUE, path: path, index: index };
	};

	exports.removeArrayValue = removeArrayValue;
	var reset = function reset() {
	  return { type: _actionTypes.RESET };
	};

	exports.reset = reset;
	var startAsyncValidation = function startAsyncValidation() {
	  return { type: _actionTypes.START_ASYNC_VALIDATION };
	};

	exports.startAsyncValidation = startAsyncValidation;
	var startSubmit = function startSubmit() {
	  return { type: _actionTypes.START_SUBMIT };
	};

	exports.startSubmit = startSubmit;
	var stopAsyncValidation = function stopAsyncValidation(errors) {
	  return { type: _actionTypes.STOP_ASYNC_VALIDATION, errors: errors };
	};

	exports.stopAsyncValidation = stopAsyncValidation;
	var stopSubmit = function stopSubmit(errors) {
	  return { type: _actionTypes.STOP_SUBMIT, errors: errors };
	};

	exports.stopSubmit = stopSubmit;
	var submitFailed = function submitFailed() {
	  return { type: _actionTypes.SUBMIT_FAILED };
	};

	exports.submitFailed = submitFailed;
	var touch = function touch() {
	  for (var _len = arguments.length, fields = Array(_len), _key = 0; _key < _len; _key++) {
	    fields[_key] = arguments[_key];
	  }

	  return { type: _actionTypes.TOUCH, fields: fields };
	};

	exports.touch = touch;
	var untouch = function untouch() {
	  for (var _len2 = arguments.length, fields = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    fields[_key2] = arguments[_key2];
	  }

	  return { type: _actionTypes.UNTOUCH, fields: fields };
	};
	exports.untouch = untouch;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = bindActionData;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _mapValues = __webpack_require__(246);

	var _mapValues2 = _interopRequireDefault(_mapValues);

	/**
	 * Adds additional properties to the results of the function or map of functions passed
	 */

	function bindActionData(action, data) {
	  if (typeof action === 'function') {
	    return function () {
	      return _extends({}, action.apply(undefined, arguments), data);
	    };
	  }
	  if (typeof action === 'object') {
	    return _mapValues2['default'](action, function (value) {
	      return bindActionData(value, data);
	    });
	  }
	  return action;
	}

	module.exports = exports['default'];

/***/ },
/* 261 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var getValue = function getValue(field, state, dest) {
	  var dotIndex = field.indexOf('.');
	  var openIndex = field.indexOf('[');
	  var closeIndex = field.indexOf(']');
	  if (openIndex > 0 && closeIndex !== openIndex + 1) {
	    throw new Error('found [ not followed by ]');
	  }
	  if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    (function () {
	      // array field
	      var key = field.substring(0, openIndex);
	      var rest = field.substring(closeIndex + 1);
	      if (rest[0] === '.') {
	        rest = rest.substring(1);
	      }
	      var array = state && state[key] || [];
	      if (rest) {
	        if (!dest[key]) {
	          dest[key] = [];
	        }
	        array.forEach(function (item, index) {
	          if (!dest[key][index]) {
	            dest[key][index] = {};
	          }
	          getValue(rest, item, dest[key][index]);
	        });
	      } else {
	        dest[key] = array.map(function (item) {
	          return item.value;
	        });
	      }
	    })();
	  } else if (dotIndex > 0) {
	    // subobject field
	    var key = field.substring(0, dotIndex);
	    var rest = field.substring(dotIndex + 1);
	    if (!dest[key]) {
	      dest[key] = {};
	    }
	    getValue(rest, state && state[key] || {}, dest[key]);
	  } else {
	    dest[field] = state[field] && state[field].value;
	  }
	};

	var getValues = function getValues(fields, state) {
	  return fields.reduce(function (accumulator, field) {
	    getValue(field, state, accumulator);
	    return accumulator;
	  }, {});
	};

	exports['default'] = getValues;
	module.exports = exports['default'];

/***/ },
/* 262 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = isValid;

	function isValid(error) {
	  if (Array.isArray(error)) {
	    return error.reduce(function (valid, errorValue) {
	      return valid && isValid(errorValue);
	    }, true);
	  }
	  if (error && typeof error === 'object') {
	    return Object.keys(error).reduce(function (valid, key) {
	      return valid && isValid(error[key]);
	    }, true);
	  }
	  return !error;
	}

	module.exports = exports['default'];

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _readField = __webpack_require__(264);

	var _readField2 = _interopRequireDefault(_readField);

	var _write = __webpack_require__(248);

	var _write2 = _interopRequireDefault(_write);

	var _getValues = __webpack_require__(261);

	var _getValues2 = _interopRequireDefault(_getValues);

	var _removeField = __webpack_require__(276);

	var _removeField2 = _interopRequireDefault(_removeField);

	/**
	 * Reads props and generates (or updates) field structure
	 */
	var readFields = function readFields(props, previousProps, myFields, asyncValidate, isReactNative) {
	  var fields = props.fields;
	  var form = props.form;
	  var validate = props.validate;

	  var previousFields = previousProps.fields;
	  var values = _getValues2['default'](fields, form);
	  var syncErrors = validate(values, props);
	  var errors = {};
	  var formError = syncErrors._error || form._error;
	  var allValid = !formError;
	  var allPristine = true;
	  var tally = function tally(field) {
	    if (field.error) {
	      errors = _write2['default'](field.name, field.error, errors);
	      allValid = false;
	    }
	    if (field.dirty) {
	      allPristine = false;
	    }
	  };
	  var fieldObjects = previousFields ? previousFields.reduce(function (accumulator, previousField) {
	    return ~fields.indexOf(previousField) ? accumulator : _removeField2['default'](accumulator, previousField);
	  }, _extends({}, myFields)) : _extends({}, myFields);
	  fields.forEach(function (name) {
	    _readField2['default'](form, name, undefined, fieldObjects, syncErrors, asyncValidate, isReactNative, props, tally);
	  });
	  Object.defineProperty(fieldObjects, '_meta', {
	    value: {
	      allPristine: allPristine,
	      allValid: allValid,
	      values: values,
	      errors: errors,
	      formError: formError
	    }
	  });
	  return fieldObjects;
	};
	exports['default'] = readFields;
	module.exports = exports['default'];

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _eventsCreateOnBlur = __webpack_require__(265);

	var _eventsCreateOnBlur2 = _interopRequireDefault(_eventsCreateOnBlur);

	var _eventsCreateOnChange = __webpack_require__(268);

	var _eventsCreateOnChange2 = _interopRequireDefault(_eventsCreateOnChange);

	var _eventsCreateOnDragStart = __webpack_require__(269);

	var _eventsCreateOnDragStart2 = _interopRequireDefault(_eventsCreateOnDragStart);

	var _eventsCreateOnDrop = __webpack_require__(270);

	var _eventsCreateOnDrop2 = _interopRequireDefault(_eventsCreateOnDrop);

	var _eventsCreateOnFocus = __webpack_require__(271);

	var _eventsCreateOnFocus2 = _interopRequireDefault(_eventsCreateOnFocus);

	var _silencePromise = __webpack_require__(272);

	var _silencePromise2 = _interopRequireDefault(_silencePromise);

	var _read = __webpack_require__(247);

	var _read2 = _interopRequireDefault(_read);

	var _updateField = __webpack_require__(274);

	var _updateField2 = _interopRequireDefault(_updateField);

	var readField = function readField(_x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {
	  var _arguments = arguments;
	  var _again = true;

	  _function: while (_again) {
	    var state = _x2,
	        fieldName = _x3,
	        pathToHere = _x4,
	        fields = _x5,
	        syncErrors = _x6,
	        asyncValidate = _x7,
	        isReactNative = _x8,
	        props = _x9;
	    if (pathToHere === undefined) pathToHere = '';
	    _again = false;
	    var callback = _arguments.length <= 8 || _arguments[8] === undefined ? function () {
	      return null;
	    } : _arguments[8];
	    var asyncBlurFields = props.asyncBlurFields;
	    var blur = props.blur;
	    var change = props.change;
	    var focus = props.focus;
	    var form = props.form;
	    var initialValues = props.initialValues;
	    var readonly = props.readonly;
	    var addArrayValue = props.addArrayValue;
	    var removeArrayValue = props.removeArrayValue;

	    var dotIndex = fieldName.indexOf('.');
	    var openIndex = fieldName.indexOf('[');
	    var closeIndex = fieldName.indexOf(']');
	    if (openIndex > 0 && closeIndex !== openIndex + 1) {
	      throw new Error('found [ not followed by ]');
	    }
	    if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	      var _ret = (function () {
	        // array field
	        var key = fieldName.substring(0, openIndex);
	        var rest = fieldName.substring(closeIndex + 1);
	        if (rest[0] === '.') {
	          rest = rest.substring(1);
	        }
	        var stateArray = state && state[key] || [];
	        if (!fields[key]) {
	          fields[key] = [];
	          Object.defineProperty(fields[key], 'addField', {
	            value: function value(_value, index) {
	              return addArrayValue(pathToHere + key, _value, index);
	            }
	          });
	          Object.defineProperty(fields[key], 'removeField', {
	            value: function value(index) {
	              return removeArrayValue(pathToHere + key, index);
	            }
	          });
	        }
	        var fieldArray = fields[key];
	        stateArray.forEach(function (fieldState, index) {
	          if (rest && !fieldArray[index]) {
	            fieldArray[index] = {};
	          }
	          var dest = rest ? fieldArray[index] : {};
	          var result = readField(fieldState, rest, '' + pathToHere + key + '[' + index + ']' + (rest ? '.' : ''), dest, syncErrors, asyncValidate, isReactNative, props, callback);
	          if (!rest) {
	            // if nothing after [] in field name, assign directly to array
	            fieldArray[index] = result;
	          }
	        });
	        if (fieldArray.length > stateArray.length) {
	          // remove extra items that aren't in state array
	          fieldArray.splice(stateArray.length, fieldArray.length - stateArray.length);
	        }
	        return {
	          v: fieldArray
	        };
	      })();

	      if (typeof _ret === 'object') return _ret.v;
	    }
	    if (dotIndex > 0) {
	      // subobject field
	      var key = fieldName.substring(0, dotIndex);
	      var rest = fieldName.substring(dotIndex + 1);
	      if (!fields[key]) {
	        fields[key] = {};
	      }
	      _arguments = [_x2 = state[key] || {}, _x3 = rest, _x4 = pathToHere + key + '.', _x5 = fields[key], _x6 = syncErrors, _x7 = asyncValidate, _x8 = isReactNative, _x9 = props, callback];
	      _again = true;
	      callback = asyncBlurFields = blur = change = focus = form = initialValues = readonly = addArrayValue = removeArrayValue = dotIndex = openIndex = closeIndex = _ret = key = rest = undefined;
	      continue _function;
	    }
	    var name = pathToHere + fieldName;
	    var field = fields[fieldName] || {};
	    if (field.name !== name) {
	      var onChange = _eventsCreateOnChange2['default'](name, change, isReactNative);
	      var initialValue = _read2['default'](name, initialValues);
	      field.name = name;
	      field.defaultChecked = initialValue === true;
	      field.defaultValue = initialValue;
	      field.initialValue = initialValue;
	      if (!readonly) {
	        field.onBlur = _eventsCreateOnBlur2['default'](name, blur, isReactNative, ~asyncBlurFields.indexOf(name) && function (blurName, blurValue) {
	          return _silencePromise2['default'](asyncValidate(blurName, blurValue));
	        });
	        field.onChange = onChange;
	        field.onDragStart = _eventsCreateOnDragStart2['default'](name, function () {
	          return field.value;
	        });
	        field.onDrop = _eventsCreateOnDrop2['default'](name, change);
	        field.onFocus = _eventsCreateOnFocus2['default'](name, focus);
	        field.onUpdate = onChange; // alias to support belle. https://github.com/nikgraf/belle/issues/58
	      }
	      field.valid = true;
	      field.invalid = false;
	      Object.defineProperty(field, '_isField', { value: true });
	    }

	    var fieldState = (fieldName ? state[fieldName] : state) || {};
	    var syncError = _read2['default'](name, syncErrors);
	    var updated = _updateField2['default'](field, fieldState, name === form._active, syncError);
	    if (fieldName || fields[fieldName] !== updated) {
	      fields[fieldName] = updated;
	    }
	    callback(updated);
	    return updated;
	  }
	};

	exports['default'] = readField;
	module.exports = exports['default'];

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _getValue = __webpack_require__(266);

	var _getValue2 = _interopRequireDefault(_getValue);

	var createOnBlur = function createOnBlur(name, blur, isReactNative, afterBlur) {
	  return function (event) {
	    var value = _getValue2['default'](event, isReactNative);
	    blur(name, value);
	    if (afterBlur) {
	      afterBlur(name, value);
	    }
	  };
	};
	exports['default'] = createOnBlur;
	module.exports = exports['default'];

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _isEvent = __webpack_require__(267);

	var _isEvent2 = _interopRequireDefault(_isEvent);

	var getSelectedValues = function getSelectedValues(options) {
	  var result = [];
	  if (options) {
	    for (var index = 0; index < options.length; index++) {
	      var option = options[index];
	      if (option.selected) {
	        result.push(option.value);
	      }
	    }
	  }
	  return result;
	};

	var getValue = function getValue(event, isReactNative) {
	  if (_isEvent2['default'](event)) {
	    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {
	      return event.nativeEvent.text;
	    }
	    if (isReactNative && event.nativeEvent !== undefined) {
	      return event.nativeEvent.text;
	    }
	    var _event$target = event.target;
	    var type = _event$target.type;
	    var value = _event$target.value;
	    var checked = _event$target.checked;
	    var files = _event$target.files;
	    var dataTransfer = event.dataTransfer;

	    if (type === 'checkbox') {
	      return checked;
	    }
	    if (type === 'file') {
	      return files || dataTransfer && dataTransfer.files;
	    }
	    if (type === 'select-multiple') {
	      return getSelectedValues(event.target.options);
	    }
	    return value;
	  }
	  // not an event, so must be either our value or an object containing our value in the 'value' key
	  return event && typeof event === 'object' && event.value !== undefined ? event.value : // extract value from { value: value } structure. https://github.com/nikgraf/belle/issues/58
	  event;
	};

	exports['default'] = getValue;
	module.exports = exports['default'];

/***/ },
/* 267 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var isEvent = function isEvent(candidate) {
	  return !!(candidate && candidate.stopPropagation && candidate.preventDefault);
	};

	exports["default"] = isEvent;
	module.exports = exports["default"];

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _getValue = __webpack_require__(266);

	var _getValue2 = _interopRequireDefault(_getValue);

	var createOnChange = function createOnChange(name, change, isReactNative) {
	  return function (event) {
	    return change(name, _getValue2['default'](event, isReactNative));
	  };
	};
	exports['default'] = createOnChange;
	module.exports = exports['default'];

/***/ },
/* 269 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var dataKey = 'value';
	exports.dataKey = dataKey;
	var createOnDragStart = function createOnDragStart(name, getValue) {
	  return function (event) {
	    event.dataTransfer.setData(dataKey, getValue());
	  };
	};

	exports['default'] = createOnDragStart;

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createOnDragStart = __webpack_require__(269);

	var createOnDrop = function createOnDrop(name, change) {
	  return function (event) {
	    change(name, event.dataTransfer.getData(_createOnDragStart.dataKey));
	  };
	};
	exports['default'] = createOnDrop;
	module.exports = exports['default'];

/***/ },
/* 271 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var createOnFocus = function createOnFocus(name, focus) {
	  return function () {
	    return focus(name);
	  };
	};
	exports["default"] = createOnFocus;
	module.exports = exports["default"];

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _isPromise = __webpack_require__(273);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var noop = function noop() {
	  return undefined;
	};

	var silencePromise = function silencePromise(promise) {
	  return _isPromise2['default'](promise) ? promise.then(noop, noop) : promise;
	};

	exports['default'] = silencePromise;
	module.exports = exports['default'];

/***/ },
/* 273 */
/***/ function(module, exports) {

	module.exports = isPromise;

	function isPromise(obj) {
	  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
	}


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _isPristine = __webpack_require__(275);

	var _isPristine2 = _interopRequireDefault(_isPristine);

	var _isValid = __webpack_require__(262);

	var _isValid2 = _interopRequireDefault(_isValid);

	/**
	 * Updates a field object from the store values
	 */
	var updateField = function updateField(field, formField, active, syncError) {
	  var diff = {};

	  // update field value
	  if (field.value !== formField.value) {
	    diff.value = formField.value;
	    diff.checked = typeof formField.value === 'boolean' ? formField.value : undefined;
	  }

	  // update dirty/pristine
	  var pristine = _isPristine2['default'](formField.value, formField.initial);
	  if (field.pristine !== pristine) {
	    diff.dirty = !pristine;
	    diff.pristine = pristine;
	  }

	  // update field error
	  var error = syncError || formField.submitError || formField.asyncError;
	  if (error !== field.error) {
	    diff.error = error;
	  }
	  var valid = _isValid2['default'](error);
	  if (field.valid !== valid) {
	    diff.invalid = !valid;
	    diff.valid = valid;
	  }

	  if (active !== field.active) {
	    diff.active = active;
	  }
	  var touched = !!formField.touched;
	  if (touched !== field.touched) {
	    diff.touched = touched;
	  }
	  var visited = !!formField.visited;
	  if (visited !== field.visited) {
	    diff.visited = visited;
	  }

	  return Object.keys(diff).length ? _extends({}, field, diff) : field;
	};
	exports['default'] = updateField;
	module.exports = exports['default'];

/***/ },
/* 275 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = isPristine;

	function isPristine(initial, data) {
	  if (initial === data) {
	    return true;
	  }
	  if (typeof initial === 'boolean' || typeof data === 'boolean') {
	    return initial === data;
	  } else if (initial instanceof Date && data instanceof Date) {
	    return initial.getTime() === data.getTime();
	  } else if (initial && typeof initial === 'object') {
	    if (!data || typeof data !== 'object') {
	      return false;
	    }
	    var initialKeys = Object.keys(initial);
	    var dataKeys = Object.keys(data);
	    if (initialKeys.length !== dataKeys.length) {
	      return false;
	    }
	    for (var index = 0; index < dataKeys.length; index++) {
	      var key = dataKeys[index];
	      if (!isPristine(initial[key], data[key])) {
	        return false;
	      }
	    }
	  } else if (initial || data) {
	    // allow '' to equate to undefined or null
	    return initial === data;
	  }
	  return true;
	}

	module.exports = exports['default'];

/***/ },
/* 276 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var without = function without(object, key) {
	  var copy = _extends({}, object);
	  delete copy[key];
	  return copy;
	};

	var removeField = function removeField(fields, path) {
	  var dotIndex = path.indexOf('.');
	  var openIndex = path.indexOf('[');
	  var closeIndex = path.indexOf(']');
	  if (openIndex > 0 && closeIndex !== openIndex + 1) {
	    throw new Error('found [ not followed by ]');
	  }
	  if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    var _extends2;

	    var _ret = (function () {
	      // array field
	      var key = path.substring(0, openIndex);
	      if (!Array.isArray(fields[key])) {
	        return {
	          v: without(fields, key)
	        };
	      }
	      var rest = path.substring(closeIndex + 1);
	      if (rest[0] === '.') {
	        rest = rest.substring(1);
	      }
	      if (rest) {
	        var _ret2 = (function () {
	          var copy = [];
	          fields[key].forEach(function (item, index) {
	            var result = removeField(item, rest);
	            if (Object.keys(result).length) {
	              copy[index] = result;
	            }
	          });
	          return {
	            v: {
	              v: copy.length ? _extends({}, fields, (_extends2 = {}, _extends2[key] = copy, _extends2)) : without(fields, key)
	            }
	          };
	        })();

	        if (typeof _ret2 === 'object') return _ret2.v;
	      }
	      return {
	        v: without(fields, key)
	      };
	    })();

	    if (typeof _ret === 'object') return _ret.v;
	  }
	  if (dotIndex > 0) {
	    var _extends3;

	    // subobject field
	    var key = path.substring(0, dotIndex);
	    var rest = path.substring(dotIndex + 1);
	    if (!fields[key]) {
	      return fields;
	    }
	    var result = removeField(fields[key], rest);
	    return Object.keys(result).length ? _extends({}, fields, (_extends3 = {}, _extends3[key] = removeField(fields[key], rest), _extends3)) : without(fields, key);
	  }
	  return without(fields, path);
	};

	exports['default'] = removeField;
	module.exports = exports['default'];

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _isPromise = __webpack_require__(273);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var _isValid = __webpack_require__(262);

	var _isValid2 = _interopRequireDefault(_isValid);

	var handleSubmit = function handleSubmit(submit, values, props, asyncValidate) {
	  var dispatch = props.dispatch;
	  var fields = props.fields;
	  var startSubmit = props.startSubmit;
	  var stopSubmit = props.stopSubmit;
	  var submitFailed = props.submitFailed;
	  var returnRejectedSubmitPromise = props.returnRejectedSubmitPromise;
	  var touch = props.touch;
	  var validate = props.validate;

	  var syncErrors = validate(values, props);
	  touch.apply(undefined, fields); // touch all fields
	  if (_isValid2['default'](syncErrors)) {
	    var doSubmit = function doSubmit() {
	      var result = submit(values, dispatch);
	      if (_isPromise2['default'](result)) {
	        startSubmit();
	        return result.then(function (submitResult) {
	          stopSubmit();
	          return submitResult;
	        }, function (submitError) {
	          stopSubmit(submitError);
	          if (returnRejectedSubmitPromise) {
	            return Promise.reject(submitError);
	          }
	        });
	      }
	      return result;
	    };
	    var asyncValidateResult = asyncValidate();
	    return _isPromise2['default'](asyncValidateResult) ?
	    // asyncValidateResult will be rejected if async validation failed
	    asyncValidateResult.then(doSubmit, function () {
	      submitFailed();
	      return returnRejectedSubmitPromise ? Promise.reject() : Promise.resolve();
	    }) : doSubmit(); // no async validation, so submit
	  }
	  submitFailed();
	};

	exports['default'] = handleSubmit;
	module.exports = exports['default'];

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _isPromise = __webpack_require__(273);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var _isValid = __webpack_require__(262);

	var _isValid2 = _interopRequireDefault(_isValid);

	var asyncValidation = function asyncValidation(fn, start, stop) {
	  start();
	  var promise = fn();
	  if (!_isPromise2['default'](promise)) {
	    throw new Error('asyncValidate function passed to reduxForm must return a promise');
	  }
	  var handleErrors = function handleErrors(rejected) {
	    return function (errors) {
	      if (!_isValid2['default'](errors)) {
	        stop(errors);
	        return Promise.reject();
	      } else if (rejected) {
	        stop();
	        throw new Error('Asynchronous validation promise was rejected without errors.');
	      }
	      stop();
	      return Promise.resolve();
	    };
	  };
	  return promise.then(handleErrors(false), handleErrors(true));
	};

	exports['default'] = asyncValidation;
	module.exports = exports['default'];

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _silenceEvent = __webpack_require__(280);

	var _silenceEvent2 = _interopRequireDefault(_silenceEvent);

	var silenceEvents = function silenceEvents(fn) {
	  return function (event) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    return _silenceEvent2['default'](event) ? fn.apply(undefined, args) : fn.apply(undefined, [event].concat(args));
	  };
	};

	exports['default'] = silenceEvents;
	module.exports = exports['default'];

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _isEvent = __webpack_require__(267);

	var _isEvent2 = _interopRequireDefault(_isEvent);

	var silenceEvent = function silenceEvent(event) {
	  var is = _isEvent2['default'](event);
	  if (is) {
	    event.preventDefault();
	  }
	  return is;
	};

	exports['default'] = silenceEvent;
	module.exports = exports['default'];

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _redux = __webpack_require__(223);

	var wrapMapDispatchToProps = function wrapMapDispatchToProps(mapDispatchToProps, actionCreators) {
	  if (mapDispatchToProps) {
	    if (typeof mapDispatchToProps === 'function') {
	      if (mapDispatchToProps.length > 1) {
	        return function (dispatch, ownProps) {
	          return _extends({}, mapDispatchToProps(dispatch, ownProps), _redux.bindActionCreators(actionCreators, dispatch), {
	            dispatch: dispatch
	          });
	        };
	      }
	      return function (dispatch) {
	        return _extends({}, mapDispatchToProps(dispatch), _redux.bindActionCreators(actionCreators, dispatch), {
	          dispatch: dispatch
	        });
	      };
	    }
	    return function (dispatch) {
	      return _extends({}, _redux.bindActionCreators(mapDispatchToProps, dispatch), _redux.bindActionCreators(actionCreators, dispatch), {
	        dispatch: dispatch
	      });
	    };
	  }
	  return function (dispatch) {
	    return _extends({}, _redux.bindActionCreators(actionCreators, dispatch), {
	      dispatch: dispatch
	    });
	  };
	};

	exports['default'] = wrapMapDispatchToProps;
	module.exports = exports['default'];

/***/ },
/* 282 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var wrapMapStateToProps = function wrapMapStateToProps(mapStateToProps, getForm) {
	  if (mapStateToProps) {
	    if (typeof mapStateToProps !== 'function') {
	      throw new Error('mapStateToProps must be a function');
	    }
	    if (mapStateToProps.length > 1) {
	      return function (state, ownProps) {
	        return _extends({}, mapStateToProps(state, ownProps), {
	          form: getForm(state)
	        });
	      };
	    }
	    return function (state) {
	      return _extends({}, mapStateToProps(state), {
	        form: getForm(state)
	      });
	    };
	  }
	  return function (state) {
	    return {
	      form: getForm(state)
	    };
	  };
	};

	exports['default'] = wrapMapStateToProps;
	module.exports = exports['default'];

/***/ },
/* 283 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var createPropTypes = function createPropTypes(_ref) {
	  var _ref$PropTypes = _ref.PropTypes;
	  var any = _ref$PropTypes.any;
	  var bool = _ref$PropTypes.bool;
	  var string = _ref$PropTypes.string;
	  var func = _ref$PropTypes.func;
	  var object = _ref$PropTypes.object;
	  return {
	    // State:
	    active: string, // currently active field
	    asyncValidating: bool.isRequired, // true if async validation is running
	    dirty: bool.isRequired, // true if any values are different from initialValues
	    error: any, // form-wide error from '_error' key in validation result
	    errors: object, // a map of errors corresponding to structure of form data (result of validation)
	    fields: object.isRequired, // the map of fields
	    formKey: any, // the form key if one was provided (used when doing multirecord forms)
	    invalid: bool.isRequired, // true if there are any validation errors
	    pristine: bool.isRequired, // true if the values are the same as initialValues
	    submitting: bool.isRequired, // true if the form is in the process of being submitted
	    submitFailed: bool.isRequired, // true if the form was submitted and failed for any reason
	    valid: bool.isRequired, // true if there are no validation errors
	    values: object.isRequired, // the values of the form as they will be submitted

	    // Actions:
	    asyncValidate: func.isRequired, // function to trigger async validation
	    destroyForm: func.isRequired, // action to destroy the form's data in Redux
	    handleSubmit: func.isRequired, // function to submit the form
	    initializeForm: func.isRequired, // action to initialize form data
	    resetForm: func.isRequired, // action to reset the form data to previously initialized values
	    touch: func.isRequired, // action to mark fields as touched
	    touchAll: func.isRequired, // action to mark ALL fields as touched
	    untouch: func.isRequired, // action to mark fields as untouched
	    untouchAll: func.isRequired // action to mark ALL fields as untouched
	  };
	};

	exports["default"] = createPropTypes;
	module.exports = exports["default"];

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(285);

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedStateMixin
	 * @typechecks static-only
	 */

	'use strict';

	var ReactLink = __webpack_require__(286);
	var ReactStateSetters = __webpack_require__(287);

	/**
	 * A simple mixin around ReactLink.forState().
	 */
	var LinkedStateMixin = {
	  /**
	   * Create a ReactLink that's linked to part of this component's state. The
	   * ReactLink will have the current value of this.state[key] and will call
	   * setState() when a change is requested.
	   *
	   * @param {string} key state key to update. Note: you may want to use keyOf()
	   * if you're using Google Closure Compiler advanced mode.
	   * @return {ReactLink} ReactLink instance linking to the state.
	   */
	  linkState: function (key) {
	    return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));
	  }
	};

	module.exports = LinkedStateMixin;

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactLink
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactLink encapsulates a common pattern in which a component wants to modify
	 * a prop received from its parent. ReactLink allows the parent to pass down a
	 * value coupled with a callback that, when invoked, expresses an intent to
	 * modify that value. For example:
	 *
	 * React.createClass({
	 *   getInitialState: function() {
	 *     return {value: ''};
	 *   },
	 *   render: function() {
	 *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);
	 *     return <input valueLink={valueLink} />;
	 *   },
	 *   _handleValueChange: function(newValue) {
	 *     this.setState({value: newValue});
	 *   }
	 * });
	 *
	 * We have provided some sugary mixins to make the creation and
	 * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.
	 */

	var React = __webpack_require__(3);

	/**
	 * @param {*} value current value of the link
	 * @param {function} requestChange callback to request a change
	 */
	function ReactLink(value, requestChange) {
	  this.value = value;
	  this.requestChange = requestChange;
	}

	/**
	 * Creates a PropType that enforces the ReactLink API and optionally checks the
	 * type of the value being passed inside the link. Example:
	 *
	 * MyComponent.propTypes = {
	 *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)
	 * }
	 */
	function createLinkTypeChecker(linkType) {
	  var shapes = {
	    value: typeof linkType === 'undefined' ? React.PropTypes.any.isRequired : linkType.isRequired,
	    requestChange: React.PropTypes.func.isRequired
	  };
	  return React.PropTypes.shape(shapes);
	}

	ReactLink.PropTypes = {
	  link: createLinkTypeChecker
	};

	module.exports = ReactLink;

/***/ },
/* 287 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactStateSetters
	 */

	'use strict';

	var ReactStateSetters = {
	  /**
	   * Returns a function that calls the provided function, and uses the result
	   * of that to set the component's state.
	   *
	   * @param {ReactCompositeComponent} component
	   * @param {function} funcReturningState Returned callback uses this to
	   *                                      determine how to update state.
	   * @return {function} callback that when invoked uses funcReturningState to
	   *                    determined the object literal to setState.
	   */
	  createStateSetter: function (component, funcReturningState) {
	    return function (a, b, c, d, e, f) {
	      var partialState = funcReturningState.call(component, a, b, c, d, e, f);
	      if (partialState) {
	        component.setState(partialState);
	      }
	    };
	  },

	  /**
	   * Returns a single-argument callback that can be used to update a single
	   * key in the component's state.
	   *
	   * Note: this is memoized function, which makes it inexpensive to call.
	   *
	   * @param {ReactCompositeComponent} component
	   * @param {string} key The key in the state that you should update.
	   * @return {function} callback of 1 argument which calls setState() with
	   *                    the provided keyName and callback argument.
	   */
	  createStateKeySetter: function (component, key) {
	    // Memoize the setters.
	    var cache = component.__keySetters || (component.__keySetters = {});
	    return cache[key] || (cache[key] = createStateKeySetter(component, key));
	  }
	};

	function createStateKeySetter(component, key) {
	  // Partial state is allocated outside of the function closure so it can be
	  // reused with every call, avoiding memory allocation when this function
	  // is called.
	  var partialState = {};
	  return function stateKeySetter(value) {
	    partialState[key] = value;
	    component.setState(partialState);
	  };
	}

	ReactStateSetters.Mixin = {
	  /**
	   * Returns a function that calls the provided function, and uses the result
	   * of that to set the component's state.
	   *
	   * For example, these statements are equivalent:
	   *
	   *   this.setState({x: 1});
	   *   this.createStateSetter(function(xValue) {
	   *     return {x: xValue};
	   *   })(1);
	   *
	   * @param {function} funcReturningState Returned callback uses this to
	   *                                      determine how to update state.
	   * @return {function} callback that when invoked uses funcReturningState to
	   *                    determined the object literal to setState.
	   */
	  createStateSetter: function (funcReturningState) {
	    return ReactStateSetters.createStateSetter(this, funcReturningState);
	  },

	  /**
	   * Returns a single-argument callback that can be used to update a single
	   * key in the component's state.
	   *
	   * For example, these statements are equivalent:
	   *
	   *   this.setState({x: 1});
	   *   this.createStateKeySetter('x')(1);
	   *
	   * Note: this is memoized function, which makes it inexpensive to call.
	   *
	   * @param {string} key The key in the state that you should update.
	   * @return {function} callback of 1 argument which calls setState() with
	   *                    the provided keyName and callback argument.
	   */
	  createStateKeySetter: function (key) {
	    return ReactStateSetters.createStateKeySetter(this, key);
	  }
	};

	module.exports = ReactStateSetters;

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = Area;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _actionsAction_types = __webpack_require__(289);

	function Area() {
	  var ActionTypes = arguments.length <= 0 || arguments[0] === undefined ? _actionsAction_types.AreaActionTypes1 : arguments[0];

	  function _resolve(url, signal) {
	    return function (dispatch) {
	      return (0, _utilsRequest.get)(url).done(function (json) {
	        dispatch({
	          type: signal,
	          data: json
	        });
	      }).fail(function (msg) {
	        dispatch({
	          type: ActionTypes.GOT_AREA_FAIL,
	          msg: msg
	        });
	      });
	    };
	  };
	  return {
	    getProvinces: function getProvinces() {
	      return _resolve(_configUrl2['default'].provinces.toString(), ActionTypes.GOT_PROVINCES);
	      // return {
	      //   type: ActionTypes.GOT_PROVINCES,
	      //   data: {1: '广东省', 2: '湖北省', 3: '湖南省'}
	      // }
	    },

	    provinceReset: function provinceReset() {
	      return {
	        type: ActionTypes.PROVINCE_RESET
	      };
	    },

	    getCities: function getCities(province_id) {
	      return _resolve(_configUrl2['default'].cities.toString(province_id), ActionTypes.GOT_CITIES);
	      // return {
	      //   type: ActionTypes.GOT_CITIES,
	      //   data: {1: '深圳市', 2: '武汉市', 3: '长沙市'}
	      // }
	    },

	    cityReset: function cityReset() {
	      return {
	        type: ActionTypes.CITY_RESET
	      };
	    },

	    getDistricts: function getDistricts(city_id) {
	      return _resolve(_configUrl2['default'].districts.toString(city_id), ActionTypes.GOT_DISTRICTS);
	      // return {
	      //   type: ActionTypes.GOT_DISTRICTS,
	      //   data: {1: '南山区', 2: '宝安区', 3: '福田区'}
	      // }
	    },

	    getDeliveryShops: function getDeliveryShops(district_id) {
	      return (0, _utilsRequest.GET)(_configUrl2['default'].shops.toString(district_id), null, ActionTypes.GOT_DELIVERY_SHOPS);
	    },

	    //清空shop
	    districtReset: function districtReset() {
	      return {
	        type: ActionTypes.DISTRICT_RESET
	      };
	    }
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 289 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = {
	  AreaActionTypes1: {
	    GOT_PROVINCES: 'GOT_PROVINCES',
	    PROVINCE_RESET: 'PROVINCE_RESET',
	    GOT_CITIES: 'GOT_CITIES',
	    CITY_RESET: 'CITY_RESET',
	    GOT_DISTRICTS: 'GOT_DISTRICTS',
	    GOT_AREA_FAIL: 'GOT_AREA_FAIL',
	    GOT_DELIVERY_SHOPS: 'GOT_DELIVERY_SHOPS',
	    DISTRICT_RESET: 'DISTRICT_RESET'
	  },
	  AreaActionTypes2: {
	    GOT_PROVINCES: 'GOT_PROVINCES_2',
	    PROVINCE_RESET: 'PROVINCE_RESET_2',
	    GOT_CITIES: 'GOT_CITIES_2',
	    CITY_RESET: 'CITY_RESET_2',
	    GOT_DISTRICTS: 'GOT_DISTRICTS_2',
	    GOT_AREA_FAIL: 'GOT_AREA_FAIL_2',
	    GOT_DELIVERY_SHOPS: 'GOT_DELIVERY_SHOP_2S',
	    DISTRICT_RESET: 'DISTRICT_RESET_2'
	  }
	};
	module.exports = exports['default'];

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.getOrderList = getOrderList;
	exports.getOrderExchangeList = getOrderExchangeList;
	exports.getOrderDeliveryList = getOrderDeliveryList;
	exports.getOrderDistributeList = getOrderDistributeList;
	exports.checkAllOrders = checkAllOrders;
	exports.checkOrder = checkOrder;
	exports.activeOrder = activeOrder;
	exports.showProductsDetail = showProductsDetail;
	exports.getOrderOptRecord = getOrderOptRecord;
	exports.resetOrderOptRecord = resetOrderOptRecord;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _reduxForm = __webpack_require__(242);

	var _configAppConfig = __webpack_require__(157);

	var _utilsIndex = __webpack_require__(160);

	/**
	 * GET_ORDER_LIST 这里共用了这个信号，代表获取列表数据（订单管理，订单转送单，送货单管理，配送单管理）
	 * @type {String}
	 */
	var GET_ORDER_LIST = 'GET_ORDER_LIST';
	exports.GET_ORDER_LIST = GET_ORDER_LIST;
	var GET_ORDER_LIST_ING = 'GET_ORDER_LIST_ING';
	exports.GET_ORDER_LIST_ING = GET_ORDER_LIST_ING;

	function getOrderList(data) {
	  return function (dispatch, getState) {
	    var filter_data = (0, _reduxForm.getValues)(getState().form.order_manage_filter);
	    filter_data = (0, _utilsIndex.formCompile)(filter_data);
	    return (0, _utilsRequest.GET)(_configUrl2['default'].orders.toString(), _extends({}, data, filter_data), GET_ORDER_LIST)(dispatch);
	    // .fail(function(msg, code){
	    //   if(code == NO_MORE_CODE){
	    //     Noty('alert', '没有查询到任何结果');
	    //   }
	    // });
	  };
	  /*
	    return TEST({
	      total: 1,
	      list: [{
	        'cancel_reason':  '取消理由xxxx',    
	        'city':  '城市xxx',    
	        'created_by':  '创建人xx',   
	        'created_time':  '下单时间xx',  
	        'delivery_name': '配送站名称xx',   
	        'delivery_time': '配送时间xx',    
	        'delivery_type': '配送方式xx',    
	        'discount_price':  '实际售价xx',    
	        'is_deal': '0',    
	        'is_submit': '1',    
	        'merchant_id': '22222',   
	        'order_id':  '11111',   
	        'original_price':  '4444',    
	        'owner_mobile':  '下单人手机xx',   
	        'owner_name':  '下单人姓名xx',   
	        'pay_status':  'PAYED',    
	        'recipient_address': '收货人地址xxxx',   
	        'recipient_mobile':  '收货人手机xxx',   
	        'recipient_name':  '收货人姓名xxx',   
	        'remarks': '备注xxxx',    
	        'src_name':  '订单来源xxx',    
	        'status':  '订单状态xxx',    
	        'updated_by':  '最后操作人xxx',   
	        'updated_date':  '最后操作时间eeee',
	      }]
	    }, GET_ORDER_LIST);
	  */
	}

	function getOrderExchangeList(data) {
	  return function (dispatch, getState) {
	    var filter_data = (0, _reduxForm.getValues)(getState().form.order_exchange_filter);
	    filter_data = (0, _utilsIndex.formCompile)(filter_data);
	    dispatch({ type: GET_ORDER_LIST_ING });
	    return (0, _utilsRequest.GET)(_configUrl2['default'].order_exchange.toString(), _extends({}, data, filter_data), GET_ORDER_LIST)(dispatch);
	  };
	}

	function getOrderDeliveryList(data) {
	  return function (dispatch, getState) {
	    var filter_data = (0, _reduxForm.getValues)(getState().form.order_delivery_filter);
	    filter_data = (0, _utilsIndex.formCompile)(filter_data);
	    dispatch({ type: GET_ORDER_LIST_ING });
	    return (0, _utilsRequest.GET)(_configUrl2['default'].order_delivery.toString(), _extends({}, data, filter_data), GET_ORDER_LIST)(dispatch);
	  };
	}

	function getOrderDistributeList(data) {
	  return function (dispatch, getState) {
	    var filter_data = (0, _reduxForm.getValues)(getState().form.order_distribute_filter);
	    filter_data = (0, _utilsIndex.formCompile)(filter_data);
	    dispatch({ type: GET_ORDER_LIST_ING });
	    return (0, _utilsRequest.GET)(_configUrl2['default'].order_distribute.toString(), _extends({}, data, filter_data), GET_ORDER_LIST)(dispatch);
	  };
	}

	var CHECK_ALL_ORDERS = 'CHECK_ALL_ORDERS';
	exports.CHECK_ALL_ORDERS = CHECK_ALL_ORDERS;

	function checkAllOrders(checked) {
	  return {
	    type: CHECK_ALL_ORDERS,
	    checked: checked
	  };
	}

	var CHECK_ORDER = 'CHECK_ORDER';exports.CHECK_ORDER = CHECK_ORDER;
	// 用于某些情况下选中订单 做批量操作

	function checkOrder(order_id, checked) {
	  return {
	    type: CHECK_ORDER,
	    order_id: order_id,
	    checked: checked
	  };
	}

	var ACTIVE_ORDER = 'ACTIVE_ORDER';exports.ACTIVE_ORDER = ACTIVE_ORDER;
	// 激活订单，用于查阅该订单详情
	var GET_ORDER_DETAIL_PRODUCTS = 'GET_ORDER_DETAIL_PRODUCTS';
	exports.GET_ORDER_DETAIL_PRODUCTS = GET_ORDER_DETAIL_PRODUCTS;

	function activeOrder(id) {
	  return function (dispatch) {
	    dispatch({
	      type: ACTIVE_ORDER,
	      active_order_id: id
	    });
	    return (0, _utilsRequest.GET)(_configUrl2['default'].order_detail.toString(id), null, GET_ORDER_DETAIL_PRODUCTS)(dispatch);
	  };
	  /*return TEST({
	    'city_id': '市IDXX',
	    'city_name': '市名称XX',
	    'delivery_id': '配送站IDXX',
	    'delivery_name': '配送站名称XX',
	    'delivery_time': '配送时间XX',
	    'delivery_type': '配送方式XX',
	    'district_id': '行政区IDXX',
	    'district_name': '行政区名称XX',
	    'owner_mobile':  '下单人手机XX',
	    'owner_name':  '下单人姓名XX',
	    'pay_modes_id':  '支付方式IDXX',
	    'pay_name':  '支付方式名称XX',
	    'products': [{
	      'choco_board':  '巧克力牌xx',    
	      'custom_desc': '自定义描述xx',   
	      'custom_name': '自定义名称xx',   
	      'discount_price':  '实际售价xx',    
	      'greeting_card': '祝福卡xx',   
	      'num': '产品数量xx',    
	      'original_price':  '产品原价xx',    
	      'product_name':  '产品名称xx',
	    }]
	    //...
	  }, GET_ORDER_DETAIL_PRODUCTS);*/
	}

	var SHOW_PRODUCTS_DETAIL = 'SHOW_PRODUCTS_DETAIL';exports.SHOW_PRODUCTS_DETAIL = SHOW_PRODUCTS_DETAIL;
	//允许订单对应的产品详情显示出来

	function showProductsDetail() {
	  return {
	    type: SHOW_PRODUCTS_DETAIL
	  };
	}

	var GET_ORDER_OPT_RECORD = 'GET_ORDER_OPT_RECORD';
	exports.GET_ORDER_OPT_RECORD = GET_ORDER_OPT_RECORD;

	function getOrderOptRecord(order_id, data) {
	  return function (dispatch) {
	    return (0, _utilsRequest.get)(_configUrl2['default'].order_opt_record.toString(order_id), data).done(function (jsonobj) {
	      dispatch({
	        type: GET_ORDER_OPT_RECORD,
	        data: jsonobj
	      });
	    });
	  };
	  // return GET(Url.order_opt_record.toString(order_id), data, GET_ORDER_OPT_RECORD);
	  /*return {
	    type: GET_ORDER_OPT_RECORD,
	    data: {
	      "total": 12,
	      "list": [{
	        "order_id": 10000035,
	        "option": "编辑订单：分配{配送站}为{龙华配送站}\n修改{收货地址}\n提交订单",
	        "created_time": "2016-01-15 13:09:47",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "{取消订单}",
	        "created_time": "2016-01-15 13:08:08",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "添加订单",
	        "created_time": "2016-01-15 13:06:28",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "修改 {配送站} 为 {龙华配送站} \n 修改 {配送时间} 为 {20151220 10:00~11:00} \n 删除 {榴莲双拼}",
	        "created_time": "2016-01-15 11:45:26",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "打印订单",
	        "created_time": "2016-01-15 11:43:47",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "打印订单",
	        "created_time": "2016-01-15 11:16:31",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "打印订单",
	        "created_time": "2016-01-15 10:39:22",
	        "created_by": "系统管理员"
	      }, {
	        "order_id": 10000035,
	        "option": "打印订单",
	        "created_time": "2016-01-15 10:27:46",
	        "created_by": "系统管理员"
	      }],
	      "page_no": "0",
	      "page_size": "8"
	    }
	  }*/
	}

	var RESET_ORDER_OPT_RECORD = 'RESET_ORDER_OPT_RECORD';exports.RESET_ORDER_OPT_RECORD = RESET_ORDER_OPT_RECORD;
	//先重置历史数据

	function resetOrderOptRecord() {
	  return {
	    type: RESET_ORDER_OPT_RECORD
	  };
	}

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.cancelOrder = cancelOrder;
	exports.orderException = orderException;
	exports.alterDelivery = alterDelivery;
	exports.alterStation = alterStation;
	exports.prepareDeliveryDataOK = prepareDeliveryDataOK;
	exports.resetDeliveryStations = resetDeliveryStations;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var CANCEL_ORDER = 'CANCEL_ORDER';
	exports.CANCEL_ORDER = CANCEL_ORDER;

	function cancelOrder(order_id, data) {
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].cancel_order.toString(order_id), data, CANCEL_ORDER);
	  // return TEST(null, [
	  //   {type: CANCEL_ORDER, key: 0},  //立即派发
	  //   {type: CANCEL_ORDER, key: 1}   //2000毫秒后派发
	  // ], 2000);
	}

	//已被弃用
	var ORDER_EXCEPTION = 'ORDER_EXCEPTION';
	exports.ORDER_EXCEPTION = ORDER_EXCEPTION;

	function orderException(order_id, data) {
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].order_exception.toString(order_id), data, ORDER_EXCEPTION);
	  // return TEST(null, [
	  //   {type: ORDER_EXCEPTION, key: 0},  //立即派发
	  //   {type: ORDER_EXCEPTION, key: 1}   //2000毫秒后派发
	  // ], 2000);
	}

	var ALTER_DELIVERY = 'ALTER_DELIVERY';
	exports.ALTER_DELIVERY = ALTER_DELIVERY;
	//修改配送

	function alterDelivery(order_id, data) {
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].alter_delivery.toString(order_id), data, ALTER_DELIVERY);
	  // return TEST(null, [
	  //   {type: ALTER_DELIVERY, key: 0},  //立即派发
	  //   {type: ALTER_DELIVERY, key: 1}   //2000毫秒后派发
	  // ], 2000);
	}

	var ALTER_STATION = 'ALTER_STATION';
	exports.ALTER_STATION = ALTER_STATION;
	//分配配送站

	function alterStation(order_id, data) {
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].alter_station.toString(order_id), data, ALTER_STATION);
	  // return TEST(null, [
	  //   {type: ALTER_STATION, key: 0},  //立即派发
	  //   {type: ALTER_STATION, key: 1}   //2000毫秒后派发
	  // ], 2000);
	}

	var PREPARE_DELIVERY_DATA_OK = 'PREPARE_DELIVERY_DATA_OK';
	exports.PREPARE_DELIVERY_DATA_OK = PREPARE_DELIVERY_DATA_OK;

	function prepareDeliveryDataOK() {
	  return {
	    type: PREPARE_DELIVERY_DATA_OK
	  };
	}

	var RESET_DELIVERY_STATIONS = 'RESET_DELIVERY_STATIONS';
	exports.RESET_DELIVERY_STATIONS = RESET_DELIVERY_STATIONS;

	function resetDeliveryStations() {
	  return {
	    type: RESET_DELIVERY_STATIONS
	  };
	}

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.getDeliveryStations = getDeliveryStations;
	exports.autoGetDeliveryStations = autoGetDeliveryStations;
	exports.getHistoryOrders = getHistoryOrders;
	exports.checkHistoryOrder = checkHistoryOrder;
	exports.checkGroupbuyPsd = checkGroupbuyPsd;
	exports.createOrder = createOrder;
	exports.saveOrder = saveOrder;
	exports.getOrderById = getOrderById;
	exports.copyOrder = copyOrder;
	exports.getCopyOrderById = getCopyOrderById;
	exports.submitOrder = submitOrder;

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _reduxForm = __webpack_require__(242);

	var _actionsForm = __webpack_require__(293);

	var _clone = __webpack_require__(295);

	var _clone2 = _interopRequireDefault(_clone);

	var _actionsOrder_support = __webpack_require__(300);

	var OrderSupport = _interopRequireWildcard(_actionsOrder_support);

	var GOT_ORDER_SRCS = OrderSupport.GOT_ORDER_SRCS;
	exports.GOT_ORDER_SRCS = GOT_ORDER_SRCS;
	var getOrderSrcs = OrderSupport.getOrderSrcs;

	exports.getOrderSrcs = getOrderSrcs;
	//该方法也在其他业务模块中被调用
	var GOT_DELIVERY_STATIONS = 'GOT_DELIVERY_STATIONS';
	exports.GOT_DELIVERY_STATIONS = GOT_DELIVERY_STATIONS;

	function getDeliveryStations() {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].stations.toString(), null, GOT_DELIVERY_STATIONS);
	}

	var AUTO_GOT_DELIVERY_STATIONS = 'AUTO_GOT_DELIVERY_STATIONS';
	exports.AUTO_GOT_DELIVERY_STATIONS = AUTO_GOT_DELIVERY_STATIONS;

	function autoGetDeliveryStations(data) {
	  return (0, _utilsRequest.POST)(_configUrl2['default'].auto_loc.toString(), data, AUTO_GOT_DELIVERY_STATIONS);
	}

	var GOT_PAY_MODES = OrderSupport.GOT_PAY_MODES;
	exports.GOT_PAY_MODES = GOT_PAY_MODES;
	var getPayModes = OrderSupport.getPayModes;

	exports.getPayModes = getPayModes;
	var GET_HISTORY_ORDERS = 'GET_HISTORY_ORDERS';
	exports.GET_HISTORY_ORDERS = GET_HISTORY_ORDERS;

	function getHistoryOrders(data) {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].orders.toString(), data, GET_HISTORY_ORDERS);
	  /*
	    return TEST({
	      total: 1,
	      page_no: 0,
	      list: [{
	        'cancel_reason':  '取消理由xxxx',    
	        'city':  '城市xxx',    
	        'created_by':  '创建人xx',   
	        'created_time':  '下单时间xx',  
	        'delivery_name': '配送站名称xx',   
	        'delivery_time': '配送时间xx',    
	        'delivery_type': '配送方式xx',    
	        'discount_price':  '实际售价xx',    
	        'is_deal': '0',    
	        'is_submit': '1',    
	        'merchant_id': '22222',   
	        'order_id':  '11111',   
	        'original_price':  '4444',    
	        'owner_mobile':  '下单人手机xx',   
	        'owner_name':  '下单人姓名xx',   
	        'pay_status':  'PAYED',    
	        'recipient_address': '收货人地址xxxx',   
	        'recipient_mobile':  '收货人手机xxx',   
	        'recipient_name':  '收货人姓名xxx',   
	        'remarks': '备注xxxx',    
	        'src_name':  '订单来源xxx',    
	        'status':  '订单状态xxx',    
	        'updated_by':  '最后操作人xxx',   
	        'updated_date':  '最后操作时间eeee',
	      }]
	    }, GET_HISTORY_ORDERS);
	  */
	}

	var CHECK_HISTORY_ORDER = 'CHECK_HISTORY_ORDER';
	exports.CHECK_HISTORY_ORDER = CHECK_HISTORY_ORDER;
	var GET_HISTORY_ORDER_DETAIL_PRODUCTS = 'GET_HISTORY_ORDER_DETAIL_PRODUCTS';
	exports.GET_HISTORY_ORDER_DETAIL_PRODUCTS = GET_HISTORY_ORDER_DETAIL_PRODUCTS;

	function checkHistoryOrder(id) {
	  return function (dispatch) {
	    dispatch({
	      type: CHECK_HISTORY_ORDER,
	      active_order_id: id
	    });
	    return (0, _utilsRequest.GET)(_configUrl2['default'].order_detail.toString(id), null, GET_HISTORY_ORDER_DETAIL_PRODUCTS)(dispatch);
	  };
	}

	function checkGroupbuyPsd(data) {
	  return function (dispatch) {
	    return (0, _utilsRequest.post)(_configUrl2['default'].check_groupbuy_psd.toString(), data);
	  };
	  // return test(true); //模拟成功
	}

	function _getFormData(form_data, getState) {
	  var products = getState().orderManageForm.products.confirm_list;
	  var total_amount = 0,
	      total_original_price = 0,
	      total_discount_price = 0;
	  var gretting_card = [];
	  products = (0, _clone2['default'])(products);
	  products.forEach(function (n) {
	    n.discount_price *= 100;
	    n.amount *= 100;

	    total_amount += n.amount;
	    total_original_price += n.original_price * n.num;
	    total_discount_price += n.discount_price;
	    gretting_card.push(n.gretting_card);
	  });
	  return _extends({}, form_data, {
	    total_amount: total_amount,
	    total_original_price: total_original_price,
	    total_discount_price: total_discount_price,
	    products: products,
	    gretting_card: gretting_card.join('|')
	  });
	}

	var SAVE_ORDER_INFO_ING = 'SAVE_ORDER_INFO_ING';
	exports.SAVE_ORDER_INFO_ING = SAVE_ORDER_INFO_ING;
	var SAVE_ORDER_INFO_SUCCESS = 'SAVE_ORDER_INFO_SUCCESS';
	exports.SAVE_ORDER_INFO_SUCCESS = SAVE_ORDER_INFO_SUCCESS;
	var SAVE_ORDER_INFO_FAIL = 'SAVE_ORDER_INFO_FAIL';

	exports.SAVE_ORDER_INFO_FAIL = SAVE_ORDER_INFO_FAIL;

	function createOrder(form_data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return function (dispatch, getState) {
	    var data = _getFormData(form_data, getState);
	    dispatch({
	      type: SAVE_ORDER_INFO_ING
	    });
	    return (0, _utilsRequest.post)(_configUrl2['default'].order_add.toString(), data).done(function () {
	      dispatch({
	        type: SAVE_ORDER_INFO_SUCCESS
	      });
	    }).fail(function () {
	      dispatch({
	        type: SAVE_ORDER_INFO_FAIL
	      });
	    });
	  };
	  // return TEST(null, [
	  //   {type: SAVE_ORDER_INFO_ING},  //立即派发
	  //   {type: SAVE_ORDER_INFO_SUCCESS}   //2000毫秒后派发
	  // ], 2000);
	}

	//保存和创建的逻辑大体一致，就是url不同

	function saveOrder(form_data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return function (dispatch, getState) {
	    var data = _getFormData(form_data, getState);
	    dispatch({
	      type: SAVE_ORDER_INFO_ING
	    });
	    if (!form_data.order_id) {
	      throw Error('order_id should not be undefined');
	    }
	    return (0, _utilsRequest.put)(_configUrl2['default'].save_order.toString(form_data.order_id), data).done(function () {
	      dispatch({
	        type: SAVE_ORDER_INFO_SUCCESS
	      });
	    }).fail(function () {
	      dispatch({
	        type: SAVE_ORDER_INFO_FAIL
	      });
	    });
	  };
	}

	var GOT_ORDER_BY_ID = 'GOT_ORDER_BY_ID';
	exports.GOT_ORDER_BY_ID = GOT_ORDER_BY_ID;

	function getOrderById(id) {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].order_detail.toString(id), null, GOT_ORDER_BY_ID);
	  // return TEST({
	  //   type: GOT_ORDER_BY_ID,
	  //   data: {
	  //     "pay_status": "PAYED",
	  //     "owner_mobile": "13399998888",
	  //     "recipient_mobile": "13399998888",
	  //     "invoice": 0,
	  //     "delivery_id": 1,
	  //     "owner_name": "www",
	  //     "delivery_type": "DELIVERY",
	  //     "recipient_address": "xxxx街",
	  //     "remarks": "ceec",
	  //     "amount": 180,
	  //     "src_id": "2",
	  //     "regionalism_id": "110101",
	  //     //todo{
	  //     "province_id": "110000",
	  //     "province_name": "北京市",
	  //     "city_id": "110100",
	  //     "city_name": "北京市",
	  //     "regionalism_name": "东城区",
	  //     //}

	  //     "recipient_landmark": "xxxx建筑物",
	  //     "delivery_time": "2015-12-24 13:00～14:00",
	  //     "recipient_name": "www",
	  //     "pay_modes_id": "2",
	  //     "products": [{
	  //       "website": "website2",
	  //       "name": "zhang",
	  //       "size": "zhang1",
	  //       "sku_id": 22,
	  //       "discount_price": 180,
	  //       "product_id": 1,
	  //       "num": 1,
	  //       "original_price": 20000,
	  //       "is_local_site": "0",
	  //       "is_delivery": "1",
	  //       "category_name": "类型1",
	  //       "choco_board": "巧克力牌xxx",
	  //       "greeting_card": "祝福语xxx",
	  //       "atlas": true,
	  //       "custom_name": "自定义名称xxx",
	  //       "custom_desc": "自定义描述xxx",
	  //       "amount": 180
	  //     }]
	  //   }
	  // });
	}

	function copyOrder() {
	  return function (dispatch, getState) {
	    var new_order = getState().orderManageForm.mainForm.data;
	    new_order.products = [];
	    return (0, _actionsForm.initForm)('add_order', new_order)(dispatch); //注意这种action间的相互引用
	  };
	}

	var GOT_COPY_ORDER_BY_ID = 'GOT_COPY_ORDER_BY_ID';
	exports.GOT_COPY_ORDER_BY_ID = GOT_COPY_ORDER_BY_ID;

	function getCopyOrderById(id) {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].order_detail.toString(id), null, GOT_COPY_ORDER_BY_ID);
	}

	var SUBMIT_ING = 'SUBMIT_ING';
	exports.SUBMIT_ING = SUBMIT_ING;
	var SUBMIT_COMPLETE = 'SUBMIT_COMPLETE';

	exports.SUBMIT_COMPLETE = SUBMIT_COMPLETE;

	function submitOrder(form_data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return function (dispatch, getState) {
	    var data = _getFormData(form_data, getState);
	    dispatch({
	      type: SUBMIT_ING
	    });
	    if (!form_data.order_id) {
	      throw Error('order_id should not be undefined');
	    }
	    return (0, _utilsRequest.put)(_configUrl2['default'].submit_order.toString(form_data.order_id), data).always(function () {
	      dispatch({
	        type: SUBMIT_COMPLETE
	      });
	    });
	  };
	}

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.updateAddOrderForm = updateAddOrderForm;
	exports.triggerFormUpdate = triggerFormUpdate;
	exports.resetFormUpdate = resetFormUpdate;
	exports.initForm = initForm;
	exports.destroyForm = destroyForm;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _reduxForm = __webpack_require__(242);

	// import * as RF from 'redux-form';

	var _configFormFields = __webpack_require__(294);

	var _configFormFields2 = _interopRequireDefault(_configFormFields);

	//可以手动触发redux-form的plugin: reducer

	function updateAddOrderForm() {
	  return (0, _reduxForm.focus)('add_order', 'src_id'); //form_name, field_name
	}

	//手动更改指定form的表单值

	function triggerFormUpdate(form_name, field_name, field_value) {
	  return (0, _reduxForm.blur)(form_name, field_name, field_value);
	}

	function resetFormUpdate(form_name, field_name, field_value) {
	  return (0, _reduxForm.reset)(form_name, field_name, -1);
	}

	function initForm(form_name, data) {
	  return function (dispatch) {
	    dispatch(destroyForm(form_name));
	    dispatch((0, _reduxForm.initialize)(form_name, data, _configFormFields2['default'][form_name]));
	  };
	}

	function destroyForm(form_name) {
	  return (0, _reduxForm.destroy)(form_name);
	}

/***/ },
/* 294 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = {
	  add_order: ['delivery_type', 'owner_name', 'owner_mobile', 'recipient_name', //下单人姓名
	  'recipient_mobile', 'recipient_address', //收货人详细地址----》送货上门
	  'recipient_shop_address', //收货人详细地址----》门店自提(实际上是门店地址)
	  'province_id', 'city_id', 'regionalism_id', //分店ID ----》自取
	  'recipient_landmark', //标志性建筑
	  'delivery_id', //配送中心
	  'src_id', //订单来源
	  'pay_modes_id', 'coupon', //团购密码
	  'pay_status',
	  // 'delivery_time',
	  'delivery_date', 'delivery_hours', 'remarks', 'invoice', '_update']
	};
	module.exports = exports['default'];
	//业务无关的私有field，用于触发整个form的更新

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var clone = (function() {
	'use strict';

	/**
	 * Clones (copies) an Object using deep copying.
	 *
	 * This function supports circular references by default, but if you are certain
	 * there are no circular references in your object, you can save some CPU time
	 * by calling clone(obj, false).
	 *
	 * Caution: if `circular` is false and `parent` contains circular references,
	 * your program may enter an infinite loop and crash.
	 *
	 * @param `parent` - the object to be cloned
	 * @param `circular` - set to true if the object to be cloned may contain
	 *    circular references. (optional - true by default)
	 * @param `depth` - set to a number if the object is only to be cloned to
	 *    a particular depth. (optional - defaults to Infinity)
	 * @param `prototype` - sets the prototype to be used when cloning an object.
	 *    (optional - defaults to parent prototype).
	*/
	function clone(parent, circular, depth, prototype) {
	  var filter;
	  if (typeof circular === 'object') {
	    depth = circular.depth;
	    prototype = circular.prototype;
	    filter = circular.filter;
	    circular = circular.circular
	  }
	  // maintain two arrays for circular references, where corresponding parents
	  // and children have the same index
	  var allParents = [];
	  var allChildren = [];

	  var useBuffer = typeof Buffer != 'undefined';

	  if (typeof circular == 'undefined')
	    circular = true;

	  if (typeof depth == 'undefined')
	    depth = Infinity;

	  // recurse this function so we don't reset allParents and allChildren
	  function _clone(parent, depth) {
	    // cloning null always returns null
	    if (parent === null)
	      return null;

	    if (depth == 0)
	      return parent;

	    var child;
	    var proto;
	    if (typeof parent != 'object') {
	      return parent;
	    }

	    if (clone.__isArray(parent)) {
	      child = [];
	    } else if (clone.__isRegExp(parent)) {
	      child = new RegExp(parent.source, __getRegExpFlags(parent));
	      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
	    } else if (clone.__isDate(parent)) {
	      child = new Date(parent.getTime());
	    } else if (useBuffer && Buffer.isBuffer(parent)) {
	      child = new Buffer(parent.length);
	      parent.copy(child);
	      return child;
	    } else {
	      if (typeof prototype == 'undefined') {
	        proto = Object.getPrototypeOf(parent);
	        child = Object.create(proto);
	      }
	      else {
	        child = Object.create(prototype);
	        proto = prototype;
	      }
	    }

	    if (circular) {
	      var index = allParents.indexOf(parent);

	      if (index != -1) {
	        return allChildren[index];
	      }
	      allParents.push(parent);
	      allChildren.push(child);
	    }

	    for (var i in parent) {
	      var attrs;
	      if (proto) {
	        attrs = Object.getOwnPropertyDescriptor(proto, i);
	      }

	      if (attrs && attrs.set == null) {
	        continue;
	      }
	      child[i] = _clone(parent[i], depth - 1);
	    }

	    return child;
	  }

	  return _clone(parent, depth);
	}

	/**
	 * Simple flat clone using prototype, accepts only objects, usefull for property
	 * override on FLAT configuration object (no nested props).
	 *
	 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
	 * works.
	 */
	clone.clonePrototype = function clonePrototype(parent) {
	  if (parent === null)
	    return null;

	  var c = function () {};
	  c.prototype = parent;
	  return new c();
	};

	// private utility functions

	function __objToStr(o) {
	  return Object.prototype.toString.call(o);
	};
	clone.__objToStr = __objToStr;

	function __isDate(o) {
	  return typeof o === 'object' && __objToStr(o) === '[object Date]';
	};
	clone.__isDate = __isDate;

	function __isArray(o) {
	  return typeof o === 'object' && __objToStr(o) === '[object Array]';
	};
	clone.__isArray = __isArray;

	function __isRegExp(o) {
	  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
	};
	clone.__isRegExp = __isRegExp;

	function __getRegExpFlags(re) {
	  var flags = '';
	  if (re.global) flags += 'g';
	  if (re.ignoreCase) flags += 'i';
	  if (re.multiline) flags += 'm';
	  return flags;
	};
	clone.__getRegExpFlags = __getRegExpFlags;

	return clone;
	})();

	if (typeof module === 'object' && module.exports) {
	  module.exports = clone;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(296).Buffer))

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	var base64 = __webpack_require__(297)
	var ieee754 = __webpack_require__(298)
	var isArray = __webpack_require__(299)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	Buffer.poolSize = 8192 // not used by this implementation

	var rootParent = {}

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
	 *     on objects.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	function typedArraySupport () {
	  function Bar () {}
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    arr.constructor = Bar
	    return arr.foo() === 42 && // typed array instances can be augmented
	        arr.constructor === Bar && // constructor can be set
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	/**
	 * Class: Buffer
	 * =============
	 *
	 * The Buffer constructor returns instances of `Uint8Array` that are augmented
	 * with function properties for all the node `Buffer` API functions. We use
	 * `Uint8Array` so that square bracket notation works as expected -- it returns
	 * a single octet.
	 *
	 * By augmenting the instances, we can avoid modifying the `Uint8Array`
	 * prototype.
	 */
	function Buffer (arg) {
	  if (!(this instanceof Buffer)) {
	    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
	    if (arguments.length > 1) return new Buffer(arg, arguments[1])
	    return new Buffer(arg)
	  }

	  this.length = 0
	  this.parent = undefined

	  // Common case.
	  if (typeof arg === 'number') {
	    return fromNumber(this, arg)
	  }

	  // Slightly less common case.
	  if (typeof arg === 'string') {
	    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
	  }

	  // Unusual.
	  return fromObject(this, arg)
	}

	function fromNumber (that, length) {
	  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < length; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

	  // Assumption: byteLength() return value is always < kMaxLength.
	  var length = byteLength(string, encoding) | 0
	  that = allocate(that, length)

	  that.write(string, encoding)
	  return that
	}

	function fromObject (that, object) {
	  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

	  if (isArray(object)) return fromArray(that, object)

	  if (object == null) {
	    throw new TypeError('must start with number, buffer, array or string')
	  }

	  if (typeof ArrayBuffer !== 'undefined') {
	    if (object.buffer instanceof ArrayBuffer) {
	      return fromTypedArray(that, object)
	    }
	    if (object instanceof ArrayBuffer) {
	      return fromArrayBuffer(that, object)
	    }
	  }

	  if (object.length) return fromArrayLike(that, object)

	  return fromJsonObject(that, object)
	}

	function fromBuffer (that, buffer) {
	  var length = checked(buffer.length) | 0
	  that = allocate(that, length)
	  buffer.copy(that, 0, 0, length)
	  return that
	}

	function fromArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	// Duplicate of fromArray() to keep fromArray() monomorphic.
	function fromTypedArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  // Truncating the elements is probably not what people expect from typed
	  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
	  // of the old Buffer constructor.
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    array.byteLength
	    that = Buffer._augment(new Uint8Array(array))
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromTypedArray(that, new Uint8Array(array))
	  }
	  return that
	}

	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
	// Returns a zero-length buffer for inputs that don't conform to the spec.
	function fromJsonObject (that, object) {
	  var array
	  var length = 0

	  if (object.type === 'Buffer' && isArray(object.data)) {
	    array = object.data
	    length = checked(array.length) | 0
	  }
	  that = allocate(that, length)

	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	}

	function allocate (that, length) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = Buffer._augment(new Uint8Array(length))
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that.length = length
	    that._isBuffer = true
	  }

	  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
	  if (fromPool) that.parent = rootParent

	  return that
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (subject, encoding) {
	  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

	  var buf = new Buffer(subject, encoding)
	  delete buf.parent
	  return buf
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  var i = 0
	  var len = Math.min(x, y)
	  while (i < len) {
	    if (a[i] !== b[i]) break

	    ++i
	  }

	  if (i !== len) {
	    x = a[i]
	    y = b[i]
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

	  if (list.length === 0) {
	    return new Buffer(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }

	  var buf = new Buffer(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var item = list[i]
	    item.copy(buf, pos)
	    pos += item.length
	  }
	  return buf
	}

	function byteLength (string, encoding) {
	  if (typeof string !== 'string') string = '' + string

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	// pre-set for values that may exist in the future
	Buffer.prototype.length = undefined
	Buffer.prototype.parent = undefined

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  start = start | 0
	  end = end === undefined || end === Infinity ? this.length : end | 0

	  if (!encoding) encoding = 'utf8'
	  if (start < 0) start = 0
	  if (end > this.length) end = this.length
	  if (end <= start) return ''

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'binary':
	        return binarySlice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return 0
	  return Buffer.compare(this, b)
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
	  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
	  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
	  byteOffset >>= 0

	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1

	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

	  if (typeof val === 'string') {
	    if (val.length === 0) return -1 // special case: looking for empty string always fails
	    return String.prototype.indexOf.call(this, val, byteOffset)
	  }
	  if (Buffer.isBuffer(val)) {
	    return arrayIndexOf(this, val, byteOffset)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset)
	  }

	  function arrayIndexOf (arr, val, byteOffset) {
	    var foundIndex = -1
	    for (var i = 0; byteOffset + i < arr.length; i++) {
	      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
	      } else {
	        foundIndex = -1
	      }
	    }
	    return -1
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	// `get` is deprecated
	Buffer.prototype.get = function get (offset) {
	  console.log('.get() is deprecated. Access using array indexes instead.')
	  return this.readUInt8(offset)
	}

	// `set` is deprecated
	Buffer.prototype.set = function set (v, offset) {
	  console.log('.set() is deprecated. Access using array indexes instead.')
	  return this.writeUInt8(v, offset)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) throw new Error('Invalid hex string')
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    var swap = encoding
	    encoding = offset
	    offset = length | 0
	    length = swap
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'binary':
	        return binaryWrite(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = Buffer._augment(this.subarray(start, end))
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  if (newBuf.length) newBuf.parent = this.parent || this

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	  if (offset < 0) throw new RangeError('index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    target._set(this.subarray(start, start + len), targetStart)
	  }

	  return len
	}

	// fill(value, start=0, end=buffer.length)
	Buffer.prototype.fill = function fill (value, start, end) {
	  if (!value) value = 0
	  if (!start) start = 0
	  if (!end) end = this.length

	  if (end < start) throw new RangeError('end < start')

	  // Fill 0 bytes; we're done
	  if (end === start) return
	  if (this.length === 0) return

	  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
	  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

	  var i
	  if (typeof value === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = value
	    }
	  } else {
	    var bytes = utf8ToBytes(value.toString())
	    var len = bytes.length
	    for (i = start; i < end; i++) {
	      this[i] = bytes[i % len]
	    }
	  }

	  return this
	}

	/**
	 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
	 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
	 */
	Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
	  if (typeof Uint8Array !== 'undefined') {
	    if (Buffer.TYPED_ARRAY_SUPPORT) {
	      return (new Buffer(this)).buffer
	    } else {
	      var buf = new Uint8Array(this.length)
	      for (var i = 0, len = buf.length; i < len; i += 1) {
	        buf[i] = this[i]
	      }
	      return buf.buffer
	    }
	  } else {
	    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
	  }
	}

	// HELPER FUNCTIONS
	// ================

	var BP = Buffer.prototype

	/**
	 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
	 */
	Buffer._augment = function _augment (arr) {
	  arr.constructor = Buffer
	  arr._isBuffer = true

	  // save reference to original Uint8Array set method before overwriting
	  arr._set = arr.set

	  // deprecated
	  arr.get = BP.get
	  arr.set = BP.set

	  arr.write = BP.write
	  arr.toString = BP.toString
	  arr.toLocaleString = BP.toString
	  arr.toJSON = BP.toJSON
	  arr.equals = BP.equals
	  arr.compare = BP.compare
	  arr.indexOf = BP.indexOf
	  arr.copy = BP.copy
	  arr.slice = BP.slice
	  arr.readUIntLE = BP.readUIntLE
	  arr.readUIntBE = BP.readUIntBE
	  arr.readUInt8 = BP.readUInt8
	  arr.readUInt16LE = BP.readUInt16LE
	  arr.readUInt16BE = BP.readUInt16BE
	  arr.readUInt32LE = BP.readUInt32LE
	  arr.readUInt32BE = BP.readUInt32BE
	  arr.readIntLE = BP.readIntLE
	  arr.readIntBE = BP.readIntBE
	  arr.readInt8 = BP.readInt8
	  arr.readInt16LE = BP.readInt16LE
	  arr.readInt16BE = BP.readInt16BE
	  arr.readInt32LE = BP.readInt32LE
	  arr.readInt32BE = BP.readInt32BE
	  arr.readFloatLE = BP.readFloatLE
	  arr.readFloatBE = BP.readFloatBE
	  arr.readDoubleLE = BP.readDoubleLE
	  arr.readDoubleBE = BP.readDoubleBE
	  arr.writeUInt8 = BP.writeUInt8
	  arr.writeUIntLE = BP.writeUIntLE
	  arr.writeUIntBE = BP.writeUIntBE
	  arr.writeUInt16LE = BP.writeUInt16LE
	  arr.writeUInt16BE = BP.writeUInt16BE
	  arr.writeUInt32LE = BP.writeUInt32LE
	  arr.writeUInt32BE = BP.writeUInt32BE
	  arr.writeIntLE = BP.writeIntLE
	  arr.writeIntBE = BP.writeIntBE
	  arr.writeInt8 = BP.writeInt8
	  arr.writeInt16LE = BP.writeInt16LE
	  arr.writeInt16BE = BP.writeInt16BE
	  arr.writeInt32LE = BP.writeInt32LE
	  arr.writeInt32BE = BP.writeInt32BE
	  arr.writeFloatLE = BP.writeFloatLE
	  arr.writeFloatBE = BP.writeFloatBE
	  arr.writeDoubleLE = BP.writeDoubleLE
	  arr.writeDoubleBE = BP.writeDoubleBE
	  arr.fill = BP.fill
	  arr.inspect = BP.inspect
	  arr.toArrayBuffer = BP.toArrayBuffer

	  return arr
	}

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(296).Buffer, (function() { return this; }())))

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	;(function (exports) {
		'use strict';

	  var Arr = (typeof Uint8Array !== 'undefined')
	    ? Uint8Array
	    : Array

		var PLUS   = '+'.charCodeAt(0)
		var SLASH  = '/'.charCodeAt(0)
		var NUMBER = '0'.charCodeAt(0)
		var LOWER  = 'a'.charCodeAt(0)
		var UPPER  = 'A'.charCodeAt(0)
		var PLUS_URL_SAFE = '-'.charCodeAt(0)
		var SLASH_URL_SAFE = '_'.charCodeAt(0)

		function decode (elt) {
			var code = elt.charCodeAt(0)
			if (code === PLUS ||
			    code === PLUS_URL_SAFE)
				return 62 // '+'
			if (code === SLASH ||
			    code === SLASH_URL_SAFE)
				return 63 // '/'
			if (code < NUMBER)
				return -1 //no match
			if (code < NUMBER + 10)
				return code - NUMBER + 26 + 26
			if (code < UPPER + 26)
				return code - UPPER
			if (code < LOWER + 26)
				return code - LOWER + 26
		}

		function b64ToByteArray (b64) {
			var i, j, l, tmp, placeHolders, arr

			if (b64.length % 4 > 0) {
				throw new Error('Invalid string. Length must be a multiple of 4')
			}

			// the number of equal signs (place holders)
			// if there are two placeholders, than the two characters before it
			// represent one byte
			// if there is only one, then the three characters before it represent 2 bytes
			// this is just a cheap hack to not do indexOf twice
			var len = b64.length
			placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

			// base64 is 4/3 + up to two characters of the original data
			arr = new Arr(b64.length * 3 / 4 - placeHolders)

			// if there are placeholders, only get up to the last complete 4 chars
			l = placeHolders > 0 ? b64.length - 4 : b64.length

			var L = 0

			function push (v) {
				arr[L++] = v
			}

			for (i = 0, j = 0; i < l; i += 4, j += 3) {
				tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
				push((tmp & 0xFF0000) >> 16)
				push((tmp & 0xFF00) >> 8)
				push(tmp & 0xFF)
			}

			if (placeHolders === 2) {
				tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
				push(tmp & 0xFF)
			} else if (placeHolders === 1) {
				tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
				push((tmp >> 8) & 0xFF)
				push(tmp & 0xFF)
			}

			return arr
		}

		function uint8ToBase64 (uint8) {
			var i,
				extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
				output = "",
				temp, length

			function encode (num) {
				return lookup.charAt(num)
			}

			function tripletToBase64 (num) {
				return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
			}

			// go through the array every three bytes, we'll deal with trailing stuff later
			for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
				temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
				output += tripletToBase64(temp)
			}

			// pad the end with zeros, but make sure to not forget the extra bytes
			switch (extraBytes) {
				case 1:
					temp = uint8[uint8.length - 1]
					output += encode(temp >> 2)
					output += encode((temp << 4) & 0x3F)
					output += '=='
					break
				case 2:
					temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
					output += encode(temp >> 10)
					output += encode((temp >> 4) & 0x3F)
					output += encode((temp << 2) & 0x3F)
					output += '='
					break
			}

			return output
		}

		exports.toByteArray = b64ToByteArray
		exports.fromByteArray = uint8ToBase64
	}( false ? (this.base64js = {}) : exports))


/***/ },
/* 298 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 299 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * 获取订单辅助信息
	 * （考虑到重用，所以写在这里）
	 */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.getOrderSrcs = getOrderSrcs;
	exports.getPayModes = getPayModes;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var GOT_ORDER_SRCS = 'GOT_ORDER_SRCS';
	exports.GOT_ORDER_SRCS = GOT_ORDER_SRCS;

	function getOrderSrcs() {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].order_srcs.toString(), null, GOT_ORDER_SRCS);
	  // return TEST({
	  //   type: GOT_ORDER_SRCS,
	  //   data: [
	  //     {id: 1, name: 'A1', level: 1},
	  //     {id: 2, name: 'A2', level: 1},
	  //     {id: 3, name: 'A3', level: 1},
	  //     {id: 4, name: 'B1', level: 2, parent_id: 1},
	  //     {id: 5, name: 'B2', level: 2, parent_id: 2}
	  //   ]
	  // });
	}

	var GOT_PAY_MODES = 'GOT_PAY_MODES';
	exports.GOT_PAY_MODES = GOT_PAY_MODES;

	function getPayModes() {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].pay_modes.toString(), null, GOT_PAY_MODES);
	}

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsIndex = __webpack_require__(160);

	var DatePicker = _react2['default'].createClass({
	  displayName: 'DatePicker',

	  getDefaultProps: function getDefaultProps() {
	    return {
	      className: '',
	      'redux-form': null,
	      editable: false,
	      upperLimit: undefined,
	      lowerLimit: undefined
	    };
	  },
	  getInitialState: function getInitialState() {
	    var redux_form = this.props['redux-form'];
	    return {
	      date: redux_form ? redux_form.value : this.props.value
	    };
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (nextProps['redux-form'] && nextProps['redux-form'].value != undefined && nextProps['redux-form'].value != this.props['redux-form'].value) {
	      $((function () {
	        this.setState({
	          date: nextProps['redux-form'].value
	        }, function () {
	          if (_utilsIndex.form.isDate(nextProps['redux-form'].value)) this.initDatePicker().update();
	        });
	      }).bind(this));
	    } else if (nextProps.value != this.props.value) {
	      this.setState({ date: nextProps.value });
	    }
	  },
	  componentDidMount: function componentDidMount() {
	    $((function () {
	      this.initDatePicker();
	    }).bind(this));
	  },
	  initDatePicker: function initDatePicker() {
	    var $dom_date = $(this.refs.date);
	    var $date = $dom_date.data('datepicker');
	    var _props = this.props;
	    var lowerLimit = _props.lowerLimit;
	    var upperLimit = _props.upperLimit;

	    lowerLimit = new Date(lowerLimit + ' 00:00:00');
	    upperLimit = new Date(upperLimit + ' 00:00:00');

	    if (!$date) {
	      $date = $dom_date.datepicker({
	        format: 'yyyy-mm-dd',
	        onRender: (lowerLimit || upperLimit) && function (date) {
	          if (date < lowerLimit || date > upperLimit) {
	            return 'disabled';
	          }
	        }
	      }).on('changeDate', (function (e) {
	        var value = e.target.value;
	        this.props.onChange && this.props.onChange(value);
	        this.setState({ date: value }, function () {
	          // setTimeout(function(){
	          $dom_date.focus();
	          $dom_date.blur();
	          $date.data('datepicker').hide();
	          // }, 0);
	        });
	      }).bind(this)).on('click', function () {
	        $date.data('datepicker').show();
	      });
	    }
	    return $date;
	  },
	  render: function render() {
	    var redux_form = this.props['redux-form'];
	    var editable = this.props.editable;
	    var spreadProps;
	    if (redux_form) {
	      spreadProps = editable ? redux_form : _extends({}, redux_form, { onChange: function onChange() {} });
	    } else {
	      spreadProps = { onChange: editable ? this.props.onChange : function () {} };
	    }
	    //redux-from 中包含value
	    return _react2['default'].createElement(
	      'div',
	      { style: { 'display': 'inline-block' } },
	      _react2['default'].createElement('input', _extends({ ref: 'date' }, spreadProps, {
	        value: this.state.date,
	        className: 'form-control input-xs ' + this.props.className }))
	    );
	  }
	});

	exports['default'] = DatePicker;
	module.exports = exports['default'];

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var Select = React.createClass({
	  displayName: 'Select',

	  getDefaultProps: function getDefaultProps() {
	    return {
	      "default-text": '--请选择--',
	      "default-value": -1,
	      "options": [],
	      "no-default": false
	    };
	  },
	  render: function render() {
	    var list = this.props.options.map(function (n) {
	      return React.createElement(
	        'option',
	        { value: n.id, key: n.id },
	        n.text
	      );
	    });
	    var className = "form-control input-xs " + (this.props.className || '');
	    this.props = _extends({}, this.props, { className: className });
	    return React.createElement(
	      'select',
	      this.props,
	      this.props['no-default'] ? null : React.createElement(
	        'option',
	        { value: this.props['default-value'] },
	        this.props['default-text']
	      ),
	      list
	    );
	  }
	});
	module.exports = Select;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var Pagination = _react2["default"].createClass({
	    displayName: "Pagination",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            random_btn_active: true,
	            random_btn_show: true,
	            page_size: 20, //每页显示20条
	            total_count: 0,
	            page_no: 0,
	            page_num_show: 10, //分页的页码，显示10个
	            onPageChange: null,
	            no_more_code: -1 };
	    },
	    //后台返回空数据的时候，
	    //onPageChangeBefore: null
	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        if (nextProps.page_no == this.props.no_more_code) {
	            this._selectPage(math.ceil(this.props.total_count / this.props.page_size));
	        }
	    },
	    _calc_pages: function _calc_pages() {
	        var total_count = this.props.total_count;
	        var page_size = this.props.page_size;
	        var page_no = this.props.page_no;

	        if (total_count < 0 || total_count == Infinity) {
	            var total_pages = -1;
	        } else {
	            var total_pages = Math.ceil(total_count / page_size);
	        }
	        this.total_pages = total_pages;

	        //分页的分页~
	        var page_num_show = this.props.page_num_show;
	        if (total_pages == -1) {
	            //Infinity处理
	            var pagesOfpage = -1;
	        } else {
	            var pagesOfpage = Math.ceil(total_pages / page_num_show);
	        }
	        var cpageOfPage = Math.floor(page_no / page_num_show);
	        var long_prev = cpageOfPage > 0;
	        var long_next = cpageOfPage < pagesOfpage - 1 || pagesOfpage == -1;

	        var page_num_start = cpageOfPage * page_num_show;
	        if (total_pages == -1) {
	            var page_num_end = (cpageOfPage + 1) * page_num_show;
	        } else {
	            var page_num_end = Math.min((cpageOfPage + 1) * page_num_show, total_pages);
	        }

	        return {
	            "page_no": page_no,
	            "total_pages": total_pages,

	            "start": page_num_start,
	            "end": page_num_end,
	            "long_prev": long_prev,
	            "long_next": long_next
	        };
	    },
	    _selectPage: function _selectPage(page) {
	        // if (this.props.onPageChangeBefore){
	        //     this.props.onPageChangeBefore(page);
	        // }
	        if (this.props.onPageChange && this.props.page_no != page) {
	            this.props.onPageChange(page);
	            /*
	            this.setState({
	                page_no: page
	            }, function(){
	                this.props.onPageChange(page);
	            });
	            */
	        }
	    },
	    _prevPage: function _prevPage() {
	        if (this.props.page_no > 0) {
	            this._selectPage(this.props.page_no - 1);
	        }
	    },
	    _nextPage: function _nextPage() {
	        var total_pages = this.total_pages;
	        if (total_pages == -1 || this.props.page_no < total_pages - 1) {
	            this._selectPage(~ ~this.props.page_no + 1);
	        }
	    },
	    _longJumpPre: function _longJumpPre() {
	        var pn = this.props.page_num_show;
	        var page = Math.floor(this.props.page_no / pn) * pn - 1;
	        this._selectPage(page);
	    },
	    _longJumpNext: function _longJumpNext() {
	        var pn = this.props.page_num_show;
	        var page = Math.floor(this.props.page_no / pn + 1) * pn;
	        this._selectPage(page);
	    },
	    render: function render() {
	        var page_info = this._calc_pages();
	        var total_pages = page_info.total_pages;

	        var preDisabledCls = page_info.page_no > 0 ? "" : " disabled",
	            nextDisabledCls = total_pages == -1 || page_info.page_no < total_pages - 1 ? "" : " disabled";

	        var longNextStyle = { display: 'none' },
	            longPreStyle = { display: 'none' };
	        if (page_info.long_next) {
	            longNextStyle = {};
	        }
	        if (page_info.long_prev) {
	            longPreStyle = {};
	        }

	        var lastPageStyle = longNextStyle;
	        if (total_pages == -1) {
	            //无穷大的页码就不能显示最后一页按钮
	            lastPageStyle = { display: 'none' };
	        }

	        var page_numbers = [];
	        for (var n = page_info.start; n < page_info.end && this.props.random_btn_show; n++) {
	            var actived = n == page_info.page_no;
	            var classnames = 'paginate_button';
	            if (this.props.random_btn_active) {
	                classnames += actived ? ' active' : '';
	                page_numbers.push(_react2["default"].createElement(
	                    "li",
	                    { className: classnames, onClick: this._selectPage.bind(this, n), key: n },
	                    _react2["default"].createElement(
	                        "a",
	                        { href: "javascript:;" },
	                        n + 1
	                    )
	                ));
	            } else {
	                if (actived) {
	                    classnames += " active";
	                } else {
	                    classnames += " disabled";
	                }
	                page_numbers.push(_react2["default"].createElement(
	                    "li",
	                    { className: classnames, key: n },
	                    _react2["default"].createElement(
	                        "a",
	                        { href: "javascript:;" },
	                        n + 1
	                    )
	                ));
	            }
	        }

	        var firstPage, longJumpPre, lastPage, longJumpNext;
	        if (this.props.random_btn_show) {
	            //TODO random_btn_active

	            firstPage = _react2["default"].createElement(
	                "li",
	                { className: "paginate_button", style: longPreStyle, onClick: this._selectPage.bind(this, 0) },
	                _react2["default"].createElement(
	                    "a",
	                    { href: "javascript:;" },
	                    "首页"
	                )
	            );
	            longJumpPre = _react2["default"].createElement(
	                "li",
	                { className: "paginate_button", style: longPreStyle, onClick: this._longJumpPre },
	                _react2["default"].createElement(
	                    "a",
	                    { href: "javascript:;" },
	                    "..."
	                )
	            );

	            lastPage = _react2["default"].createElement(
	                "li",
	                { className: "paginate_button", style: lastPageStyle, onClick: this._selectPage.bind(this, total_pages - 1) },
	                _react2["default"].createElement(
	                    "a",
	                    { href: "javascript:;" },
	                    "末页"
	                )
	            );
	            longJumpNext = _react2["default"].createElement(
	                "li",
	                { className: "paginate_button", style: longNextStyle, onClick: this._longJumpNext },
	                _react2["default"].createElement(
	                    "a",
	                    { href: "javascript:;" },
	                    "..."
	                )
	            );
	        }

	        return _react2["default"].createElement(
	            "div",
	            { className: "clearfix" },
	            _react2["default"].createElement(
	                "ul",
	                { className: "pagination pull-right" },
	                _react2["default"].createElement(
	                    "li",
	                    { className: 'paginate_button previous' + preDisabledCls, onClick: this._prevPage },
	                    _react2["default"].createElement(
	                        "a",
	                        { href: "javascript:;" },
	                        "«"
	                    )
	                ),
	                firstPage,
	                longJumpPre,
	                page_numbers,
	                longJumpNext,
	                lastPage,
	                _react2["default"].createElement(
	                    "li",
	                    { className: 'paginate_button next' + nextDisabledCls, onClick: this._nextPage },
	                    _react2["default"].createElement(
	                        "a",
	                        { href: "javascript:;" },
	                        "»"
	                    )
	                )
	            ),
	            _react2["default"].createElement(
	                "div",
	                { style: { 'lineHeight': '31px' } },
	                '共' + this.props.total_count + '项'
	            )
	        );
	    }
	});

	exports["default"] = Pagination;
	module.exports = exports["default"];

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var Linkers = (function (_React$Component) {
	  _inherits(Linkers, _React$Component);

	  function Linkers(props) {
	    _classCallCheck(this, Linkers);

	    _get(Object.getPrototypeOf(Linkers.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      active: this.props.active
	    };
	  }

	  _createClass(Linkers, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var data = _props.data;
	      var className = _props.className;
	      var active = this.state.active;

	      var content = [];

	      for (var i = 0, len = data.length; i < len; i++) {
	        if (data[i] == active) {
	          content.push(_react2['default'].createElement(
	            'span',
	            { key: i, className: 'node active' },
	            data[i]
	          ));
	        } else {
	          content.push(_react2['default'].createElement(
	            'span',
	            { key: i, className: 'node',
	              onClick: this.onClick.bind(this, data[i]) },
	            data[i]
	          ));
	        }
	        if (i != len - 1) {
	          content.push(_react2['default'].createElement(
	            'span',
	            { key: i + 'separator' },
	            '　/　'
	          ));
	        }
	      }

	      return _react2['default'].createElement(
	        'div',
	        { className: 'line-router ' + className },
	        content
	      );
	    }
	  }, {
	    key: 'onClick',
	    value: function onClick(name) {
	      this.setState({ active: name }, function () {
	        this.props.onChange(name);
	      });
	    }
	  }]);

	  return Linkers;
	})(_react2['default'].Component);

	exports['default'] = Linkers;

	Linkers.PropTypes = {
	  data: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    name: _react.PropTypes.string.isRequired,
	    active: _react.PropTypes.string.isRequired
	  }))
	};
	module.exports = exports['default'];

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var SearchInput = (function (_React$Component) {
	  _inherits(SearchInput, _React$Component);

	  function SearchInput(props) {
	    _classCallCheck(this, SearchInput);

	    _get(Object.getPrototypeOf(SearchInput.prototype), 'constructor', this).call(this, props);
	    this.searchHandler = this.searchHandler.bind(this);
	  }

	  _createClass(SearchInput, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var className = _props.className;
	      var searching = _props.searching;
	      var size = _props.size;
	      var placeholder = _props.placeholder;
	      var searchHandler = _props.searchHandler;

	      var i_className = searching ? 'fa fa-spinner fa-spin disabled' : 'fa fa-search';
	      return _react2['default'].createElement(
	        'div',
	        { className: 'search-input ' + className },
	        _react2['default'].createElement('input', { ref: 'input',
	          className: 'form-control ' + size,
	          placeholder: placeholder,
	          onKeyDown: this.keyDownHandler.bind(this) }),
	        _react2['default'].createElement('i', { className: i_className, onClick: this.searchHandler })
	      );
	    }
	  }, {
	    key: 'keyDownHandler',
	    value: function keyDownHandler(e) {
	      //enter键
	      if (!this.props.searching && e.which == 13) {
	        this.searchHandler();
	      }
	    }
	  }, {
	    key: 'searchHandler',
	    value: function searchHandler() {
	      if (!this.props.searching) {
	        console.log('search: ' + this.refs.input.value);
	        this.props.searchHandler(this.refs.input.value);
	      }
	    }
	  }]);

	  return SearchInput;
	})(_react2['default'].Component);

	exports['default'] = SearchInput;

	SearchInput.defaultProps = {
	  className: '',
	  searching: false,
	  size: 'input-xs',
	  placeholder: '',
	  searchHandler: function searchHandler() {}
	};
	module.exports = exports['default'];

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.tableLoader = tableLoader;
	exports.normalLoader = normalLoader;
	exports.get_table_loading = get_table_loading;
	exports.get_normal_loading = get_normal_loading;
	exports.get_table_empty = get_table_empty;
	exports.get_normal_empty = get_normal_empty;
	exports.get_loading_icon = get_loading_icon;
	exports.get_empty_icon = get_empty_icon;
	exports.get_refresh_icon = get_refresh_icon;

	var React = __webpack_require__(2);

	var loading_icon = React.createElement("i", { className: "fa fa-spin fa-spinner fa-pulse fa-fw" });
	var empty_icon = "无";
	var refresh_icon = React.createElement(
	  "div",
	  { className: "box-icon", style: { borderLeft: '1px solid #dbdee0' } },
	  React.createElement("i", { className: "fa fa-spin fa-refresh", style: { color: '#888', borderLeft: 'none' } })
	);

	var StdWrap = React.createClass({
	  displayName: "StdWrap",

	  render: function render() {
	    return React.createElement(
	      "div",
	      { style: { height: "100%", width: "100%", display: "table" } },
	      React.createElement(
	        "div",
	        { style: { display: "table-cell", verticalAlign: "middle", textAlign: "center" } },
	        this.props.children
	      )
	    );
	  }
	});

	var normal_loading = function normal_loading(content) {
	  return React.createElement(
	    StdWrap,
	    null,
	    content
	  );
	};
	var table_loading = function table_loading(content) {
	  return React.createElement(
	    "tr",
	    null,
	    React.createElement(
	      "td",
	      { colSpan: "99" },
	      React.createElement(
	        StdWrap,
	        null,
	        content
	      )
	    )
	  );
	};

	function tableLoader(loading, content) {
	  return loading ? get_table_loading() : content.length ? content : get_table_empty();
	}

	function normalLoader(loading, content) {
	  return loading ? get_normal_loading() : content.length ? content : get_normal_empty();
	}

	function get_table_loading() {
	  return table_loading(loading_icon);
	}

	function get_normal_loading() {
	  return normal_loading(loading_icon);
	}

	function get_table_empty() {
	  return table_loading(empty_icon);
	}

	function get_normal_empty() {
	  return normal_loading(empty_icon);
	}

	function get_loading_icon() {
	  return loading_icon;
	}

	function get_empty_icon() {
	  return empty_icon;
	}

	function get_refresh_icon() {
	  return refresh_icon;
	}

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var StdModal = (function (_Component) {
	  _inherits(StdModal, _Component);

	  function StdModal(props) {
	    _classCallCheck(this, StdModal);

	    _get(Object.getPrototypeOf(StdModal.prototype), "constructor", this).call(this, props);
	    this.show = this.show.bind(this);
	    this.hide = this.hide.bind(this);
	  }

	  _createClass(StdModal, [{
	    key: "render",
	    value: function render() {
	      var _props = this.props;
	      var size = _props.size;
	      var title = _props.title;
	      var submitting = _props.submitting;
	      var loading = _props.loading;
	      var disabled = _props.disabled;
	      var onConfirm = _props.onConfirm;
	      var footer = _props.footer;

	      return _react2["default"].createElement(
	        "div",
	        { ref: "__modal", "aria-hidden": "false", "aria-labelledby": "myModalLabel", role: "dialog", className: "modal fade" },
	        _react2["default"].createElement("div", { className: "modal-backdrop fade" }),
	        _react2["default"].createElement(
	          "div",
	          { className: "modal-dialog modal-" + size },
	          _react2["default"].createElement(
	            "div",
	            { className: "modal-content" },
	            _react2["default"].createElement(
	              "div",
	              { className: "modal-header" },
	              _react2["default"].createElement(
	                "button",
	                { "aria-hidden": "true", onClick: this.hide, "data-dismiss": "modal", className: "close", type: "button" },
	                "×"
	              ),
	              _react2["default"].createElement(
	                "h4",
	                { className: "modal-title" },
	                title
	              )
	            ),
	            _react2["default"].createElement(
	              "div",
	              { className: "modal-body" },
	              loading && _react2["default"].createElement(
	                "div",
	                { className: "loading-wrap text-center" },
	                _react2["default"].createElement("i", { className: "fa fa-spin fa-lg fa-spinner" })
	              ),
	              this.props.children
	            ),
	            footer ? _react2["default"].createElement(
	              "div",
	              { className: "modal-footer" },
	              _react2["default"].createElement(
	                "button",
	                { onClick: this.hide, type: "button", className: "btn btn-sm btn-default", "data-dismiss": "modal" },
	                "取消"
	              ),
	              _react2["default"].createElement(
	                "button",
	                {
	                  onClick: onConfirm,
	                  disabled: submitting || loading || disabled,
	                  "data-submitting": submitting, type: "button", className: "btn btn-sm btn-theme" },
	                "确定"
	              )
	            ) : null
	          )
	        )
	      );
	    }
	  }, {
	    key: "show",
	    value: function show(callback) {
	      $(this.refs.__modal).modal('show').on('shown.bs.modal', callback);
	    }
	  }, {
	    key: "hide",
	    value: function hide() {
	      if (this.props.submitting) {
	        return;
	      }
	      this.props.onCancel();
	      $(this.refs.__modal).modal('hide');
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      $(this.refs.__modal).off('shown.bs.modal');
	    }
	  }]);

	  return StdModal;
	})(_react.Component);

	exports["default"] = StdModal;

	StdModal.PropTypes = {
	  title: _react.PropTypes.any.isRequired
	};

	StdModal.defaultProps = {
	  size: '', // lg
	  title: 'TODO',
	  submitting: false,
	  onConfirm: function onConfirm() {},
	  onCancel: function onCancel() {}, //modal关闭前需执行的callback
	  footer: true };
	module.exports = exports["default"];
	//是否需要 modal-footer

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = RecipientInfo;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	//收货人信息

	function RecipientInfo(props) {
	  var data = props.data;
	  return _react2["default"].createElement(
	    "td",
	    { className: "text-left" },
	    _react2["default"].createElement(
	      "div",
	      { className: "address-detail-td" },
	      _react2["default"].createElement(
	        "table",
	        { className: "no-padding" },
	        _react2["default"].createElement(
	          "tbody",
	          null,
	          _react2["default"].createElement(
	            "tr",
	            null,
	            _react2["default"].createElement(
	              "td",
	              { className: "nowrap" },
	              "姓名："
	            ),
	            _react2["default"].createElement(
	              "td",
	              null,
	              data.recipient_name
	            )
	          ),
	          _react2["default"].createElement(
	            "tr",
	            null,
	            _react2["default"].createElement(
	              "td",
	              { className: "nowrap" },
	              "电话："
	            ),
	            _react2["default"].createElement(
	              "td",
	              null,
	              data.recipient_mobile
	            )
	          ),
	          _react2["default"].createElement(
	            "tr",
	            null,
	            _react2["default"].createElement(
	              "td",
	              { className: "nowrap v-top" },
	              "地址："
	            ),
	            _react2["default"].createElement(
	              "td",
	              null,
	              data.recipient_address
	            )
	          ),
	          _react2["default"].createElement(
	            "tr",
	            null,
	            _react2["default"].createElement(
	              "td",
	              { className: "nowrap" },
	              "建筑："
	            ),
	            _react2["default"].createElement(
	              "td",
	              null,
	              data.recipient_landmark
	            )
	          )
	        )
	      )
	    )
	  );
	}

	module.exports = exports["default"];

/***/ },
/* 309 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = LazyLoad;
	var root = window.xfxb.root;
	var config = {
	  noty: {
	    css: '/plugins/animate/animate.min.css',
	    js: root + 'lib/jquery.noty.packaged.min.js'
	  },
	  chinese_py: {
	    js: root + 'lib/chinese_py.min.js'
	  },
	  autocomplete: {
	    css: '/plugins/jquery-ui/jquery-ui.css',
	    js: '/plugins/jquery-ui/autocomplete.js'
	  }
	};
	var load_map = {};

	function LazyLoad(name, callback) {
	  $(function () {
	    var plugin = config[name];
	    if (plugin) {
	      if (!load_map[name]) {
	        setTimeout(function () {
	          if (plugin.css) {
	            var link = document.createElement("link");
	            link.rel = "stylesheet";
	            link.href = plugin.css;
	            document.head.appendChild(link);
	          }
	          if (plugin.js) {
	            var sc = document.createElement("script");
	            sc.type = "text\/javascript";
	            sc.src = plugin.js;
	            sc.onload = callback;
	            document.body.appendChild(sc);
	          }
	          load_map[name] = 1; //已加载过
	        }, 0);
	      }
	    } else {
	      console.error('lazy load "' + name + '" fail');
	    }
	  });
	}

	window.LazyLoad = LazyLoad;
	module.exports = exports['default'];

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = autoMatchDeliveryStations;
	exports.createMap = createMap;
	exports.autoMatch = autoMatch;
	exports.autoMatchSuccess = autoMatchSuccess;
	exports.autoMatchFail = autoMatchFail;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsMyMap = __webpack_require__(311);

	var _utilsMyMap2 = _interopRequireDefault(_utilsMyMap);

	var _reactDom = __webpack_require__(154);

	var _configAppConfig = __webpack_require__(157);

	var _utilsPromise = __webpack_require__(238);

	var _utilsPromise2 = _interopRequireDefault(_utilsPromise);

	var _utilsIndex = __webpack_require__(160);

	var _actionsForm = __webpack_require__(293);

	//完整封装

	function autoMatchDeliveryStations(success_cb, fail_cb) {
	  var self = this;

	  createMap(self);

	  $(this.refs.recipient_address).on('blur', function (e) {
	    var detail = e.target.value;
	    if (detail) {
	      var province = self.findSelectedOptionText('province');
	      var city = self.findSelectedOptionText('city');
	      var district = self.findSelectedOptionText('district');
	      var default_text = self.refs.province.props['default-text'];
	      if (province != default_text && city != default_text && district != default_text) {
	        autoMatch.call(self, city, district + detail).done(success_cb).fail(fail_cb);
	      }
	    }
	  });
	}

	//step: 1

	function createMap(t) {
	  //初始化地图
	  _utilsMyMap2['default'].create(function (map) {
	    t._bmap = map;
	  });
	}

	//step: 2

	function autoMatch(city, address) {
	  var self = this;
	  var autoGetDeliveryStations = this.props.actions.autoGetDeliveryStations;

	  if (!city || !address) {
	    (0, _utilsIndex.Noty)('error', '地址数据有误');
	  }

	  return new _utilsPromise2['default'](function (resolve, reject) {
	    if (BMap) {
	      var map = self._bmap;
	      map.centerAndZoom(city);
	      var localSearch = new BMap.LocalSearch(map);
	      localSearch.setSearchCompleteCallback(function (searchResult) {
	        var poi = searchResult && searchResult.getPoi(0);
	        if (poi) {
	          console.log(poi.point.lng + "," + poi.point.lat);
	          autoGetDeliveryStations({
	            lng: poi.point.lng,
	            lat: poi.point.lat
	          }).done(function (data) {
	            setTimeout(function () {
	              if (data && data.delivery_id) {
	                resolve(data.delivery_id); //成功，且有数据
	              } else {
	                  reject('服务器异常');
	                }
	            }, 0);
	          }).fail(function (msg, code) {
	            setTimeout(function () {
	              if (code && code == '3001') {
	                reject(); //成功，但没有数据
	              } else {
	                  reject('自动检索配送中心异常，请重试');
	                }
	            }, 0);
	          });
	        } else {
	          reject();
	        }
	      });
	      localSearch.search(address);
	    } else {
	      reject('地图服务加载失败，请稍后再试');
	    }
	  }).done(autoMatchSuccess.bind(this)).fail(autoMatchFail.bind(this)).done(addEffect.bind(this, 'alert-success')).fail(addEffect.bind(this, 'alert-danger'));
	}

	function addEffect(animate_name) {
	  var $dc = $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).removeClass('alert-success alert-danger').addClass(animate_name);
	  // setTimeout(function(){
	  //   $dc.removeClass(animate_name);
	  // }, 1000);
	}

	function autoMatchSuccess() {
	  this.setState({ auto_match_delivery_center: true, auto_match_msg: '已成功匹配！' });
	}

	function autoMatchFail(msg) {
	  this.setState({ auto_match_delivery_center: false, auto_match_msg: msg || '无法准确定位配送中心，请与客户联系后手动选择！' });
	}

/***/ },
/* 311 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	var MyMap = function MyMap() {
	  this.callback = null;
	  this.d = $.Deferred();
	  this.map = null;
	  this.init_flag = 0;
	};

	MyMap.prototype._initialize = function () {
	  var container = document.createElement('div');
	  container.style.display = 'none';
	  var id = 'bmap' + new Date().getTime();
	  container.setAttribute('id', id);
	  document.body.appendChild(container);
	  this.map = new BMap.Map(id);
	  this.d.resolve(this.map);
	};

	MyMap.prototype.create = function (callback) {
	  if (!this.init_flag) {
	    this.init_flag = 1;
	    window._bmap_callback = this._initialize.bind(this);

	    var script = document.createElement("script");
	    script.src = "http://api.map.baidu.com/api?v=2.0&ak=dxF5GZW6CHlR4GCQ9kKynOcc&callback=_bmap_callback"; //此为v2.0版本的引用方式 
	    // http://api.map.baidu.com/api?v=1.4&ak=您的密钥&callback=initialize"; //此为v1.4版本及以前版本的引用方式 
	    document.body.appendChild(script);
	  }
	  this.d.done(callback);
	};

	exports['default'] = new MyMap();
	module.exports = exports['default'];

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function ProductRow(product) {
	  return _react2["default"].createElement(
	    "tr",
	    { key: product.sku_id },
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.name
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      "￥",
	      product.original_price / 100
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.size
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.num
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      "￥",
	      product.discount_price / 100
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.choco_board
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.greeting_card
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.atlas
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.custom_name
	    ),
	    _react2["default"].createElement(
	      "td",
	      null,
	      product.custom_desc
	    )
	  );
	}

	var OrderProductsDetail = (function (_Component) {
	  _inherits(OrderProductsDetail, _Component);

	  function OrderProductsDetail() {
	    _classCallCheck(this, OrderProductsDetail);

	    _get(Object.getPrototypeOf(OrderProductsDetail.prototype), "constructor", this).apply(this, arguments);
	  }

	  _createClass(OrderProductsDetail, [{
	    key: "render",
	    value: function render() {
	      var products = this.props.products.map(function (n) {
	        return ProductRow(n);
	      });
	      return _react2["default"].createElement(
	        "div",
	        { className: "table-responsive" },
	        _react2["default"].createElement(
	          "table",
	          { className: "table text-center" },
	          _react2["default"].createElement(
	            "thead",
	            null,
	            _react2["default"].createElement(
	              "tr",
	              null,
	              _react2["default"].createElement(
	                "th",
	                null,
	                "产品名称"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "原价"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "规格"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "数量"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "实际售价"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "巧克力牌"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "祝福贺卡"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "产品图册"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "自由拼名称"
	              ),
	              _react2["default"].createElement(
	                "th",
	                null,
	                "自由拼描述"
	              )
	            )
	          ),
	          _react2["default"].createElement(
	            "tbody",
	            null,
	            products
	          )
	        )
	      );
	    }
	  }]);

	  return OrderProductsDetail;
	})(_react.Component);

	exports["default"] = OrderProductsDetail;

	OrderProductsDetail.PropTypes = {
	  products: _react.PropTypes.array.isRequired
	};
	module.exports = exports["default"];

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _configAppConfig = __webpack_require__(157);

	var _commonLoading = __webpack_require__(306);

	var _reactDom = __webpack_require__(154);

	var DetailModal = (function (_Component) {
	  _inherits(DetailModal, _Component);

	  function DetailModal(props) {
	    _classCallCheck(this, DetailModal);

	    _get(Object.getPrototypeOf(DetailModal.prototype), 'constructor', this).call(this, props);
	    this.show = this.show.bind(this);
	    this.hide = this.hide.bind(this);
	  }

	  _createClass(DetailModal, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var data = _props.data;
	      var _props$data$products = _props.data.products;
	      var products = _props$data$products === undefined ? [] : _props$data$products;

	      var products = products.map(function (n) {
	        return _react2['default'].createElement(
	          'tr',
	          { key: n.sku_id },
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.name
	          ),
	          _react2['default'].createElement(
	            'td',
	            { className: 'text-left' },
	            '规格：',
	            n.size,
	            _react2['default'].createElement('br', null),
	            '数量：',
	            n.num
	          ),
	          _react2['default'].createElement(
	            'td',
	            { className: 'text-left' },
	            '原价：￥',
	            n.original_price / 100,
	            _react2['default'].createElement('br', null),
	            '实际售价：￥',
	            n.discount_price / 100
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            '￥',
	            n.amount / 100
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.choco_board
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.greeting_card
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            _react2['default'].createElement('input', { checked: n.atlas, disabled: true, type: 'checkbox' })
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.custom_name
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.custom_desc
	          )
	        );
	      });
	      return _react2['default'].createElement(
	        'div',
	        { ref: 'modal', 'aria-hidden': 'false', 'aria-labelledby': 'myModalLabel', role: 'dialog', className: 'modal fade' },
	        _react2['default'].createElement('div', { ref: 'modal-backdrop', className: 'modal-backdrop fade' }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'modal-dialog modal-lg' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'modal-content' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-header' },
	              _react2['default'].createElement(
	                'button',
	                { 'aria-hidden': 'true', 'data-dismiss': 'modal', className: 'close', type: 'button' },
	                '×'
	              ),
	              _react2['default'].createElement(
	                'h4',
	                { className: 'modal-title' },
	                '查看订单信息'
	              )
	            ),
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-body strong-label' },
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　配送方式：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  _configAppConfig.DELIVERY_MAP[data.delivery_type]
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '下单人信息：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.owner_name + '　' + data.owner_mobile
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '收货人信息：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.recipient_name + '　' + data.recipient_mobile
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '收货人地址：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.province_name + data.city_name + data.recipient_address
	                )
	              ),
	              data.delivery_type == _configAppConfig.DELIVERY_TO_HOME //送货上门
	              ? _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '标志性建筑：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.recipient_landmark
	                )
	              ) : null,
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　配送中心：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.delivery_name
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  { className: 'inline-block' },
	                  '　支付方式：',
	                  _react2['default'].createElement('br', null),
	                  data.coupon ? [' ', _react2['default'].createElement('br', null)] : null,
	                  ' ',
	                  _react2['default'].createElement('br', null)
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'inline-block gray' },
	                  data.pay_name,
	                  _react2['default'].createElement('br', null),
	                  data.coupon ? ['团购密码 ' + data.coupon, _react2['default'].createElement('br', null)] : null,
	                  _configAppConfig.pay_status[data.pay_status]
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　配送时间：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.delivery_time
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　　　备注：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'gray' },
	                  data.remarks
	                )
	              ),
	              _react2['default'].createElement('hr', { className: 'dotted' }),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　产品信息：'
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'table-responsive' },
	                _react2['default'].createElement(
	                  'table',
	                  { className: 'table table-hover table-click text-center' },
	                  _react2['default'].createElement(
	                    'thead',
	                    null,
	                    _react2['default'].createElement(
	                      'tr',
	                      null,
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '货品数量信息'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '金额'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '应收金额'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '巧克力牌'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '祝福贺卡'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品图册'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '自定义名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '自定义描述'
	                      )
	                    )
	                  ),
	                  _react2['default'].createElement(
	                    'tbody',
	                    null,
	                    products.length ? products : (0, _commonLoading.get_table_empty)()
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      $(this.refs['modal-backdrop']).on('click', this.hide);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      $(this.refs['modal-backdrop']).off('click', this.hide);
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      $(this.refs.modal).modal('show');
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      $(this.refs.modal).modal('hide');
	    }
	  }]);

	  return DetailModal;
	})(_react.Component);

	exports['default'] = DetailModal;

	DetailModal.PropTypes = {
	  data: _react.PropTypes.object.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactAddonsLinkedStateMixin = __webpack_require__(284);

	var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonRadio_group = __webpack_require__(315);

	var _commonRadio_group2 = _interopRequireDefault(_commonRadio_group);

	var _utilsIndex = __webpack_require__(160);

	var _mixinsMap = __webpack_require__(310);

	var _mixinsMap2 = _interopRequireDefault(_mixinsMap);

	var _configAppConfig = __webpack_require__(157);

	var AlterDeliveryModal = _react2['default'].createClass({
	  displayName: 'AlterDeliveryModal',

	  propTypes: {
	    actions: _react.PropTypes.object.isRequired,
	    provinces: _react.PropTypes.array.isRequired
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (nextProps.order //拿到订单详细数据
	     && nextProps.order != this.props.order && !nextProps.show_products_detail //非普通点击查询(编辑)
	    ) {
	        this.initSetState(nextProps.order);
	      }
	  },
	  initSetState: function initSetState(order) {
	    var delivery_type = order.delivery_type;
	    var delivery_time = order.delivery_time;
	    var province_id = order.province_id;
	    var city_id = order.city_id;
	    var regionalism_id = order.regionalism_id;
	    var recipient_address = order.recipient_address;
	    var delivery_id = order.delivery_id;

	    delivery_time = delivery_time.split(' ');
	    this.setState({
	      delivery_type: delivery_type,
	      delivery_date: delivery_time[0],
	      delivery_hour: delivery_time[1],
	      province_id: province_id,
	      city_id: city_id,
	      regionalism_id: regionalism_id,
	      recipient_address: recipient_address,
	      delivery_id: delivery_id
	    });
	  },
	  getInitialState: function getInitialState() {
	    return {
	      delivery_type: 'DELIVERY',
	      delivery_date: '',
	      delivery_hour: '',
	      province_id: undefined,
	      city_id: undefined,
	      regionalism_id: undefined,
	      recipient_address: '',
	      delivery_id: undefined,

	      all_delivery_hours: _configAppConfig.DELIVERY_TIME_MAP.map(function (n) {
	        return { id: n, text: n };
	      }),

	      auto_match_delivery_center: false,
	      auto_match_msg: ''
	    };
	  },
	  render: function render() {
	    var _state = this.state;
	    var delivery_type = _state.delivery_type;
	    var delivery_date = _state.delivery_date;
	    var delivery_hour = _state.delivery_hour;
	    var recipient_address = _state.recipient_address;
	    var all_delivery_hours = _state.all_delivery_hours;
	    var delivery_id = _state.delivery_id;
	    var _props = this.props;
	    var delivery_shops = _props.delivery_shops;
	    var delivery_stations = _props.delivery_stations;
	    var provinces = _props.provinces;
	    var cities = _props.cities;
	    var districts = _props.districts;
	    var _props$order = _props.order;
	    var order = _props$order === undefined ? {} : _props$order;
	    var loading = _props.loading;

	    var _order_status = _configAppConfig.order_status[order && order.status];
	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { submitting: this.props.submitting, onConfirm: this.onConfirm, loading: loading, onCancel: this.hideCallback, title: '修改配送', ref: 'modal' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline' },
	        _order_status && _order_status.key >= 30 ? _react2['default'].createElement(
	          'span',
	          { className: 'text-danger' },
	          '订单已转换，请与配送站确认是否能修改信息再提交！'
	        ) : _react2['default'].createElement(
	          'span',
	          { className: 'gray' },
	          '订单尚未生产，可直接更改！'
	        )
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '　　配送方式：'
	        ),
	        _react2['default'].createElement(_commonRadio_group2['default'], {
	          value: delivery_type,
	          className: 'inline-block',
	          radios: [{ value: _configAppConfig.DELIVERY_TO_HOME, text: '配送上门' }, { value: _configAppConfig.DELIVERY_TO_STORE, text: '门店自提' }],
	          onChange: this.onDeliveryTypeChange,
	          name: 'delivery_type'
	        })
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '　　配送时间：'
	        ),
	        _react2['default'].createElement(_commonDatepicker2['default'], { value: delivery_date, onChange: this.onDeliveryDateChange }),
	        ' ',
	        _react2['default'].createElement(_commonSelect2['default'], { valueLink: this.linkState('delivery_hour'), options: all_delivery_hours, className: 'input-xs' })
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-inline' },
	        _react2['default'].createElement(
	          'label',
	          { className: 'v-top', style: { lineHeight: '27px', fontWeight: 'normal' } },
	          '修改配送地址：'
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'inline-block', style: { maxWidth: 470 } },
	          _react2['default'].createElement(_commonSelect2['default'], { ref: 'province', value: this.state.province_id, onChange: this.onProvinceChange, options: provinces, className: 'mg-8' }),
	          ' ',
	          _react2['default'].createElement(_commonSelect2['default'], { ref: 'city', value: this.state.city_id, onChange: this.onCityChange, options: cities, className: 'mg-8' }),
	          ' ',
	          _react2['default'].createElement(_commonSelect2['default'], { ref: 'district', value: this.state.regionalism_id, onChange: this.onDistrictChange, options: districts, className: 'mg-8' }),
	          ' ',
	          delivery_type == _configAppConfig.DELIVERY_TO_HOME ? _react2['default'].createElement('input', { ref: 'recipient_address', valueLink: this.linkState('recipient_address'), onBlur: this.onAddressChange, className: 'form-control input-xs mg-8', type: 'text' }) : _react2['default'].createElement(_commonSelect2['default'], { ref: 'shop', valueLink: this.linkState('recipient_address'), options: delivery_shops, className: 'mg-8' })
	        )
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '修改配送中心：'
	        ),
	        _react2['default'].createElement(_commonSelect2['default'], { ref: 'delivery_center', valueLink: this.linkState('delivery_id'), options: delivery_stations, className: 'input-xs transition' }),
	        ' ',
	        _react2['default'].createElement(
	          'span',
	          { className: this.state.auto_match_delivery_center ? 'text-success' : 'text-danger' },
	          this.state.auto_match_msg
	        )
	      )
	    );
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default'], { autoMatchDeliveryStations: _mixinsMap2['default'] }],
	  componentDidMount: function componentDidMount() {
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).on('click', this.clearMsg);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).off('click', this.clearMsg);
	  },
	  clearMsg: function clearMsg() {
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).removeClass('alert-success alert-danger');
	    this.setState({ auto_match_msg: '' });
	  },
	  onConfirm: function onConfirm() {
	    var _state2 = this.state;
	    var delivery_type = _state2.delivery_type;
	    var delivery_date = _state2.delivery_date;
	    var delivery_hour = _state2.delivery_hour;
	    var regionalism_id = _state2.regionalism_id;
	    var recipient_address = _state2.recipient_address;
	    var delivery_id = _state2.delivery_id;
	    var order = _state2.order;

	    if (!delivery_date || delivery_hour == _configAppConfig.SELECT_DEFAULT_VALUE) {
	      (0, _utilsIndex.Noty)('warning', '请填写正确的配送时间');return;
	    } else if (!regionalism_id || regionalism_id == _configAppConfig.SELECT_DEFAULT_VALUE || !recipient_address.trim()) {
	      (0, _utilsIndex.Noty)('warning', '请填写完整的配送地址');return;
	    } else if (delivery_id == _configAppConfig.SELECT_DEFAULT_VALUE) {
	      (0, _utilsIndex.Noty)('warning', '请选择配送中心');return;
	    } else if (delivery_type == _configAppConfig.DELIVERY_TO_STORE && this.refs.shop.props['default-text'] == this.findSelectedOptionText('shop')) {
	      (0, _utilsIndex.Noty)('warning', '请选择门店地址');return;
	    }
	    var prefix_address = this.findSelectedOptionText('province') + this.findSelectedOptionText('city') + this.findSelectedOptionText('district');
	    this.props.actions.alterDelivery(this.props.active_order_id, {
	      delivery_type: delivery_type,
	      delivery_time: delivery_date + ' ' + delivery_hour,
	      prefix_address: prefix_address,
	      regionalism_id: regionalism_id,
	      recipient_address: recipient_address,
	      delivery_id: delivery_id,
	      delivery_name: this.findSelectedOptionText('delivery_center'),
	      updated_time: this.props.order.updated_time
	    }).done((function () {
	      this.props.callback();
	      this.refs.modal.hide();
	    }).bind(this)).fail(function () {
	      (0, _utilsIndex.Noty)('error', '服务器异常');
	    });
	  },
	  findSelectedOptionText: function findSelectedOptionText(_refs) {
	    return $((0, _reactDom.findDOMNode)(this.refs[_refs])).find('option:selected').html();
	  },
	  onDeliveryTypeChange: function onDeliveryTypeChange(delivery_type) {
	    this.setState({ delivery_type: delivery_type });
	  },
	  onDeliveryDateChange: function onDeliveryDateChange(delivery_date) {
	    this.setState({ delivery_date: delivery_date });
	  },
	  onProvinceChange: function onProvinceChange(e) {
	    var value = e.target.value;

	    this.props.actions.provinceReset();
	    this.setState({ province_id: value });
	    if (value != this.refs.province.props['default-value']) this.props.actions.getCities(value);
	  },
	  onCityChange: function onCityChange(e) {
	    var value = e.target.value;

	    this.props.actions.cityReset();
	    this.setState({ city_id: e.target.value });
	    if (value != this.refs.city.props['default-value']) this.props.actions.getDistricts(value);
	  },
	  onDistrictChange: function onDistrictChange(e) {
	    var value = e.target.value;

	    this.props.actions.districtReset();
	    this.setState({ regionalism_id: e.target.value });
	    if (value != this.refs.district.props['default-value']) this.props.actions.getDeliveryShops(value);
	  },
	  onAddressChange: function onAddressChange() {
	    var _this = this;

	    this.autoMatchDeliveryStations(function (delivery_id) {
	      if (delivery_id) {
	        _this.setState({ delivery_id: delivery_id });
	        _mixinsMap.autoMatchSuccess.call(_this);
	      } else {
	        _this.setState({ delivery_id: _configAppConfig.SELECT_DEFAULT_VALUE });
	        _mixinsMap.autoMatchFail.call(_this);
	      }
	    }, function () {
	      _this.setState({ delivery_id: _configAppConfig.SELECT_DEFAULT_VALUE });
	      _mixinsMap.autoMatchFail.call(_this);
	    });
	  },
	  show: function show() {
	    this.refs.modal.show();
	    var _props2 = this.props;
	    var order = _props2.order;
	    var active_order_id = _props2.active_order_id;

	    if (order && order.order_id == active_order_id) {
	      this.initSetState(order);
	    }
	    $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).removeClass('alert-success alert-danger');
	  },
	  hideCallback: function hideCallback() {
	    this.setState(this.getInitialState());
	    // this.refs.modal.hide();
	    this.props.actions.resetDeliveryStations();
	  }
	});

	exports['default'] = AlterDeliveryModal;
	module.exports = exports['default'];

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var RadioGroup = (function (_Component) {
	  _inherits(RadioGroup, _Component);

	  function RadioGroup(props) {
	    _classCallCheck(this, RadioGroup);

	    _get(Object.getPrototypeOf(RadioGroup.prototype), 'constructor', this).call(this, props);
	    this.onCheck = this.onCheck.bind(this);
	  }

	  _createClass(RadioGroup, [{
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      var _props = this.props;
	      var radios = _props.radios;
	      var space = _props.space;
	      var value = _props.value;
	      var vertical = _props.vertical;
	      var name = _props.name;

	      var content = radios.map(function (n, i) {
	        var item = _react2['default'].createElement(
	          'label',
	          { style: { marginRight: space }, key: n.value },
	          _react2['default'].createElement('input', { value: n.value, checked: _this.props.value == n.value, name: name, onChange: _this.onCheck, type: 'radio' }),
	          ' ' + n.text
	        );
	        return vertical ? _react2['default'].createElement(
	          'div',
	          { key: n.value },
	          item
	        ) : item;
	      });

	      //onChange少不了，有bug
	      return _react2['default'].createElement(
	        'div',
	        _extends({}, this.props, { onChange: function () {} }),
	        content
	      );
	    }
	  }, {
	    key: 'onCheck',
	    value: function onCheck(e) {
	      this.props.onChange(e.target.value);
	    }
	  }]);

	  return RadioGroup;
	})(_react.Component);

	exports['default'] = RadioGroup;

	RadioGroup.defaultProps = {
	  space: 16,
	  vertical: false
	};

	RadioGroup.PropTypes = {
	  name: _react.PropTypes.string.isRequired,
	  value: _react.PropTypes.string.isRequired,
	  radios: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    value: _react.PropTypes.string.isRequired,
	    text: _react.PropTypes.string.isRequired
	  })).isRequired, //得按顺序，所以得用数组
	  onChange: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _configAppConfig = __webpack_require__(157);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var OrderSrcsSelects = (function (_React$Component) {
	  _inherits(OrderSrcsSelects, _React$Component);

	  function OrderSrcsSelects(props) {
	    _classCallCheck(this, OrderSrcsSelects);

	    _get(Object.getPrototypeOf(OrderSrcsSelects.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      selected_order_src_level1_id: _configAppConfig.SELECT_DEFAULT_VALUE
	    };
	  }

	  _createClass(OrderSrcsSelects, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var all_order_srcs = _props.all_order_srcs;
	      var src_id = _props.src_id;
	      var selected_order_src_level1_id = this.state.selected_order_src_level1_id;

	      var order_srcs_level2 = all_order_srcs.length > 1 ? all_order_srcs[1].filter(function (n) {
	        return n.parent_id == selected_order_src_level1_id;
	      }) : [];
	      return _react2['default'].createElement(
	        'div',
	        { className: 'inline-block' },
	        all_order_srcs.length == 1 //2级
	        ? _react2['default'].createElement(_commonSelect2['default'], _extends({}, src_id, {
	          options: all_order_srcs[0],
	          'default-text': '订单来源',
	          key: 'order_srcs_level1',
	          className: 'space' })) : [order_srcs_level2.length ? _react2['default'].createElement(_commonSelect2['default'], {
	          value: selected_order_src_level1_id,
	          options: all_order_srcs[0],
	          onChange: this.orderSrcsLevel1Change.bind(this),
	          'default-text': '订单来源',
	          key: 'order_srcs_level1',
	          className: 'space' }) : _react2['default'].createElement(_commonSelect2['default'], _extends({}, src_id, {
	          value: selected_order_src_level1_id,
	          options: all_order_srcs[0],
	          onChange: this.orderSrcsLevel1Change.bind(this),
	          'default-text': '订单来源',
	          key: 'order_srcs_level1',
	          className: 'space' })), ' ', order_srcs_level2.length ? _react2['default'].createElement(_commonSelect2['default'], _extends({}, src_id, {
	          options: order_srcs_level2,
	          key: 'order_srcs_level2',
	          'default-text': '订单来源',
	          className: 'space' })) : null]
	      );
	    }
	  }, {
	    key: 'orderSrcsLevel1Change',
	    value: function orderSrcsLevel1Change(e) {
	      this.setState({ selected_order_src_level1_id: e.target.value });
	    }
	  }]);

	  return OrderSrcsSelects;
	})(_react2['default'].Component);

	exports['default'] = OrderSrcsSelects;

	OrderSrcsSelects.PropTypes = {
	  all_order_srcs: _react.PropTypes.array.isRequired,
	  src_id: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _commonStd_modalJs = __webpack_require__(307);

	var _commonStd_modalJs2 = _interopRequireDefault(_commonStd_modalJs);

	var _commonLoading = __webpack_require__(306);

	var _commonPaginationJs = __webpack_require__(303);

	var _commonPaginationJs2 = _interopRequireDefault(_commonPaginationJs);

	var _utilsIndex = __webpack_require__(160);

	var OperationRecordModal = _react2['default'].createClass({
	  displayName: 'OperationRecordModal',

	  getInitialState: function getInitialState() {
	    return {
	      sort_type: 'DESC', //ASC
	      page_size: 8,
	      data: {}
	    };
	  },
	  render: function render() {
	    var _state$data = this.state.data;
	    var order_id = _state$data.order_id;
	    var owner_mobile = _state$data.owner_mobile;
	    var owner_name = _state$data.owner_name;
	    var _props = this.props;
	    var page_no = _props.page_no;
	    var total = _props.total;
	    var list = _props.list;

	    var content = list.map(function (n, i) {
	      return _react2['default'].createElement(
	        'tr',
	        { key: n.order_id + '' + i },
	        _react2['default'].createElement(
	          'td',
	          null,
	          n.created_by
	        ),
	        _react2['default'].createElement(
	          'td',
	          { className: 'text-left' },
	          (0, _utilsIndex.colour)(n.option)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          n.created_time
	        )
	      );
	    });
	    return _react2['default'].createElement(
	      _commonStd_modalJs2['default'],
	      { title: '操作历史记录', footer: false, ref: 'modal', onCancel: this.hideCallback },
	      _react2['default'].createElement(
	        'div',
	        { className: '' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '订单号：'
	        ),
	        order_id
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '下单人信息：'
	        ),
	        owner_name + '　' + owner_mobile
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'table-responsive' },
	        _react2['default'].createElement(
	          'table',
	          { className: 'table table-hover table-bordered text-left' },
	          _react2['default'].createElement(
	            'thead',
	            null,
	            _react2['default'].createElement(
	              'tr',
	              null,
	              _react2['default'].createElement(
	                'th',
	                null,
	                '操作人'
	              ),
	              _react2['default'].createElement(
	                'th',
	                null,
	                '操作记录'
	              ),
	              _react2['default'].createElement(
	                'th',
	                { className: 'sorting ' + this.state.sort_type.toLowerCase(), onClick: this.changeSortType },
	                '操作时间'
	              )
	            )
	          ),
	          _react2['default'].createElement(
	            'tbody',
	            null,
	            content.length ? content : (0, _commonLoading.get_table_empty)()
	          )
	        )
	      ),
	      _react2['default'].createElement(_commonPaginationJs2['default'], {
	        page_no: page_no,
	        total_count: total,
	        page_size: this.state.page_size,
	        onPageChange: this.onPageChange
	      })
	    );
	  },
	  changeSortType: function changeSortType() {
	    if (this.state.sort_type == 'DESC') this.setState({ sort_type: 'ASC' }, this.search.bind(this, this.props.page_no));else this.setState({ sort_type: 'DESC' }, this.search.bind(this, this.props.page_no));
	  },
	  onPageChange: function onPageChange(page) {
	    this.search(page);
	  },
	  search: function search(page_no) {
	    var _state = this.state;
	    var page_size = _state.page_size;
	    var sort_type = _state.sort_type;

	    this.props.getOrderOptRecord(this.state.data.order_id, {
	      page_no: page_no,
	      page_size: page_size,
	      sort_type: sort_type
	    });
	  },
	  show: function show(data) {
	    this.refs.modal.show();
	    this.setState({ data: data }, function () {
	      this.search(this.props.page_no);
	    });
	  },
	  hideCallback: function hideCallback() {
	    this.props.resetOrderOptRecord();
	  }
	});

	exports['default'] = OperationRecordModal;
	module.exports = exports['default'];

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var OrderFormActions = _interopRequireWildcard(_actionsOrder_manage_form);

	var _actionsForm = __webpack_require__(293);

	var FormActions = _interopRequireWildcard(_actionsForm);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonAlert = __webpack_require__(319);

	var _commonAlert2 = _interopRequireDefault(_commonAlert);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _manage_order_form_create = __webpack_require__(321);

	var _manage_order_form_create2 = _interopRequireDefault(_manage_order_form_create);

	var _manage_order_form_edit = __webpack_require__(327);

	var _manage_order_form_edit2 = _interopRequireDefault(_manage_order_form_edit);

	var _manage_order_products = __webpack_require__(328);

	var _manage_order_products2 = _interopRequireDefault(_manage_order_products);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '总订单页面', link: '/om/index' }, { name: (this.props.editable ? '编辑' : '添加') + '订单', link: '' }],
	          className: 'pull-right' })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var ManageOrderDetailPannel = (function (_Component2) {
	  _inherits(ManageOrderDetailPannel, _Component2);

	  function ManageOrderDetailPannel() {
	    _classCallCheck(this, ManageOrderDetailPannel);

	    _get(Object.getPrototypeOf(ManageOrderDetailPannel.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ManageOrderDetailPannel, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var mainForm = _props.mainForm;
	      var delivery_stations = _props.delivery_stations;
	      var history_orders = _props.history_orders;
	      var area = _props.area;
	      var dispatch = _props.dispatch;
	      var products = _props.products;
	      var params = _props.params;

	      var editable = !!(params && params.id);

	      var actions = _extends({}, (0, _redux.bindActionCreators)((0, _actionsArea2['default'])(), dispatch), (0, _redux.bindActionCreators)(OrderFormActions, dispatch), (0, _redux.bindActionCreators)(FormActions, dispatch));

	      mainForm = _extends({}, mainForm, delivery_stations);
	      return _react2['default'].createElement(
	        'div',
	        { className: 'order-manage' },
	        _react2['default'].createElement(TopHeader, { editable: editable }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '订单详情'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            !editable ? _react2['default'].createElement(
	              _manage_order_form_create2['default'],
	              {
	                'form-data': mainForm,
	                history_orders: history_orders,
	                area: area,
	                editable: editable,
	                order_id: params.id,
	                actions: actions },
	              _react2['default'].createElement(_manage_order_products2['default'], _extends({ dispatch: dispatch }, products))
	            ) : _react2['default'].createElement(
	              _manage_order_form_edit2['default'],
	              {
	                'form-data': mainForm,
	                history_orders: history_orders,
	                area: area,
	                editable: editable,
	                order_id: params.id,
	                actions: actions },
	              _react2['default'].createElement(_manage_order_products2['default'], _extends({ dispatch: dispatch }, products))
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      //有params则表示是编辑订单
	      var params = this.props.params;

	      if (params && params.id) {
	        this.props.getOrderById(params.id);
	      }
	    }
	  }]);

	  return ManageOrderDetailPannel;
	})(_react.Component);

	ManageOrderDetailPannel.PropTypes = {
	  createOrder: _react.PropTypes.func.isRequired
	};

	function mapStateToProps(_ref) {
	  var orderManageForm = _ref.orderManageForm;

	  return orderManageForm;
	}
	function mapDispatchToProps(dispatch) {
	  var actions = (0, _redux.bindActionCreators)(OrderFormActions, dispatch);
	  actions.dispatch = dispatch; //不绑定的话，dispatch传不到 ManageOrderDetailPannel了，(￣◇￣;)
	  return actions;
	}

	//bindActionCreators: dispatch(action) --> 自动加上dispatch --> reducer
	//redux-thunk       : dispatch(action) --> reducer         --> 异步代码执行，thunk 提供dispatch

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ManageOrderDetailPannel);
	module.exports = exports['default'];

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var Alert = (function (_Component) {
	  _inherits(Alert, _Component);

	  function Alert() {
	    _classCallCheck(this, Alert);

	    _get(Object.getPrototypeOf(Alert.prototype), "constructor", this).apply(this, arguments);
	  }

	  _createClass(Alert, [{
	    key: "render",
	    value: function render() {
	      var type = this.props.type;

	      return _react2["default"].createElement(
	        "div",
	        { className: "alert alert-block alert-" + type + " fade in" },
	        _react2["default"].createElement(
	          "button",
	          { type: "button", className: "close close-xs", "data-dismiss": "alert" },
	          _react2["default"].createElement("i", { className: "fa fa-times" })
	        ),
	        this.props.children
	      );
	    }
	  }]);

	  return Alert;
	})(_react.Component);

	exports["default"] = Alert;

	Alert.PropTypes = {
	  type: _react.PropTypes.string.isRequired
	};
	module.exports = exports["default"];

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var LineRouter = (function (_React$Component) {
	  _inherits(LineRouter, _React$Component);

	  function LineRouter() {
	    _classCallCheck(this, LineRouter);

	    _get(Object.getPrototypeOf(LineRouter.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(LineRouter, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var routes = _props.routes;
	      var className = _props.className;

	      var content = [];

	      for (var i = 0, len = routes.length; i < len; i++) {
	        if (i < len - 1) {
	          content.push(_react2['default'].createElement(
	            'span',
	            { key: i + routes[i].link, className: 'node',
	              onClick: this.jumpTo.bind(this, routes[i].link) },
	            routes[i].name
	          ), _react2['default'].createElement(
	            'span',
	            { key: i + 'separator' },
	            '　/　'
	          ));
	        } else {
	          content.push(_react2['default'].createElement(
	            'span',
	            { key: i + routes[i].link, className: 'node active' },
	            routes[i].name
	          ));
	        }
	      }

	      return _react2['default'].createElement(
	        'div',
	        { className: 'line-router ' + className },
	        content
	      );
	    }
	  }, {
	    key: 'jumpTo',
	    value: function jumpTo(link) {
	      link && _history_instance2['default'].push(link);
	    }
	  }]);

	  return LineRouter;
	})(_react2['default'].Component);

	exports['default'] = LineRouter;

	LineRouter.PropTypes = {
	  routes: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    name: _react.PropTypes.string.isRequired,
	    link: _react.PropTypes.string.isRequired
	  }))
	};
	module.exports = exports['default'];

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _manage_order_form = __webpack_require__(322);

	var _manage_order_form2 = _interopRequireDefault(_manage_order_form);

	var _configAppConfig = __webpack_require__(157);

	exports['default'] = (0, _manage_order_form2['default'])(function (state) {
	  return {
	    //赋初始值
	    initialValues: {
	      delivery_type: _configAppConfig.DELIVERY_TO_HOME }
	  };
	});
	module.exports = exports['default'];
	//这里有bug，还是把默认值写到组件里面
	// invoice: INVOICE.NO,

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	exports['default'] = initManageOrderForm;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reduxForm = __webpack_require__(242);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var _utilsIndex = __webpack_require__(160);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _manage_history_orders = __webpack_require__(323);

	var _manage_history_orders2 = _interopRequireDefault(_manage_history_orders);

	var _reducersForm = __webpack_require__(324);

	var _configAppConfig = __webpack_require__(157);

	var _mixinsMap = __webpack_require__(310);

	var _mixinsMap2 = _interopRequireDefault(_mixinsMap);

	var _configFormFields = __webpack_require__(294);

	var _configFormFields2 = _interopRequireDefault(_configFormFields);

	var validate = function validate(values, props) {
	  var errors = {};
	  var msg = 'error';
	  var form = props.form;

	  function _v(key) {
	    // touched 为true 表示用户点击处理过
	    if (form[key] && form[key].touched && !values[key]) errors[key] = msg;
	  }
	  function _v_selsect(key) {
	    if (form[key] && form[key].touched && (!values[key] || values[key] == _configAppConfig.SELECT_DEFAULT_VALUE)) errors[key] = msg;
	  }
	  function _v_mobile(key) {
	    if (form[key] && form[key].touched && !values[key] || form[key] && !form[key].focus && values[key] && !_utilsIndex.form.isMobile(values[key])) {
	      errors[key] = msg;
	    }
	  }

	  _v('owner_name');
	  _v('recipient_name');
	  // _v('recipient_landmark');
	  _v('delivery_date');

	  _v_mobile('owner_mobile');
	  _v_mobile('recipient_mobile');

	  _v_selsect('regionalism_id');
	  // _v_selsect('delivery_id');
	  _v_selsect('src_id');
	  _v_selsect('pay_modes_id');
	  _v_selsect('pay_status');
	  _v_selsect('delivery_hours');

	  //配送上门
	  if (values.delivery_type == _configAppConfig.DELIVERY_TO_HOME) {
	    _v('recipient_address');
	    //自提时，则不需建筑物字段, 但地址则为相应的门店地址
	  } else if (values.delivery_type == _configAppConfig.DELIVERY_TO_STORE) {
	      delete errors.recipient_landmark;
	      _v_selsect('recipient_shop_address'); //门店
	    }

	  //团购密码
	  if ((0, _reducersForm.isSrc)('团购网站', values.src_id)) {
	    if (form['coupon'] && form['coupon'].touched && !values['coupon'] || form['coupon'] && !form['coupon'].focus && values['coupon'] && !_utilsIndex.form.isCoupon(values['coupon'])) {
	      errors['coupon'] = msg;
	    }
	  }

	  //errors为空对象才表明验证正确
	  return errors;
	};

	var ManageAddForm = (function (_Component) {
	  _inherits(ManageAddForm, _Component);

	  function ManageAddForm(props) {
	    _classCallCheck(this, ManageAddForm);

	    _get(Object.getPrototypeOf(ManageAddForm.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      invoices: [{ id: _configAppConfig.INVOICE.NO, text: '不需要' }, { id: _configAppConfig.INVOICE.YES, text: '需要' }],
	      selected_order_src_level1_id: undefined,

	      groupbuy_check_ing: false,
	      groupbuy_success: undefined, //验券是否成功
	      groupbuy_msg: '', //验券结果
	      auto_match_delivery_center: false,
	      auto_match_msg: ''
	    };
	    this._check = this._check.bind(this);
	    this.autoMatchDeliveryStations = _mixinsMap2['default'].bind(this);
	  }

	  _createClass(ManageAddForm, [{
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      var _props = this.props;
	      var editable = _props.editable;
	      var // 表明是否是处于编辑状态
	      handleSubmit = _props.handleSubmit;
	      var _props$fields = _props.fields;
	      var delivery_type = _props$fields.delivery_type;
	      var owner_name = _props$fields.owner_name;
	      var owner_mobile = _props$fields.owner_mobile;
	      var recipient_name = _props$fields.recipient_name;
	      var //下单人姓名
	      recipient_mobile = _props$fields.recipient_mobile;
	      var recipient_address = _props$fields.recipient_address;
	      var //收货人详细地址----》配送上门 ，
	      recipient_shop_address = _props$fields.recipient_shop_address;
	      var //收货人详细地址----》门店自提(实际上是门店地址)
	      province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var regionalism_id = _props$fields.regionalism_id;
	      var //区ID
	      recipient_landmark = _props$fields.recipient_landmark;
	      var //标志性建筑
	      delivery_id = _props$fields.delivery_id;
	      var //配送中心
	      src_id = _props$fields.src_id;
	      var //订单来源
	      pay_modes_id = _props$fields.pay_modes_id;
	      var //支付方式
	      coupon = _props$fields.coupon;
	      var //团购密码
	      pay_status = _props$fields.pay_status;
	      var
	      // delivery_time, //总配送时间：delivery_date + delivery_time
	      delivery_date = _props$fields.delivery_date;
	      var //配送日期
	      delivery_hours = _props$fields.delivery_hours;
	      var //配送时段：几点到几点
	      remarks = _props$fields.remarks;
	      var invoice = _props$fields.invoice;
	      var history_orders = _props.history_orders;
	      var _props$actions = this.props.actions;
	      var getHistoryOrders = _props$actions.getHistoryOrders;
	      var checkHistoryOrder = _props$actions.checkHistoryOrder;
	      var getCopyOrderById = _props$actions.getCopyOrderById;
	      var copyOrder = _props$actions.copyOrder;
	      var _props$formData = this.props['form-data'];
	      var save_ing = _props$formData.save_ing;
	      var save_success = _props$formData.save_success;
	      var submit_ing = _props$formData.submit_ing;
	      var all_delivery_time = _props$formData.all_delivery_time;
	      var all_pay_status = _props$formData.all_pay_status;
	      var all_order_srcs = _props$formData.all_order_srcs;
	      var delivery_stations = _props$formData.delivery_stations;
	      var all_pay_modes = _props$formData.all_pay_modes;
	      var _props$area = this.props.area;
	      var provinces = _props$area.provinces;
	      var cities = _props$area.cities;
	      var districts = _props$area.districts;
	      var delivery_shops = _props$area.delivery_shops;
	      var _state = this.state;
	      var invoices = _state.invoices;
	      var _state$selected_order_src_level1_id = _state.selected_order_src_level1_id;
	      var selected_order_src_level1_id = _state$selected_order_src_level1_id === undefined ? src_id.value : _state$selected_order_src_level1_id;
	      var groupbuy_psd = _state.groupbuy_psd;
	      var groupbuy_check_ing = _state.groupbuy_check_ing;
	      var groupbuy_msg = _state.groupbuy_msg;
	      var groupbuy_success = _state.groupbuy_success;

	      var isThird = (0, _reducersForm.isSrc)('团购网站', src_id.value); //是否第三方，显示团购密码组件

	      //{{表单处于编辑状态时的额外处理
	      if (editable && !this.editable_initial) {
	        if (src_id.value && all_order_srcs[1]) {
	          //表明表单数据已准备完毕
	          this.editable_initial = true; //初始化就只能一次
	          all_order_srcs[1].forEach(function (n) {
	            if (n.id == src_id.value) {
	              selected_order_src_level1_id = n.parent_id;
	              _this.state.selected_order_src_level1_id = n.parent_id;
	            }
	          });
	        }
	      }
	      //}}

	      var order_srcs_level2 = all_order_srcs.length > 1 ? all_order_srcs[1].filter(function (n) {
	        return n.parent_id == selected_order_src_level1_id;
	      }) : [];

	      return _react2['default'].createElement(
	        'div',
	        null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            { className: 'control-label' },
	            '　配送方式：'
	          ),
	          _react2['default'].createElement(
	            'label',
	            null,
	            _react2['default'].createElement('input', _extends({ type: 'radio'
	            }, delivery_type, {
	              value: _configAppConfig.DELIVERY_TO_HOME,
	              name: 'delivery_type',
	              checked: delivery_type.value == _configAppConfig.DELIVERY_TO_HOME })),
	            ' 配送上门'
	          ),
	          '　',
	          _react2['default'].createElement(
	            'label',
	            null,
	            _react2['default'].createElement('input', _extends({ type: 'radio'
	            }, delivery_type, {
	              value: _configAppConfig.DELIVERY_TO_STORE,
	              name: 'delivery_type',
	              checked: delivery_type.value == _configAppConfig.DELIVERY_TO_STORE })),
	            ' 门店自提'
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '下单人姓名：'
	          ),
	          _react2['default'].createElement('input', _extends({}, owner_name, { className: 'form-control input-xs ' + owner_name.error, type: 'text' }))
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '下单人手机：'
	          ),
	          _react2['default'].createElement('input', _extends({}, owner_mobile, { ref: 'owner_mobile', className: 'form-control input-xs ' + owner_mobile.error, type: 'text' })),
	          ' ',
	          _react2['default'].createElement(
	            'button',
	            { onClick: this.showHistoryModal.bind(this), className: 'btn btn-default btn-xs' },
	            '查询历史订单'
	          ),
	          ' ',
	          _react2['default'].createElement(
	            'button',
	            { className: 'btn btn-default btn-xs', disabled: true },
	            '拨号'
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '收货人姓名：'
	          ),
	          _react2['default'].createElement('input', _extends({}, recipient_name, { className: 'form-control input-xs ' + recipient_name.error, type: 'text' }))
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '收货人手机：'
	          ),
	          _react2['default'].createElement('input', _extends({}, recipient_mobile, { className: 'form-control input-xs ' + recipient_mobile.error, type: 'text' }))
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            delivery_type.value == _configAppConfig.DELIVERY_TO_HOME ? '收货人地址：' : '　选择分店：'
	          ),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({ ref: 'province', options: provinces }, province_id, { onChange: this.onProvinceChange.bind(this, province_id.onChange), className: 'form-select' })),
	          ' ',
	          _react2['default'].createElement(_commonSelect2['default'], _extends({ ref: 'city', options: cities }, city_id, { onChange: this.onCityChange.bind(this, city_id.onChange) })),
	          ' ',
	          _react2['default'].createElement(_commonSelect2['default'], _extends({ ref: 'district', options: districts }, regionalism_id, { onChange: this.onDistrictChange.bind(this, regionalism_id.onChange), className: '' + regionalism_id.error })),
	          ' ',
	          _react2['default'].createElement('input', _extends({ ref: 'recipient_address' }, recipient_address, { className: 'form-control input-xs ' + recipient_address.error + ' ' + (delivery_type.value == _configAppConfig.DELIVERY_TO_HOME ? '' : 'hidden'), type: 'text' })),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({ ref: 'shop', options: delivery_shops }, recipient_shop_address, { className: recipient_shop_address.error + ' ' + (delivery_type.value == _configAppConfig.DELIVERY_TO_HOME ? 'hidden' : '') }))
	        ),
	        delivery_type.value == _configAppConfig.DELIVERY_TO_HOME ? _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '标志性建筑：'
	          ),
	          _react2['default'].createElement('input', _extends({}, recipient_landmark, { className: 'form-control input-xs ' + recipient_landmark.error, type: 'text' }))
	        ) : null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　配送中心：'
	          ),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, delivery_id, { options: delivery_stations, className: 'form-select transition ' + delivery_id.error, ref: 'delivery_center' })),
	          ' ',
	          _react2['default'].createElement(
	            'span',
	            { className: this.state.auto_match_delivery_center ? 'text-success' : 'text-danger' },
	            this.state.auto_match_msg
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　订单来源：'
	          ),
	          order_srcs_level2.length ? [_react2['default'].createElement(_commonSelect2['default'], {
	            value: selected_order_src_level1_id,
	            options: all_order_srcs[0],
	            onChange: this.orderSrcsLevel1Change.bind(this),
	            key: 'order_srcs_level1',
	            className: 'form-select' }), ' ', _react2['default'].createElement(_commonSelect2['default'], _extends({}, src_id, {
	            options: order_srcs_level2,
	            key: 'order_srcs_level2',
	            className: 'form-select ' + src_id.error }))] : _react2['default'].createElement(_commonSelect2['default'], {
	            value: typeof selected_order_src_level1_id != 'undefined' ? src_id.value : _configAppConfig.SELECT_DEFAULT_VALUE,
	            options: all_order_srcs[0],
	            onChange: this.orderSrcsLevel1Change.bind(this),
	            key: 'order_srcs_level1',
	            className: 'form-select ' + src_id.error })
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　支付方式：'
	          ),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, pay_modes_id, { options: all_pay_modes, onChange: this.onPayModesChange.bind(this, pay_modes_id.onChange), className: 'form-select ' + pay_modes_id.error }))
	        ),
	        isThird ? _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　团购密码：'
	          ),
	          _react2['default'].createElement('input', _extends({}, coupon, { className: 'form-control input-xs ' + coupon.error, type: 'text' })),
	          ' ',
	          _react2['default'].createElement(
	            'button',
	            { onClick: this.checkGroupbuyPsd.bind(this), 'data-submitting': groupbuy_check_ing, disabled: groupbuy_check_ing, className: 'btn btn-default btn-xs' },
	            '验劵'
	          ),
	          ' ',
	          _react2['default'].createElement(
	            'span',
	            { className: 'fadeIn animated ' + (groupbuy_success ? 'text-success' : 'text-danger') },
	            groupbuy_msg
	          )
	        ) : null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　支付状态：'
	          ),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, pay_status, { options: all_pay_status, ref: 'pay_status', className: 'form-select ' + pay_status.error }))
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　配送时间：'
	          ),
	          _react2['default'].createElement(_commonDatepicker2['default'], { 'redux-form': delivery_date, lowerLimit: (0, _utilsIndex.dateFormat)(new Date()), className: '' + delivery_date.error }),
	          ' ',
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, delivery_hours, { options: all_delivery_time, className: '' + delivery_hours.error }))
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　　　备注：'
	          ),
	          _react2['default'].createElement('textarea', _extends({}, remarks, { className: 'form-control input-xs', rows: '2', cols: '40' })),
	          '　　',
	          _react2['default'].createElement(
	            'label',
	            null,
	            '发票备注：'
	          ),
	          _react2['default'].createElement('textarea', _extends({}, invoice, { placeholder: '', rows: '2', cols: '22', className: 'form-control input-xs ' + invoice.error }))
	        ),
	        _react2['default'].createElement('hr', { className: 'dotted' }),
	        this.props.children,
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group' },
	          editable ? [_react2['default'].createElement(
	            'button',
	            {
	              key: 'saveBtn',
	              onClick: handleSubmit(this._check.bind(this, this.handleSaveOrder)),
	              disabled: save_ing,
	              'data-submitting': save_ing,
	              className: 'btn btn-theme btn-xs' },
	            '保存信息'
	          ), '　　', _react2['default'].createElement(
	            'button',
	            {
	              key: 'submitBtn',
	              onClick: handleSubmit(this._check.bind(this, this.handleSubmitOrder)),
	              'data-submitting': submit_ing,
	              disabled: submit_ing, className: 'btn btn-theme btn-xs' },
	            '提交'
	          )] : _react2['default'].createElement(
	            'button',
	            {
	              onClick: handleSubmit(this._check.bind(this, this.handleCreateOrder)),
	              disabled: save_ing,
	              'data-submitting': save_ing,
	              className: 'btn btn-theme btn-xs' },
	            '生成新订单'
	          )
	        ),
	        _react2['default'].createElement(_manage_history_orders2['default'], _extends({
	          ref: 'history_orders_modal',
	          phone_num: owner_mobile.value,
	          data: history_orders
	        }, { getHistoryOrders: getHistoryOrders, checkHistoryOrder: checkHistoryOrder, getCopyOrderById: getCopyOrderById, copyOrder: copyOrder }))
	      );
	    }
	  }, {
	    key: '_check',
	    value: function _check(callback, form_data) {
	      var _this2 = this;

	      var dispatch = this.props.dispatch;

	      //redux-form的缘故，这里必须异步，否则errors为空对象
	      setTimeout(function () {
	        var _props2 = _this2.props;
	        var errors = _props2.errors;
	        var dispatch = _props2.dispatch;
	        var createOrder = _props2.actions.createOrder;
	        var order_id = _props2.order_id;

	        var order_info = _this2.props['form-data'].data;
	        if (!Object.keys(errors).length) {
	          form_data.delivery_time = form_data.delivery_date + ' ' + form_data.delivery_hours;
	          delete form_data.delivery_date;
	          delete form_data.delivery_hours;

	          form_data.order_id = order_id;
	          form_data.updated_time = order_info.updated_time;
	          form_data.recipient_id = order_info.recipient_id;

	          if (form_data.delivery_id == _configAppConfig.SELECT_DEFAULT_VALUE || !form_data.delivery_id) {
	            form_data.delivery_id = undefined;
	            form_data.delivery_name = undefined;
	          } else {
	            form_data.delivery_name = _this2.findSelectedOptionText('delivery_center');
	          }

	          //拼接省市区
	          form_data.prefix_address = _this2.findSelectedOptionText('province') + _this2.findSelectedOptionText('city') + _this2.findSelectedOptionText('district');
	          //门店自提时，将门店id转换为 收货人详细地址
	          if (form_data.delivery_type == _configAppConfig.DELIVERY_TO_STORE) {
	            form_data.recipient_address = _this2.findSelectedOptionText('shop');
	            form_data.recipient_landmark = '';
	          }
	          //团购密码验证
	          if ((0, _reducersForm.isSrc)('团购网站', form_data.src_id)) {
	            if (!_this2.state.groupbuy_success) {
	              (0, _utilsIndex.Noty)('warning', '请确定团购密码已验证通过');return;
	            }
	          }

	          callback.call(_this2, form_data);
	        } else {
	          (0, _utilsIndex.Noty)('warning', '请填写完整');
	        }
	      }, 0);
	    }
	  }, {
	    key: 'findSelectedOptionText',
	    value: function findSelectedOptionText(_refs) {
	      return $((0, _reactDom.findDOMNode)(this.refs[_refs])).find('option:selected').html();
	    }
	  }, {
	    key: 'handleCreateOrder',
	    value: function handleCreateOrder(form_data) {
	      this.props.actions.createOrder(form_data).done(function () {
	        (0, _utilsIndex.Noty)('success', '保存成功');
	        _history_instance2['default'].push('/om/index');
	      }).fail(function (msg, code) {
	        (0, _utilsIndex.Noty)('error', msg || '保存异常');
	      });
	    }
	  }, {
	    key: 'handleSaveOrder',
	    value: function handleSaveOrder(form_data) {
	      this.props.actions.saveOrder(form_data).done((function () {
	        (0, _utilsIndex.Noty)('success', '保存成功');
	        this.props.actions.getOrderById(form_data.order_id).fail((function () {
	          _history_instance2['default'].go(0);
	        }).bind(this));
	      }).bind(this)).fail(function (msg) {
	        (0, _utilsIndex.Noty)('error', msg || '保存异常');
	      });
	    }
	  }, {
	    key: 'handleSubmitOrder',
	    value: function handleSubmitOrder(form_data) {
	      this.props.actions.submitOrder(form_data).done(function () {
	        (0, _utilsIndex.Noty)('success', '已成功提交！');
	        _history_instance2['default'].push('/om/index');
	      }).fail(function (msg) {
	        (0, _utilsIndex.Noty)('error', msg || '操作异常');
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this3 = this;

	      var _props$actions2 = this.props.actions;
	      var getProvinces = _props$actions2.getProvinces;
	      var getOrderSrcs = _props$actions2.getOrderSrcs;
	      var getDeliveryStations = _props$actions2.getDeliveryStations;
	      var getPayModes = _props$actions2.getPayModes;
	      var triggerFormUpdate = _props$actions2.triggerFormUpdate;

	      getProvinces();
	      getOrderSrcs();
	      getPayModes();
	      getDeliveryStations();

	      this.autoMatchDeliveryStations(function (delivery_id) {
	        delivery_id = delivery_id || _configAppConfig.SELECT_DEFAULT_VALUE;
	        $((0, _reactDom.findDOMNode)(_this3.refs.delivery_center)).val(delivery_id);
	        triggerFormUpdate('add_order', 'delivery_id', delivery_id); //手动更改表单值后，需要使用该方法，主动触发redux-form进行更新，否则数据将不会同步
	      }, function () {
	        triggerFormUpdate('add_order', 'delivery_id', _configAppConfig.SELECT_DEFAULT_VALUE);
	      });

	      (0, _utilsLazy_load2['default'])('noty');

	      $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).on('click', this.clearMsg.bind(this));
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).off('click', this.clearMsg.bind(this));
	    }
	  }, {
	    key: 'clearMsg',
	    value: function clearMsg() {
	      $((0, _reactDom.findDOMNode)(this.refs.delivery_center)).removeClass('alert-success alert-danger');
	      this.setState({ auto_match_msg: '' });
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.actions.provinceReset();
	      if (value != this.refs.province.props['default-value']) this.props.actions.getCities(value);
	      callback(e);
	    }
	  }, {
	    key: 'onCityChange',
	    value: function onCityChange(callback, e) {
	      var value = e.target.value;

	      this.props.actions.cityReset();
	      if (value != this.refs.city.props['default-value']) this.props.actions.getDistricts(value);
	      callback(e);
	    }
	  }, {
	    key: 'onDistrictChange',
	    value: function onDistrictChange(callback, e) {
	      var value = e.target.value;

	      this.props.actions.districtReset();
	      if (value != this.refs.district.props['default-value']) this.props.actions.getDeliveryShops(value);
	      callback(e);
	    }
	  }, {
	    key: 'onPayModesChange',
	    value: function onPayModesChange(callback, e) {
	      // $(findDOMNode(this.refs.pay_status)).val('COD');
	      // console.log('pay_modes change');
	      callback(e);
	    }
	  }, {
	    key: 'orderSrcsLevel1Change',
	    value: function orderSrcsLevel1Change(e) {
	      var value = e.target.value;

	      var all_order_srcs = this.props['form-data'].all_order_srcs;
	      //如果没有二级订单来源，则表明只是一个一级来源
	      if (all_order_srcs[1] && !all_order_srcs[1].filter(function (n) {
	        return n.parent_id == value;
	      }).length) {
	        this.props.actions.triggerFormUpdate('add_order', 'src_id', value); //此时只能模拟form表单更新
	      } else {
	          this.props.actions.resetFormUpdate('add_order', 'src_id');
	        }
	      this.setState({ selected_order_src_level1_id: value });
	    }
	  }, {
	    key: 'addProducts',
	    value: function addProducts() {
	      this.refs.productsModal.show();
	    }
	  }, {
	    key: 'showHistoryModal',
	    value: function showHistoryModal() {
	      this.refs.history_orders_modal.show();
	    }
	  }, {
	    key: 'checkGroupbuyPsd',
	    value: function checkGroupbuyPsd() {
	      var _this4 = this;

	      var _props$fields2 = this.props.fields;
	      var city_id = _props$fields2.city_id;
	      var coupon = _props$fields2.coupon;

	      coupon = coupon.value && coupon.value.trim();
	      var city_name;
	      if (city_id.value && city_id.value != _configAppConfig.SELECT_DEFAULT_VALUE) {
	        city_name = this.findSelectedOptionText('city');
	        city_name = city_name.substring(0, city_name.length - 1);
	      } else {
	        (0, _utilsIndex.Noty)('warning', '请先选择收货人所在城市');return;
	      }
	      if (coupon && _utilsIndex.form.isCoupon(coupon)) {
	        this.setState({ groupbuy_check_ing: true });
	        this.props.actions.checkGroupbuyPsd({ coupon: coupon, city_name: city_name }).done(function (data, msg) {
	          _this4.setState({ groupbuy_success: true, groupbuy_msg: msg || _react2['default'].createElement('i', { className: 'fa fa-check' }) });
	        }).fail(function (msg) {
	          _this4.setState({ groupbuy_success: false, groupbuy_msg: msg || '团购券验证有误，请手动确认！' });
	        }).always(function () {
	          _this4.setState({ groupbuy_check_ing: false });
	        });
	      } else {
	        (0, _utilsIndex.Noty)('warning', '请填写正确的团购密码');
	      }
	    }
	  }]);

	  return ManageAddForm;
	})(_react.Component);

	ManageAddForm.PropTypes = {
	  form: _react.PropTypes.shape({
	    all_delivery_time: _react.PropTypes.array.isRequired,
	    all_pay_status: _react.PropTypes.array.isRequired,
	    all_order_srcs: _react.PropTypes.array.isRequired,
	    delivery_stations: _react.PropTypes.array.isRequired,
	    all_pay_modes: _react.PropTypes.array.isRequired,
	    save_ing: _react.PropTypes.bool.isRequired,
	    save_success: _react.PropTypes.bool.isRequired
	  }).isRequired,
	  area: _react.PropTypes.shape({
	    provinces: _react.PropTypes.array.isRequired,
	    cities: _react.PropTypes.array.isRequired,
	    districts: _react.PropTypes.array.isRequired
	  }).isRequired,

	  actions: _react.PropTypes.shape({
	    getProvinces: _react.PropTypes.func.isRequired,
	    getOrderSrcs: _react.PropTypes.func.isRequired,
	    getDeliveryStations: _react.PropTypes.func.isRequired,
	    getPayModes: _react.PropTypes.func.isRequired,
	    createOrder: _react.PropTypes.func.isRequired
	  }).isRequired,

	  editable: _react.PropTypes.bool.isRequired,
	  order_id: _react.PropTypes.any.isRequired
	};

	function initManageOrderForm(initFunc) {
	  return (0, _reduxForm.reduxForm)({
	    form: 'add_order', //表单命名空间
	    fields: _configFormFields2['default'].add_order,
	    validate: validate,
	    touchOnBlur: true
	  }, initFunc)(ManageAddForm);
	}

	module.exports = exports['default'];

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _actionsOrders = __webpack_require__(290);

	var OrderManageActions = _interopRequireWildcard(_actionsOrders);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonLoading = __webpack_require__(306);

	var _commonRecipient_info = __webpack_require__(308);

	var _commonRecipient_info2 = _interopRequireDefault(_commonRecipient_info);

	var _configAppConfig = __webpack_require__(157);

	var _utilsIndex = __webpack_require__(160);

	var _commonOrder_products_detail = __webpack_require__(312);

	var _commonOrder_products_detail2 = _interopRequireDefault(_commonOrder_products_detail);

	var OrderRow = (function (_Component) {
	  _inherits(OrderRow, _Component);

	  function OrderRow() {
	    _classCallCheck(this, OrderRow);

	    _get(Object.getPrototypeOf(OrderRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(OrderRow, [{
	    key: 'render',
	    value: function render() {
	      var props = this.props;

	      var src_name = props.src_name.split(',');
	      var _order_status = _configAppConfig.order_status[props.status] || {};
	      return _react2['default'].createElement(
	        'tr',
	        { className: props.active_order_id == props.order_id ? 'active' : '', onClick: this.clickHandler.bind(this) },
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.order_id
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'time' },
	            props.created_time
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.owner_name,
	          _react2['default'].createElement('br', null),
	          props.owner_mobile
	        ),
	        _react2['default'].createElement(_commonRecipient_info2['default'], { data: props }),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.delivery_time
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'remark-in-table' },
	            props.remarks
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          { className: 'nowrap' },
	          src_name[0],
	          src_name[1] ? [_react2['default'].createElement('br', null), _react2['default'].createElement(
	            'span',
	            { className: 'bordered bg-warning' },
	            src_name[1]
	          )] : null
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { style: { color: _order_status.color || 'inherit' } },
	            _order_status.value
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          'todo'
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.updated_by
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'time' },
	            props.updated_time
	          )
	        )
	      );
	    }
	  }, {
	    key: 'clickHandler',
	    value: function clickHandler() {
	      this.props.checkHistoryOrder(this.props.order_id);
	    }
	  }]);

	  return OrderRow;
	})(_react.Component);

	var HistoryOrders = (function (_Component2) {
	  _inherits(HistoryOrders, _Component2);

	  function HistoryOrders(props) {
	    _classCallCheck(this, HistoryOrders);

	    _get(Object.getPrototypeOf(HistoryOrders.prototype), 'constructor', this).call(this, props);
	    this.search = this.search.bind(this);
	    this.show = this.show.bind(this);
	    this.hideCallback = this.hideCallback.bind(this);
	    this.state = {
	      page_size: 3,
	      phone_num: this.props.phone_num
	    };
	  }

	  _createClass(HistoryOrders, [{
	    key: 'render',
	    value: function render() {
	      var checkHistoryOrder = this.props.checkHistoryOrder;
	      var _props$data = this.props.data;
	      var page_no = _props$data.page_no;
	      var total = _props$data.total;
	      var list = _props$data.list;
	      var check_order_info = _props$data.check_order_info;
	      var active_order_id = _props$data.active_order_id;
	      var viewDetail = this.viewDetail;

	      var content = list.map(function (n, i) {
	        return _react2['default'].createElement(OrderRow, _extends({ key: n.order_id }, _extends({}, n, { active_order_id: active_order_id, viewDetail: viewDetail, checkHistoryOrder: checkHistoryOrder })));
	      });
	      return _react2['default'].createElement(
	        _commonStd_modal2['default'],
	        { ref: 'modal', size: 'lg', footer: false, title: '历史订单' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '手机号码 ',
	            _react2['default'].createElement('input', { value: this.state.phone_num, onChange: this.onPhonenumChange.bind(this), className: 'form-control input-xs' })
	          ),
	          '　',
	          _react2['default'].createElement(
	            'button',
	            { onClick: this.search, className: 'btn btn-default btn-xs' },
	            '查询'
	          ),
	          '　',
	          _react2['default'].createElement(
	            'button',
	            { onClick: this.copyOrder.bind(this), className: 'btn btn-default btn-xs' },
	            '复制订单'
	          ),
	          _react2['default'].createElement(
	            'span',
	            { className: 'pull-right theme' },
	            window.xfxb.user.name
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'table-responsive' },
	          _react2['default'].createElement(
	            'table',
	            { className: 'table table-hover text-center' },
	            _react2['default'].createElement(
	              'thead',
	              null,
	              _react2['default'].createElement(
	                'tr',
	                null,
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '订单号'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '下单时间'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '下单人'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '收货人信息'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '配送时间'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '备注'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '订单来源'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '订单状态'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '发票备注'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '操作人'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '操作时间'
	                )
	              )
	            ),
	            _react2['default'].createElement(
	              'tbody',
	              null,
	              content.length ? content : (0, _commonLoading.get_table_empty)()
	            )
	          )
	        ),
	        _react2['default'].createElement(_commonPagination2['default'], {
	          page_no: page_no,
	          total_count: total,
	          page_size: this.state.page_size,
	          onPageChange: this.onPageChange
	        }),
	        check_order_info ? _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              null,
	              '历史订单产品详情'
	            ),
	            _react2['default'].createElement(_commonOrder_products_detail2['default'], { products: check_order_info.products })
	          )
	        ) : null
	      );
	    }
	  }, {
	    key: 'onPhonenumChange',
	    value: function onPhonenumChange(e) {
	      this.setState({ phone_num: e.target.value });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.phone_num != this.props.phone_num) {
	        this.setState({ phone_num: nextProps.phone_num });
	      }
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.setState({ page_no: page });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'search',
	    value: function search() {
	      var _props = this.props;
	      var getHistoryOrders = _props.getHistoryOrders;
	      var page_no = _props.data.page_no;
	      var _state = this.state;
	      var phone_num = _state.phone_num;
	      var page_size = _state.page_size;

	      if (!phone_num) {
	        return;
	      } else if (_utilsIndex.form.isMobile(phone_num)) {
	        getHistoryOrders({ owner_mobile: phone_num, page_no: page_no, page_size: page_size });
	      } else {
	        (0, _utilsIndex.Noty)('warning', '错误的电话号码');
	      }
	    }
	  }, {
	    key: 'copyOrder',
	    value: function copyOrder() {
	      var _this = this;

	      var _props2 = this.props;
	      var check_order_info = _props2.data.check_order_info;
	      var getCopyOrderById = _props2.getCopyOrderById;
	      var copyOrder = _props2.copyOrder;

	      if (check_order_info) {
	        getCopyOrderById(check_order_info.order_id).done(function () {
	          copyOrder();
	          _this.refs.modal.hide();
	        }).fail(function (msg) {
	          (0, _utilsIndex.Noty)('error', msg || '服务器忙');
	        });
	      } else {
	        (0, _utilsIndex.Noty)('warning', '请点击选择你想要复制的订单');
	      }
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.refs.modal.show();
	      this.search();
	    }
	  }, {
	    key: 'hideCallback',
	    value: function hideCallback() {}
	  }]);

	  return HistoryOrders;
	})(_react.Component);

	HistoryOrders.PropTypes = {
	  data: _react.PropTypes.object.isRequired,
	  getHistoryOrders: _react.PropTypes.func.isRequired,
	  checkHistoryOrder: _react.PropTypes.func.isRequired,
	  getCopyOrderById: _react.PropTypes.func.isRequired,
	  copyOrder: _react.PropTypes.func.isRequired
	};

	exports['default'] = HistoryOrders;
	module.exports = exports['default'];
	/*订单来源*/ /*订单状态*/

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.isSrc = isSrc;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _reduxForm = __webpack_require__(242);

	var xxx = _interopRequireWildcard(_reduxForm);

	// import store from 'stores/configureStore'; //循环引用

	var _storesGetter = __webpack_require__(325);

	var _configAppConfig = __webpack_require__(157);

	var _actionsOrder_products = __webpack_require__(326);

	var _utilsIndex = __webpack_require__(160);

	var _actionsForm = __webpack_require__(293);

	var _configFormFields = __webpack_require__(294);

	var _configFormFields2 = _interopRequireDefault(_configFormFields);

	function preCheck() {
	  var pathname = location.pathname;

	  return pathname.startsWith('/om/index') && (0, _storesGetter.getGlobalState)();
	}

	function isSrc(name, src_id) {
	  if (preCheck()) {
	    var _getGlobalState = (0, _storesGetter.getGlobalState)();

	    var all_order_srcs = _getGlobalState.orderManageForm.mainForm.all_order_srcs;

	    //注意all_order_srcs是一个二维数组，第一个是一级，第二个是二维，src_id可能位于一维，也可能在二维
	    if (all_order_srcs.length > 1 && src_id) {
	      var src1 = all_order_srcs[0].filter(function (n) {
	        return n.name === name;
	      })[0] || {};
	      if (src1.id == src_id) {
	        return true;
	      } else {
	        var src2 = all_order_srcs[1].filter(function (n) {
	          return n.id == src_id;
	        })[0];
	        if (src2 && src2.parent_id == src1.id) {
	          return true;
	        }
	      }
	    }
	  }
	}

	function getMode(mode_name) {
	  var _getGlobalState2 = (0, _storesGetter.getGlobalState)();

	  var all_pay_modes = _getGlobalState2.orderManageForm.mainForm.all_pay_modes;

	  return all_pay_modes.filter(function (n) {
	    return n.text == mode_name;
	  })[0] || {};
	}

	exports['default'] = _reduxForm.reducer.plugin({
	  add_order: function add_order(state, action) {
	    //这里注意：所有的action都会进入，所以得使用以下判断, 以确保当前form为add_order
	    if (action && action.form == 'add_order') {
	      //重新初始化表单
	      if (action.type == _actionsForm.REDUX_FORM_REINIT) {
	        _configFormFields2['default']['add_order'].forEach(function (n) {
	          state[n].value = state[n].initial;
	        });
	        return _extends({}, state);
	      } else if (action.field == 'owner_mobile') {
	        //电话号码
	        switch (action.type) {
	          case _reduxForm.actionTypes.FOCUS:
	            state.owner_mobile.focus = true;
	            return _extends({}, state);
	          case _reduxForm.actionTypes.BLUR:
	            state.owner_mobile.focus = false;
	            return _extends({}, state);
	          default:
	            return state;
	        }
	      } else if (action.field == 'recipient_mobile') {
	        switch (action.type) {
	          case _reduxForm.actionTypes.FOCUS:
	            state.recipient_mobile.focus = true;
	            return _extends({}, state);
	          case _reduxForm.actionTypes.BLUR:
	            state.recipient_mobile.focus = false;
	            return _extends({}, state);
	          default:
	            return state;
	        }
	      } else {
	        //订单来源，支付方式，支付状态，产品应收 联动
	        switch (action.type) {
	          case _reduxForm.actionTypes.FOCUS:
	          case _reduxForm.actionTypes.BLUR:
	          case _reduxForm.actionTypes.CHANGE:
	          case _reduxForm.actionTypes.RESET:
	            if (action.field == 'src_id' || action.key == 'src_id') {
	              state.pay_modes_id = _extends({}, state.pay_modes_id, getPayModesId(state, action));
	              state.pay_status = _extends({}, state.pay_status, getPayStatus(state, action));
	            }
	            (0, _utilsIndex.delay)(function () {
	              var p = _configAppConfig.pay_status[state.pay_status.value];
	              if (p == '已付款' || p == '部分付款' || p == '货到付款' || action.field == 'pay_status' || action.key == 'pay_status') {
	                (0, _storesGetter.getGlobalStore)().dispatch((0, _actionsOrder_products.updateConfirmProductDiscountPrice)());
	              }
	            });
	            return _extends({}, state);
	          default:
	            return state;
	        }
	      }
	    } else {
	      return state;
	    }
	  }
	});

	function getPayModesId(state, action) {
	  var src_id = state.src_id.value;
	  var pay_modes_id = state.pay_modes_id.value;
	  if (src_id) {
	    if (action.type == _reduxForm.actionTypes.RESET) {
	      return { value: _configAppConfig.SELECT_DEFAULT_VALUE };
	    } else {
	      if (isSrc('团购网站', src_id)) {
	        return { value: getMode('团购券').id }; //团购券id（TODO）
	      } else if (isSrc('有赞微商城', src_id)) {
	          return { value: getMode('微信支付').id }; //微信支付id
	        } else if (isSrc('400电话', src_id)) {
	            // var mode_cash = getMode('货到付款（现金）');
	            // var mode_card = getMode('货到付款（POS）');
	            var mode_cash = getMode('现金');
	            var mode_card = getMode('现金');
	            if (pay_modes_id != mode_cash.id || pay_modes_id != mode_card.id) {
	              return { value: mode_cash.id };
	            }
	          } else {
	            return { touched: false, value: _configAppConfig.SELECT_DEFAULT_VALUE, visited: false };
	          }
	    }
	  }
	}

	function getPayStatus(state, action) {
	  var src_id = state.src_id.value;
	  var pay_status = state.pay_status.value;
	  if (src_id) {
	    if (action.type == _reduxForm.actionTypes.RESET) {
	      return { value: _configAppConfig.SELECT_DEFAULT_VALUE };
	    } else {
	      if (isSrc('团购网站', src_id) || isSrc('有赞微商城', src_id)) {
	        var _getGlobalState3 = (0, _storesGetter.getGlobalState)();

	        var confirm_list = _getGlobalState3.orderManageForm.products.confirm_list;

	        //属于团购网站
	        if (confirm_list.length > 1 || confirm_list[0] && confirm_list[0].num > 1) {
	          return { value: 'PARTPAYED' }; //部分付款（TODO）
	        } else {
	            return { value: 'PAYED' }; //已付款（TODO）
	          }
	      } else if (isSrc('400电话', src_id)) {
	          return { value: 'COD' }; //货到付款
	        } else {
	            return { touched: false, value: _configAppConfig.SELECT_DEFAULT_VALUE, visited: false };
	          }
	    }
	  }
	}

/***/ },
/* 325 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getGlobalStore = getGlobalStore;
	exports.getGlobalState = getGlobalState;

	function getGlobalStore() {
	  return window.STORE;
	}

	function getGlobalState() {
	  var s = getGlobalStore();
	  return s && s.getState();
	}

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.getCategories = getCategories;
	exports.searchProducts = searchProducts;
	exports.selectProduct = selectProduct;
	exports.changeProductNum = changeProductNum;
	exports.deleteProduct = deleteProduct;
	exports.confirmAllSelectedProducts = confirmAllSelectedProducts;
	exports.cancelAllSelectedProducts = cancelAllSelectedProducts;
	exports.deleteConfirmProduct = deleteConfirmProduct;
	exports.productAttrChange = productAttrChange;
	exports.updateConfirmProductDiscountPrice = updateConfirmProductDiscountPrice;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var GOT_CATEGORIES = 'GOT_CATEGORIES';
	exports.GOT_CATEGORIES = GOT_CATEGORIES;

	function getCategories() {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].categories.toString(), null, GOT_CATEGORIES);
	  // return TEST({1: '11111', 2: '2222'}, GOT_CATEGORIES);
	}

	var SEARCH_PRODUCTS = 'SEARCH_PRODUCTS';
	exports.SEARCH_PRODUCTS = SEARCH_PRODUCTS;

	function searchProducts(query_data) {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].products.toString(), query_data, SEARCH_PRODUCTS);
	  /*
	    return TEST({
	      list: [
	        {
	          product_id: 1,
	          name: "zhang",
	          size: "zhang1",
	          category_name: "类型1",
	          original_price: 20000,
	  
	          skus: [{
	            sku_id: 22,
	            website: "website2",
	            discount_price: 18000,
	            is_local_site: "0",
	            is_delivery: "1",
	          }, {
	            sku_id: 23,
	            website: "website2",
	            discount_price: 19000,
	            is_local_site: "1",
	            is_delivery: "0",
	          }]
	        },
	        {
	          product_id: 2,
	          name: "li",
	          size: "li3",
	          category_name: "类型3",
	          original_price: 20000,
	          
	          skus: [{
	            sku_id: 24,
	            website: "website3",
	            discount_price: 30000,
	            is_local_site: "1",
	            is_delivery: "1",
	          }]
	        }
	      ],
	      total: 2
	    }, SEARCH_PRODUCTS);
	  */
	}

	var SELECT_PRODUCT = 'SELECT_PRODUCT';
	exports.SELECT_PRODUCT = SELECT_PRODUCT;

	function selectProduct(sku_info) {
	  return {
	    type: SELECT_PRODUCT,
	    data: sku_info
	  };
	}

	var CHANGE_PRODUCT_NUM = 'CHANGE_PRODUCT_NUM';
	exports.CHANGE_PRODUCT_NUM = CHANGE_PRODUCT_NUM;

	function changeProductNum(sku_id, num) {
	  return {
	    type: CHANGE_PRODUCT_NUM,
	    sku_id: sku_id,
	    num: num
	  };
	}

	var DELETE_SELECTED_PRODUCT = 'DELETE_SELECTED_PRODUCT';
	exports.DELETE_SELECTED_PRODUCT = DELETE_SELECTED_PRODUCT;

	function deleteProduct(sku_info) {
	  return {
	    type: DELETE_SELECTED_PRODUCT,
	    data: sku_info
	  };
	}

	var CONFIRM_ALL_SELECTED_PRODUCTS = 'CONFIRM_ALL_SELECTED_PRODUCTS';
	exports.CONFIRM_ALL_SELECTED_PRODUCTS = CONFIRM_ALL_SELECTED_PRODUCTS;

	function confirmAllSelectedProducts() {
	  return {
	    type: CONFIRM_ALL_SELECTED_PRODUCTS
	  };
	}

	var CANCEL_ALL_SELECTED_PRODUCTS = 'CANCEL_ALL_SELECTED_PRODUCTS';
	exports.CANCEL_ALL_SELECTED_PRODUCTS = CANCEL_ALL_SELECTED_PRODUCTS;

	function cancelAllSelectedProducts() {
	  return {
	    type: CANCEL_ALL_SELECTED_PRODUCTS
	  };
	}

	var DELETE_CONFIRM_PRODUCT = 'DELETE_CONFIRM_PRODUCT';
	exports.DELETE_CONFIRM_PRODUCT = DELETE_CONFIRM_PRODUCT;

	function deleteConfirmProduct(sku_info) {
	  return {
	    type: DELETE_CONFIRM_PRODUCT,
	    data: sku_info
	  };
	}

	//
	var CONFIRM_PRODUCT_ATTR_CHANGE = 'CONFIRM_PRODUCT_ATTR_CHANGE';
	exports.CONFIRM_PRODUCT_ATTR_CHANGE = CONFIRM_PRODUCT_ATTR_CHANGE;

	function productAttrChange(data) {
	  return {
	    type: CONFIRM_PRODUCT_ATTR_CHANGE,
	    data: data
	  };
	}

	var UPDATE_CONFIRM_PRODUCT_DISCOUNT_PRICE = 'UPDATE_CONFIRM_PRODUCT_DISCOUNT_PRICE';
	exports.UPDATE_CONFIRM_PRODUCT_DISCOUNT_PRICE = UPDATE_CONFIRM_PRODUCT_DISCOUNT_PRICE;

	function updateConfirmProductDiscountPrice() {
	  return {
	    type: UPDATE_CONFIRM_PRODUCT_DISCOUNT_PRICE
	  };
	}

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _manage_order_form = __webpack_require__(322);

	var _manage_order_form2 = _interopRequireDefault(_manage_order_form);

	var _configAppConfig = __webpack_require__(157);

	exports['default'] = (0, _manage_order_form2['default'])(function (state) {
	  return {
	    //赋初始值
	    initialValues: state.orderManageForm.mainForm.data
	  };
	});
	module.exports = exports['default'];

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * form表单下面已添加进来的商品
	 */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _manage_add_products_modal = __webpack_require__(329);

	var _manage_add_products_modal2 = _interopRequireDefault(_manage_add_products_modal);

	var _actionsOrder_products = __webpack_require__(326);

	var ProductsActions = _interopRequireWildcard(_actionsOrder_products);

	var ManageAddProducts = (function (_Component) {
	  _inherits(ManageAddProducts, _Component);

	  function ManageAddProducts() {
	    _classCallCheck(this, ManageAddProducts);

	    _get(Object.getPrototypeOf(ManageAddProducts.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ManageAddProducts, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var confirm_list = _props.confirm_list;
	      var dispatch = _props.dispatch;

	      var list = confirm_list.map(function (n) {
	        return _react2['default'].createElement(AddedProductsRow, { key: n.sku_id, data: n, dispatch: dispatch });
	      });
	      return _react2['default'].createElement(
	        'div',
	        null,
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group' },
	          '选择产品：',
	          _react2['default'].createElement(
	            'button',
	            { onClick: this.addProducts.bind(this), className: 'btn btn-xs btn-theme' },
	            '添加'
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'table-responsive' },
	          _react2['default'].createElement(
	            'table',
	            { className: 'table text-center' },
	            _react2['default'].createElement(
	              'thead',
	              null,
	              _react2['default'].createElement(
	                'tr',
	                null,
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '产品名称'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '规格'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '原价'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '数量'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '实际售价'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '应收金额'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '巧克力牌'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '祝福贺卡'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '产品图册'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '自定义名称'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '自定义描述'
	                ),
	                _react2['default'].createElement(
	                  'th',
	                  null,
	                  '操作'
	                )
	              )
	            ),
	            _react2['default'].createElement(
	              'tbody',
	              null,
	              list
	            )
	          )
	        ),
	        _react2['default'].createElement(_manage_add_products_modal2['default'], _extends({ ref: 'productsModal' }, this.props))
	      );
	    }
	  }, {
	    key: 'addProducts',
	    value: function addProducts() {
	      this.refs.productsModal.show();
	    }
	  }]);

	  return ManageAddProducts;
	})(_react.Component);

	exports['default'] = ManageAddProducts;

	ManageAddProducts.PropTypes = {
	  products_choosing: _react.PropTypes.object.isRequired,
	  dispatch: _react.PropTypes.func.isRequired
	};

	var AddedProductsRow = _react2['default'].createClass({
	  displayName: 'AddedProductsRow',

	  getInitialState: function getInitialState() {
	    return {
	      editable: false,
	      edit_input_classname: 'product-editable-form'
	    };
	  },
	  render: function render() {
	    var handleChange = this.handleChange;
	    var _state = this.state;
	    var editable = _state.editable;
	    var edit_input_classname = _state.edit_input_classname;
	    var _props$data = this.props.data;
	    var sku_id = _props$data.sku_id;
	    var name = _props$data.name;
	    var size = _props$data.size;
	    var original_price = _props$data.original_price;
	    var num = _props$data.num;
	    var discount_price = _props$data.discount_price;
	    var amount = _props$data.amount;
	    var choco_board = _props$data.choco_board;
	    var greeting_card = _props$data.greeting_card;
	    var atlas = _props$data.atlas;
	    var custom_name = _props$data.custom_name;
	    var custom_desc = _props$data.custom_desc;

	    return _react2['default'].createElement(
	      'tr',
	      { className: 'form-inline' },
	      _react2['default'].createElement(
	        'td',
	        null,
	        name
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        size
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        '￥',
	        original_price / 100
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        num
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        editable ? _react2['default'].createElement('input', { value: discount_price, onChange: handleChange.bind(this, 'discount_price'), className: edit_input_classname, style: { width: 50 }, type: 'text' }) : '￥' + discount_price
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        editable ? _react2['default'].createElement('input', { value: amount, onChange: handleChange.bind(this, 'amount'), className: edit_input_classname, style: { width: 50 }, type: 'text' }) : '￥' + amount
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        editable ? _react2['default'].createElement('textarea', { value: choco_board, onChange: handleChange.bind(this, 'choco_board'), className: edit_input_classname, rows: '2', cols: '15' }) : choco_board
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        editable ? _react2['default'].createElement('textarea', { value: greeting_card, onChange: handleChange.bind(this, 'greeting_card'), className: edit_input_classname, rows: '2', cols: '15' }) : greeting_card
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        _react2['default'].createElement('input', { checked: atlas, onChange: handleChange.bind(this, 'atlas'), disabled: !editable, className: edit_input_classname, type: 'checkbox' })
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        editable ? _react2['default'].createElement('textarea', { value: custom_name, onChange: handleChange.bind(this, 'custom_name'), className: edit_input_classname, rows: '2', cols: '15' }) : custom_name
	      ),
	      _react2['default'].createElement(
	        'td',
	        null,
	        editable ? _react2['default'].createElement('textarea', { value: custom_desc, onChange: handleChange.bind(this, 'custom_desc'), className: edit_input_classname, rows: '2', cols: '15' }) : custom_desc
	      ),
	      _react2['default'].createElement(
	        'td',
	        { className: 'nowrap' },
	        editable ? _react2['default'].createElement(
	          'a',
	          { key: 'save', href: 'javascript:;' },
	          '[保存]'
	        ) : _react2['default'].createElement(
	          'a',
	          { key: 'edit', onClick: this.edit.bind(this, true), href: 'javascript:;', className: edit_input_classname },
	          '[编辑]'
	        ),
	        ' ',
	        _react2['default'].createElement(
	          'a',
	          { onClick: this['delete'].bind(this, this.props.data), href: 'javascript:;' },
	          '[删除]'
	        )
	      )
	    );
	  },
	  handleChange: function handleChange(attr_name, e) {
	    this.props.dispatch(ProductsActions.productAttrChange({
	      sku_id: this.props.data.sku_id,
	      attr: {
	        name: attr_name,
	        value: e.target.getAttribute('type') == 'text' || e.target.nodeName.toLowerCase() == 'textarea' ? e.target.value : e.target.checked
	      }
	    }));
	  },
	  edit: function edit(editable) {
	    this.setState({ editable: !!editable });
	  },
	  'delete': function _delete(data) {
	    this.props.dispatch((0, _actionsOrder_products.deleteConfirmProduct)(data));
	  },
	  componentDidMount: function componentDidMount() {
	    var self = this;
	    $('#app').on('click', this._close_edit);
	  },
	  _close_edit: function _close_edit(e) {
	    if (!$(e.target).hasClass(this.state.edit_input_classname)) {
	      this.edit(false);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    $('#app').off('click', this._close_edit);
	  }
	});

	AddedProductsRow.PropTypes = {
	  dispatch: _react.PropTypes.func.isRequired,
	  data: _react.PropTypes.shape({
	    name: _react.PropTypes.string.isRequired,
	    size: _react.PropTypes.string.isRequired,
	    original_price: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	    num: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	    discount_price: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
	  })
	};
	module.exports = exports['default'];

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonNumber_picker = __webpack_require__(330);

	var _commonNumber_picker2 = _interopRequireDefault(_commonNumber_picker);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonSelect_group = __webpack_require__(331);

	var _commonSelect_group2 = _interopRequireDefault(_commonSelect_group);

	var _commonLoading = __webpack_require__(306);

	var _actionsOrder_products = __webpack_require__(326);

	var OrderProductsActions = _interopRequireWildcard(_actionsOrder_products);

	var _configAppConfig = __webpack_require__(157);

	var _utilsIndex = __webpack_require__(160);

	var ProductsModal = (function (_Component) {
	  _inherits(ProductsModal, _Component);

	  function ProductsModal(props) {
	    _classCallCheck(this, ProductsModal);

	    _get(Object.getPrototypeOf(ProductsModal.prototype), 'constructor', this).call(this, props);
	    this.show = this.show.bind(this);
	    this.hide = this.hide.bind(this);
	    this.onCancel = this.onCancel.bind(this);
	    this.state = {
	      sku_name: '',
	      category_id: _configAppConfig.SELECT_DEFAULT_VALUE,
	      page_no: 0,
	      page_size: 8
	    };
	  }

	  _createClass(ProductsModal, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var all_categories = _props.all_categories;
	      var _props$search_results = _props.search_results;
	      var total = _props$search_results.total;
	      var list = _props$search_results.list;
	      var selected_list = _props.selected_list;
	      var dispatch = _props.dispatch;

	      var s = this.state;
	      var product_list = list.map(function (n, i) {
	        return _react2['default'].createElement(ProductSet, { data: n, key: i, dispatch: dispatch });
	      });
	      var selected_list = selected_list.map(function (n, i) {
	        return _react2['default'].createElement(ProductSelectedRow, { data: n, key: n.sku_id + '' + i, dispatch: dispatch });
	      });
	      return _react2['default'].createElement(
	        'div',
	        { ref: 'modal', 'aria-hidden': 'false', 'aria-labelledby': 'myModalLabel', role: 'dialog', className: 'modal fade' },
	        _react2['default'].createElement('div', { className: 'modal-backdrop fade' }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'modal-dialog modal-lg' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'modal-content' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-header' },
	              _react2['default'].createElement(
	                'button',
	                { onClick: this.onCancel, 'aria-hidden': 'true', 'data-dismiss': 'modal', className: 'close', type: 'button' },
	                '×'
	              ),
	              _react2['default'].createElement(
	                'h4',
	                { className: 'modal-title' },
	                '选择产品'
	              )
	            ),
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-body' },
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement('input', { value: s.sku_name, onChange: this.handleSkuName.bind(this), className: 'form-control input-xs', placeholder: '输入产品名称' }),
	                ' ',
	                _react2['default'].createElement(_commonSelect_group2['default'], { value: s.category_id, onChange: this.onCategoryChange.bind(this), options: all_categories, 'default-text': '选择产品分类' }),
	                ' ',
	                _react2['default'].createElement(
	                  'button',
	                  { onClick: this.search.bind(this), className: 'btn btn-xs btn-default' },
	                  _react2['default'].createElement('i', { className: 'fa fa-search' }),
	                  ' 查询'
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'table-responsive table-modal' },
	                _react2['default'].createElement(
	                  'table',
	                  { className: 'table table-hover table-click text-center' },
	                  _react2['default'].createElement(
	                    'thead',
	                    null,
	                    _react2['default'].createElement(
	                      'tr',
	                      null,
	                      _react2['default'].createElement('th', null),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '规格'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品类型名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '所属网站'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '价格'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '是否本站产品'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '是否配送上门'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '管理操作'
	                      )
	                    )
	                  ),
	                  product_list.length ? product_list : _react2['default'].createElement(
	                    'tbody',
	                    null,
	                    (0, _commonLoading.get_table_empty)()
	                  )
	                )
	              ),
	              _react2['default'].createElement(_commonPagination2['default'], {
	                page_no: s.page_no,
	                total_count: total,
	                page_size: s.page_size,
	                onPageChange: this.onPageChange.bind(this)
	              }),
	              _react2['default'].createElement('hr', { className: 'dotted' }),
	              _react2['default'].createElement(
	                'div',
	                null,
	                '产品管理 >> 选择列表'
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'table-responsive' },
	                _react2['default'].createElement(
	                  'table',
	                  { className: 'table table-hover text-center' },
	                  _react2['default'].createElement(
	                    'thead',
	                    null,
	                    _react2['default'].createElement(
	                      'tr',
	                      null,
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '规格'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品类型名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '所属网站'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '价格'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '数量'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '是否本站'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '是否配送'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '管理操作'
	                      )
	                    )
	                  ),
	                  _react2['default'].createElement(
	                    'tbody',
	                    null,
	                    selected_list
	                  )
	                )
	              )
	            ),
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-footer' },
	              _react2['default'].createElement(
	                'button',
	                { onClick: this.onCancel, type: 'button', className: 'btn btn-sm btn-default', 'data-dismiss': 'modal' },
	                '取消'
	              ),
	              _react2['default'].createElement(
	                'button',
	                { onClick: this.onConfirm.bind(this), type: 'button', className: 'btn btn-sm btn-theme' },
	                '确定'
	              )
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'handleSkuName',
	    value: function handleSkuName(e) {
	      this.setState({ sku_name: e.target.value });
	    }
	  }, {
	    key: 'onCategoryChange',
	    value: function onCategoryChange(e) {
	      this.setState({ category_id: e.target.value });
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _state = this.state;
	      var sku_name = _state.sku_name;
	      var category_id = _state.category_id;
	      var page_no = _state.page_no;
	      var page_size = _state.page_size;

	      this.props.dispatch(OrderProductsActions.searchProducts({
	        name: sku_name, page_no: page_no, page_size: page_size,
	        category_id: category_id == _configAppConfig.SELECT_DEFAULT_VALUE ? undefined : category_id
	      }));
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.setState({ page_no: page }, this.search);
	    }
	  }, {
	    key: 'onCancel',
	    value: function onCancel() {
	      this.props.dispatch(OrderProductsActions.cancelAllSelectedProducts());
	    }
	  }, {
	    key: 'onConfirm',
	    value: function onConfirm() {
	      this.props.dispatch(OrderProductsActions.confirmAllSelectedProducts());
	      this.hide();
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.props.dispatch(OrderProductsActions.getCategories());
	      $(this.refs.modal).modal('show');
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      $(this.refs.modal).modal('hide');
	    }
	  }]);

	  return ProductsModal;
	})(_react.Component);

	exports['default'] = ProductsModal;

	ProductsModal.PropTypes = {
	  dispatch: _react.PropTypes.func.isRequired,
	  all_categories: _react.PropTypes.array.isRequired,
	  search_results: _react.PropTypes.array.isRequired
	};

	var ProductSet = (function (_Component2) {
	  _inherits(ProductSet, _Component2);

	  function ProductSet(props) {
	    _classCallCheck(this, ProductSet);

	    _get(Object.getPrototypeOf(ProductSet.prototype), 'constructor', this).call(this, props);
	    this.toggle = this.toggle.bind(this);
	    this.state = {
	      active: false
	    };
	  }

	  _createClass(ProductSet, [{
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      var yes_or_no = this.yes_or_no;
	      var choose = this.choose;
	      var active = this.state.active;

	      //is_local_site, is_delivery : "1" / "0"
	      var _props$data = this.props.data;
	      var product_id = _props$data.product_id;
	      var name = _props$data.name;
	      var size = _props$data.size;
	      var category_name = _props$data.category_name;
	      var original_price = _props$data.original_price;
	      var skus = _props$data.skus;

	      var hasOthers = skus.length != 1;
	      var sku0 = skus[0];

	      var head = _react2['default'].createElement(
	        'tr',
	        { key: sku0.sku_id, className: hasOthers ? "clickable" : "", onClick: hasOthers ? this.toggle : null },
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement('input', { type: 'checkbox', checked: sku0.checked, onClick: choose.bind(this, sku0), disabled: sku0.checked })
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          name
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          size
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          category_name
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          sku0.website
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          '￥',
	          (0, _utilsIndex.toFixed)(sku0.discount_price / 100, 2)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          yes_or_no(sku0.is_local_site)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          yes_or_no(sku0.is_delivery)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          sku0.checked ? _react2['default'].createElement(
	            'span',
	            { className: 'silver' },
	            '[选择]'
	          ) : _react2['default'].createElement(
	            'a',
	            { onClick: choose.bind(this, sku0), href: 'javascript:;' },
	            '[选择]'
	          )
	        )
	      );

	      var body = skus.map(function (n, i) {
	        if (i == 0) {
	          //滤出第一个
	          return null;
	        }
	        return _react2['default'].createElement(
	          'tr',
	          { key: n.sku_id + '' + i, className: active ? "" : "hidden" },
	          _react2['default'].createElement(
	            'td',
	            null,
	            _react2['default'].createElement('input', { type: 'checkbox', checked: n.checked, onClick: choose.bind(_this, n), disabled: n.checked })
	          ),
	          _react2['default'].createElement('td', { colSpan: '3' }),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.website
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            '￥',
	            (0, _utilsIndex.toFixed)(n.discount_price / 100, 2)
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            yes_or_no(n.is_local_site)
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            yes_or_no(n.is_delivery)
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.checked ? _react2['default'].createElement(
	              'span',
	              { className: 'silver' },
	              '[选择]'
	            ) : _react2['default'].createElement(
	              'a',
	              { onClick: choose.bind(_this, n), href: 'javascript:;' },
	              '[选择]'
	            )
	          )
	        );
	      });

	      return _react2['default'].createElement(
	        'tbody',
	        null,
	        [head, body]
	      );
	    }
	  }, {
	    key: 'yes_or_no',
	    value: function yes_or_no(d) {
	      return d == 1 ? '是' : '否';
	    }
	  }, {
	    key: 'toggle',
	    value: function toggle() {
	      this.setState({ active: !this.state.active });
	    }
	  }, {
	    key: 'choose',
	    value: function choose(sku, e) {
	      //整合数据
	      var copy = _extends({}, this.props.data, sku);
	      delete copy.skus;
	      this.props.dispatch(OrderProductsActions.selectProduct(copy));
	      e.stopPropagation();
	    }
	  }]);

	  return ProductSet;
	})(_react.Component);

	ProductSet.PropTypes = {
	  data: _react.PropTypes.array.isRequired,
	  dispatch: _react.PropTypes.func.isRequired
	};

	var ProductSelectedRow = (function (_Component3) {
	  _inherits(ProductSelectedRow, _Component3);

	  function ProductSelectedRow() {
	    _classCallCheck(this, ProductSelectedRow);

	    _get(Object.getPrototypeOf(ProductSelectedRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ProductSelectedRow, [{
	    key: 'yes_or_no',
	    value: function yes_or_no(d) {
	      return d == 1 ? '是' : '否';
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var data = this.props.data;
	      var yes_or_no = this.yes_or_no;

	      return _react2['default'].createElement(
	        'tr',
	        null,
	        _react2['default'].createElement(
	          'td',
	          null,
	          data.name
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          data.size
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          data.category_name
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          data.website
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          '￥',
	          (0, _utilsIndex.toFixed)(data.discount_price / 100, 2)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(_commonNumber_picker2['default'], { value: data.num, onChange: this.onNumChange.bind(this) })
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          yes_or_no(data.is_local_site)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          yes_or_no(data.is_delivery)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: this['delete'].bind(this), href: 'javascript:;' },
	            '[ 删除 ]'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'onNumChange',
	    value: function onNumChange(num) {
	      var _props2 = this.props;
	      var sku_id = _props2.data.sku_id;
	      var dispatch = _props2.dispatch;

	      dispatch(OrderProductsActions.changeProductNum(sku_id, num));
	    }
	  }, {
	    key: 'delete',
	    value: function _delete() {
	      this.props.dispatch(OrderProductsActions.deleteProduct(this.props.data));
	    }
	  }]);

	  return ProductSelectedRow;
	})(_react.Component);

	ProductSelectedRow.PropTypes = {
	  data: _react.PropTypes.object.isRequired,
	  dispatch: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var NumberPicker = _react2['default'].createClass({
	  displayName: 'NumberPicker',

	  getDefaultProps: function getDefaultProps() {
	    return {
	      step: 1,
	      value: 1,
	      'lower_limit': 1,
	      'upper_limit': 100000
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      value: this.props.value
	    };
	  },
	  componentDidMount: function componentDidMount() {},
	  render: function render() {
	    return _react2['default'].createElement(
	      'div',
	      { className: 'number-picker form-inline' },
	      _react2['default'].createElement(
	        'a',
	        { onClick: this.minus, href: 'javascript:;' },
	        _react2['default'].createElement('i', { className: 'fa fa-minus' })
	      ),
	      _react2['default'].createElement('input', { value: this.state.value, onChange: this.input, className: 'form-control input-xs' }),
	      _react2['default'].createElement(
	        'a',
	        { onClick: this.add, href: 'javascript:;' },
	        _react2['default'].createElement('i', { className: 'fa fa-plus' })
	      )
	    );
	  },
	  minus: function minus() {
	    var value = parseInt(this.state.value) || this.props.lower_limit;
	    var _props = this.props;
	    var step = _props.step;
	    var lower_limit = _props.lower_limit;

	    value = value - step >= lower_limit ? value - step : value;
	    this.setState({ value: value }, function () {
	      this.props.onChange(value);
	    });
	  },
	  add: function add() {
	    var value = parseInt(this.state.value) || this.props.lower_limit;
	    var _props2 = this.props;
	    var step = _props2.step;
	    var upper_limit = _props2.upper_limit;

	    value = value + step <= upper_limit ? value + step : value;
	    this.setState({ value: value }, function () {
	      this.props.onChange(value);
	    });
	  },
	  input: function input(e) {
	    var v = e.target.value.replace(/[^\d]/g, '');
	    console.log(v);
	    if (v > this.props.upper_limit) {
	      v = v.substring(0, v.length - 1);
	    }
	    this.setState({ value: v });
	  }
	});

	exports['default'] = NumberPicker;
	module.exports = exports['default'];

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  2级Select(缩进的方式，一级select模拟而来, 因此也可以被选)
	 */
	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _configAppConfig = __webpack_require__(157);

	var SelectGroup = _react2['default'].createClass({
	  displayName: 'SelectGroup',

	  propTypes: {
	    options: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	      id: _react.PropTypes.number.isRequired,
	      name: _react.PropTypes.string.isRequired,
	      parent_id: _react.PropTypes.number.isRequired }))
	  },
	  //0为1最上级，其他的为下级
	  getDefaultProps: function getDefaultProps() {
	    return {
	      "default-text": '--请选择--',
	      "default-value": _configAppConfig.SELECT_DEFAULT_VALUE,
	      "options": [],
	      "no-default": false,
	      "parentId": 0,
	      "onChange": function onChange() {}
	    };
	  },
	  render: function render() {
	    var _props = this.props;
	    var options = _props.options;
	    var parentId = _props.parentId;

	    var first_level = [],
	        second_level = [];
	    options.forEach(function (n) {
	      n.parent_id == parentId ? first_level.push(n) : second_level.push(n);
	    });
	    var list = [];
	    var createOption = function createOption(id, p_id, text) {
	      return _react2['default'].createElement(
	        'option',
	        { value: id, 'data-parent-id': p_id, key: id },
	        text
	      );
	    };
	    first_level.forEach(function (f) {
	      list.push(createOption(f.id, f.parent_id, f.name));
	      second_level.forEach(function (s) {
	        if (f.id == s.parent_id) list.push(createOption(s.id, s.parent_id, '　' + s.name));
	      });
	    });
	    var className = "form-control text-left input-xs " + (this.props.className || '');
	    this.props = _extends({}, this.props, { className: className });
	    return _react2['default'].createElement(
	      'select',
	      this.props,
	      this.props['no-default'] ? null : _react2['default'].createElement(
	        'option',
	        { value: this.props['default-value'] },
	        this.props['default-text']
	      ),
	      list
	    );
	  }
	});

	module.exports = SelectGroup;

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _reduxForm = __webpack_require__(242);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _commonLoading = __webpack_require__(306);

	var _utilsIndex = __webpack_require__(160);

	var _utilsAcl = __webpack_require__(240);

	var _utilsAcl2 = _interopRequireDefault(_utilsAcl);

	var _configAppConfig = __webpack_require__(157);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var _commonOrder_products_detail = __webpack_require__(312);

	var _commonOrder_products_detail2 = _interopRequireDefault(_commonOrder_products_detail);

	var _order_detail_modal = __webpack_require__(333);

	var _order_detail_modal2 = _interopRequireDefault(_order_detail_modal);

	var _commonOperation_record_modalJs = __webpack_require__(317);

	var _commonOperation_record_modalJs2 = _interopRequireDefault(_commonOperation_record_modalJs);

	var _actionsOrders = __webpack_require__(290);

	var OrderActions = _interopRequireWildcard(_actionsOrders);

	var _actionsOrder_support = __webpack_require__(300);

	var OrderSupportActions = _interopRequireWildcard(_actionsOrder_support);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsDelivery_change = __webpack_require__(334);

	var ChangeActions = _interopRequireWildcard(_actionsDelivery_change);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '送货单管理', link: '/dm/change' }, { name: '订单转送货单列表', link: '' }] })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var FilterHeader = (function (_Component2) {
	  _inherits(FilterHeader, _Component2);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      search_ing: false
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var keywords = _props$fields.keywords;
	      var begin_time = _props$fields.begin_time;
	      var end_time = _props$fields.end_time;
	      var delivery_id = _props$fields.delivery_id;
	      var province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var provinces = _props.provinces;
	      var cities = _props.cities;
	      var delivery_stations = _props.delivery_stations;
	      var changeHandler = _props.changeHandler;
	      var change_submitting = _props.change_submitting;
	      var search_ing = this.state.search_ing;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body form-inline' },
	          _react2['default'].createElement('input', _extends({}, keywords, { className: 'form-control input-xs v-mg', placeholder: '关键字' })),
	          ' 开始时间',
	          _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': begin_time, className: 'short-input' }),
	          ' 结束时间',
	          _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': end_time, className: 'short-input space-right' }),
	          (0, _utilsAcl2['default'])('DeliveryManageChangeStationFilter') ? _react2['default'].createElement(_commonSelect2['default'], _extends({}, delivery_id, { options: delivery_stations, 'default-text': '选择配送中心', className: 'space-right' })) : null,
	          (0, _utilsAcl2['default'])('DeliveryManageChangeAddressFilter') ? [_react2['default'].createElement(_commonSelect2['default'], _extends({}, province_id, { onChange: this.onProvinceChange.bind(this, province_id.onChange), options: provinces, ref: 'province', 'default-text': '选择省份', key: 'province', className: 'space-right' })), _react2['default'].createElement(_commonSelect2['default'], _extends({}, city_id, { options: cities, 'default-text': '选择城市', ref: 'city', key: 'city', className: 'space-right' }))] : null,
	          _react2['default'].createElement(
	            'button',
	            { disabled: search_ing, 'data-submitting': search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs' },
	            _react2['default'].createElement('i', { className: 'fa fa-search' }),
	            ' 搜索'
	          ),
	          '　',
	          _react2['default'].createElement(
	            'button',
	            { disabled: change_submitting, 'data-submitting': change_submitting, onClick: changeHandler, className: 'btn btn-theme btn-xs' },
	            '转换'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      setTimeout((function () {
	        var _props2 = this.props;
	        var getProvinces = _props2.getProvinces;
	        var getDeliveryStations = _props2.getDeliveryStations;

	        getProvinces();
	        getDeliveryStations();
	        (0, _utilsLazy_load2['default'])('noty');
	      }).bind(this), 0);
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.provinceReset();
	      if (value != this.refs.province.props['default-value']) var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.getCities(value).done(function () {
	        $city.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this = this;

	      this.setState({ search_ing: true });
	      this.props.getOrderExchangeList({ page_no: 0, page_size: this.props.page_size }).always(function () {
	        _this.setState({ search_ing: false });
	      });
	    }
	  }]);

	  return FilterHeader;
	})(_react.Component);

	FilterHeader.propTypes = {
	  changeHandler: _react.PropTypes.func.isRequired,
	  provinces: _react.PropTypes.array.isRequired,
	  cities: _react.PropTypes.array.isRequired,
	  delivery_stations: _react.PropTypes.array.isRequired
	};
	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'order_exchange_filter',
	  fields: ['keywords', 'begin_time', 'end_time', 'delivery_id', 'province_id', 'city_id']
	}, function (state) {
	  var now = (0, _utilsIndex.dateFormat)(new Date());
	  return {
	    //赋初始值
	    initialValues: {
	      begin_time: now,
	      end_time: now
	    }
	  };
	})(FilterHeader);

	var OrderRow = (function (_Component3) {
	  _inherits(OrderRow, _Component3);

	  function OrderRow() {
	    _classCallCheck(this, OrderRow);

	    _get(Object.getPrototypeOf(OrderRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(OrderRow, [{
	    key: 'render',
	    value: function render() {
	      var props = this.props;

	      return _react2['default'].createElement(
	        'tr',
	        { onClick: this.clickHandler.bind(this), className: props.active_order_id == props.order_id ? 'active' : '' },
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement('input', { onChange: this.checkOrderHandler.bind(this), checked: props.checked, type: 'checkbox' })
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          (0, _utilsIndex.parseTime)(props.delivery_time)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.owner_name,
	          _react2['default'].createElement('br', null),
	          props.owner_mobile
	        ),
	        _react2['default'].createElement(
	          'td',
	          { className: 'text-left' },
	          '姓名：',
	          props.recipient_name,
	          _react2['default'].createElement('br', null),
	          '电话：',
	          props.recipient_mobile,
	          _react2['default'].createElement('br', null),
	          _react2['default'].createElement(
	            'div',
	            { className: 'address-detail-td' },
	            _react2['default'].createElement(
	              'span',
	              { className: 'inline-block' },
	              '地址：'
	            ),
	            _react2['default'].createElement(
	              'span',
	              { className: 'address-all' },
	              props.recipient_address
	            )
	          ),
	          '建筑：',
	          props.recipient_landmark
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.coupon
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          (0, _utilsIndex.parseTime)(props.submit_time)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: props.viewOrderDetail, href: 'javascript:;' },
	            props.order_id
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _configAppConfig.DELIVERY_MAP[props.delivery_type] || props.delivery_type
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'remark-in-table' },
	            props.remarks
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.updated_by
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.viewOrderOperationRecord.bind(this), className: 'inline-block time', href: 'javascript:;' },
	            props.updated_time
	          )
	        )
	      );
	    }
	  }, {
	    key: 'checkOrderHandler',
	    value: function checkOrderHandler(e) {
	      var _props3 = this.props;
	      var order_id = _props3.order_id;
	      var checkOrderHandler = _props3.checkOrderHandler;

	      checkOrderHandler(order_id, e.target.checked);
	    }
	  }, {
	    key: 'clickHandler',
	    value: function clickHandler() {
	      this.props.activeOrderHandler(this.props.order_id);
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(e) {
	      this.props.viewOrderOperationRecord(this.props);
	      e.stopPropagation();
	    }
	  }]);

	  return OrderRow;
	})(_react.Component);

	var DeliverChangePannel = (function (_Component4) {
	  _inherits(DeliverChangePannel, _Component4);

	  function DeliverChangePannel(props) {
	    _classCallCheck(this, DeliverChangePannel);

	    _get(Object.getPrototypeOf(DeliverChangePannel.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      page_size: 5
	    };
	    this.checkOrderHandler = this.checkOrderHandler.bind(this);
	    this.activeOrderHandler = this.activeOrderHandler.bind(this);
	    this.changeHandler = this.changeHandler.bind(this);
	    this.viewOrderDetail = this.viewOrderDetail.bind(this);
	    this.viewOrderOperationRecord = this.viewOrderOperationRecord.bind(this);
	    this.search = this.search.bind(this);
	  }

	  _createClass(DeliverChangePannel, [{
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props;
	      var filter = _props4.filter;
	      var area = _props4.area;
	      var all_order_srcs = _props4.all_order_srcs;
	      var all_pay_modes = _props4.all_pay_modes;
	      var exchangeOrders = _props4.exchangeOrders;
	      var getOrderOptRecord = _props4.getOrderOptRecord;
	      var resetOrderOptRecord = _props4.resetOrderOptRecord;
	      var operationRecord = _props4.operationRecord;
	      var change_submitting = filter.change_submitting;
	      var _props$orders = this.props.orders;
	      var loading = _props$orders.loading;
	      var refresh = _props$orders.refresh;
	      var page_no = _props$orders.page_no;
	      var total = _props$orders.total;
	      var list = _props$orders.list;
	      var checked_order_ids = _props$orders.checked_order_ids;
	      var check_order_info = _props$orders.check_order_info;
	      var active_order_id = _props$orders.active_order_id;
	      var search = this.search;
	      var changeHandler = this.changeHandler;
	      var checkOrderHandler = this.checkOrderHandler;
	      var viewOrderDetail = this.viewOrderDetail;
	      var activeOrderHandler = this.activeOrderHandler;
	      var viewOrderOperationRecord = this.viewOrderOperationRecord;

	      var content = list.map(function (n, i) {
	        return _react2['default'].createElement(OrderRow, _extends({ key: n.order_id }, _extends({}, n, { active_order_id: active_order_id, activeOrderHandler: activeOrderHandler, checkOrderHandler: checkOrderHandler, viewOrderDetail: viewOrderDetail, viewOrderOperationRecord: viewOrderOperationRecord })));
	      });
	      return _react2['default'].createElement(
	        'div',
	        { className: 'order-manage' },
	        _react2['default'].createElement(TopHeader, null),
	        _react2['default'].createElement(FilterHeader, _extends({}, _extends({}, this.props, filter, area, { changeHandler: changeHandler }), {
	          page_size: this.state.page_size
	        })),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '送货列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive main-list' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      _react2['default'].createElement('input', { onChange: this.checkAll.bind(this), type: 'checkbox' })
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '送达时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '下单人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '收货人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '验证码'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '提交时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单号'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送方式'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '备注'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作时间'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  (0, _commonLoading.tableLoader)(loading || refresh, content)
	                )
	              )
	            ),
	            _react2['default'].createElement(_commonPagination2['default'], {
	              page_no: page_no,
	              total_count: total,
	              page_size: this.state.page_size,
	              onPageChange: this.onPageChange
	            })
	          )
	        ),
	        check_order_info ? _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              null,
	              '订单产品详情'
	            ),
	            _react2['default'].createElement(_commonOrder_products_detail2['default'], { products: check_order_info.products })
	          )
	        ) : null,
	        _react2['default'].createElement(ChangeModal, _extends({ exchangeOrders: exchangeOrders, search: search, change_submitting: change_submitting, checked_order_ids: checked_order_ids }, { ref: 'changeModal' })),
	        _react2['default'].createElement(_order_detail_modal2['default'], { ref: 'detail_modal', data: check_order_info || {}, all_order_srcs: all_order_srcs.map, all_pay_modes: all_pay_modes }),
	        _react2['default'].createElement(_commonOperation_record_modalJs2['default'], _extends({ ref: 'OperationRecordModal' }, _extends({ getOrderOptRecord: getOrderOptRecord, resetOrderOptRecord: resetOrderOptRecord }, operationRecord)))
	      );
	    }
	  }, {
	    key: 'changeHandler',
	    value: function changeHandler() {
	      if (this.props.orders.checked_order_ids.length) {
	        this.refs.changeModal.show();
	      } else {
	        (0, _utilsIndex.Noty)('warning', '请先选择需要转换的订单！');
	      }
	    }
	  }, {
	    key: 'activeOrderHandler',
	    value: function activeOrderHandler(order_id) {
	      if (this.props.orders.active_order_id != order_id) this.props.activeOrder(order_id);
	    }
	  }, {
	    key: 'checkOrderHandler',
	    value: function checkOrderHandler(order_id, checked) {
	      this.props.checkOrder(order_id, checked);
	    }
	  }, {
	    key: 'checkAll',
	    value: function checkAll(e) {
	      this.props.checkAllOrders(e.target.checked);
	    }
	  }, {
	    key: 'viewOrderDetail',
	    value: function viewOrderDetail() {
	      this.refs.detail_modal.show();
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(order) {
	      this.refs.OperationRecordModal.show(order);
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.setState({ page_no: page });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.search();
	      (0, _utilsLazy_load2['default'])('noty');
	      var _props5 = this.props;
	      var getOrderSrcs = _props5.getOrderSrcs;
	      var getPayModes = _props5.getPayModes;

	      getOrderSrcs();
	      getPayModes();
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _props6 = this.props;
	      var getOrderExchangeList = _props6.getOrderExchangeList;
	      var orders = _props6.orders;

	      getOrderExchangeList({ page_no: orders.page_no, page_size: this.state.page_size });
	    }
	  }]);

	  return DeliverChangePannel;
	})(_react.Component);

	function mapStateToProps(_ref) {
	  var deliveryChange = _ref.deliveryChange;

	  return deliveryChange;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  return (0, _redux.bindActionCreators)(_extends({}, OrderActions, OrderSupportActions, (0, _actionsArea2['default'])(), ChangeActions), dispatch);
	}

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DeliverChangePannel);

	/***************   *******   *****************/
	/***************   子模态框   *****************/
	/***************   *******   *****************/

	var ChangeModal = (function (_Component5) {
	  _inherits(ChangeModal, _Component5);

	  function ChangeModal() {
	    _classCallCheck(this, ChangeModal);

	    _get(Object.getPrototypeOf(ChangeModal.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ChangeModal, [{
	    key: 'render',
	    value: function render() {
	      var checked_order_ids = this.props.checked_order_ids;

	      return _react2['default'].createElement(
	        _commonStd_modal2['default'],
	        { onConfirm: this.onConfirm.bind(this), submitting: this.props.change_submitting, ref: 'modal', title: '批量转换操作' },
	        _react2['default'].createElement(
	          'center',
	          null,
	          _react2['default'].createElement(
	            'h5',
	            null,
	            '您已同时勾选',
	            _react2['default'].createElement(
	              'span',
	              { className: 'strong font-lg' },
	              ' ' + checked_order_ids.length + ' '
	            ),
	            '个订单'
	          )
	        ),
	        _react2['default'].createElement(
	          'center',
	          null,
	          _react2['default'].createElement(
	            'h5',
	            null,
	            '进行转换'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.refs.modal.show();
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.refs.modal.hide();
	    }
	  }, {
	    key: 'onConfirm',
	    value: function onConfirm() {
	      var _props7 = this.props;
	      var exchangeOrders = _props7.exchangeOrders;
	      var search = _props7.search;
	      var checked_order_ids = _props7.checked_order_ids;

	      exchangeOrders(checked_order_ids).done((function () {
	        // search();
	        this.hide();
	        (0, _utilsIndex.Noty)('success', '转换成功！');
	        (0, _history_instance.go)('/dm/delivery');
	      }).bind(this)).fail(function () {
	        (0, _utilsIndex.Noty)('error', '转换异常');
	      });
	    }
	  }]);

	  return ChangeModal;
	})(_react.Component);

	;

	ChangeModal.PropTypes = {
	  checked_order_ids: _react.PropTypes.array.isRequired,
	  exchangeOrders: _react.PropTypes.func.isRequired,
	  change_submitting: _react.PropTypes.bool.isRequired,
	  search: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _configAppConfig = __webpack_require__(157);

	var _commonLoading = __webpack_require__(306);

	var _reactDom = __webpack_require__(154);

	var _utilsIndex = __webpack_require__(160);

	var DetailModal = (function (_Component) {
	  _inherits(DetailModal, _Component);

	  function DetailModal(props) {
	    _classCallCheck(this, DetailModal);

	    _get(Object.getPrototypeOf(DetailModal.prototype), 'constructor', this).call(this, props);
	    this.show = this.show.bind(this);
	    this.hide = this.hide.bind(this);
	  }

	  _createClass(DetailModal, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var data = _props.data;
	      var _props$data$products = _props.data.products;
	      var products = _props$data$products === undefined ? [] : _props$data$products;
	      var all_order_srcs = _props.all_order_srcs;
	      var all_pay_modes = _props.all_pay_modes;
	      var isNumber = _utilsIndex.form.isNumber;

	      var _order_status = _configAppConfig.order_status[data.status] || {};
	      var products = products.map(function (n) {
	        return _react2['default'].createElement(
	          'tr',
	          { key: n.sku_id },
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.name
	          ),
	          _react2['default'].createElement(
	            'td',
	            { className: 'text-left' },
	            '规格：',
	            n.size,
	            _react2['default'].createElement('br', null),
	            '数量：',
	            n.num
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.choco_board
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.greeting_card
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            _react2['default'].createElement('input', { checked: n.atlas, disabled: true, type: 'checkbox' })
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.custom_name
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.custom_desc
	          )
	        );
	      });
	      /**
	       * 这里就不要使用封装更好的StdModal了
	       */
	      return _react2['default'].createElement(
	        'div',
	        { ref: 'modal', 'aria-hidden': 'false', 'aria-labelledby': 'myModalLabel', role: 'dialog', className: 'modal fade' },
	        _react2['default'].createElement('div', { ref: 'modal-backdrop', className: 'modal-backdrop fade' }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'modal-dialog modal-lg' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'modal-content' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-header' },
	              _react2['default'].createElement(
	                'button',
	                { 'aria-hidden': 'true', 'data-dismiss': 'modal', className: 'close', type: 'button' },
	                '×'
	              ),
	              _react2['default'].createElement(
	                'h4',
	                { className: 'modal-title' },
	                '查看订单详情'
	              )
	            ),
	            _react2['default'].createElement(
	              'div',
	              { className: 'modal-body strong-label' },
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '订单来源：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'theme' },
	                  all_order_srcs[data.src_id]
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '支付方式：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'theme' },
	                  all_pay_modes[data.pay_modes_id]
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '支付状态：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'theme' },
	                  _configAppConfig.pay_status[data.pay_status]
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　验证码：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'theme' },
	                  data.coupon || ' -'
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '配送方式：'
	                ),
	                _react2['default'].createElement(
	                  'span',
	                  { className: 'theme' },
	                  _configAppConfig.DELIVERY_MAP[data.delivery_type]
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'div',
	                  { className: 'row' },
	                  _react2['default'].createElement(
	                    'div',
	                    { className: 'col-xs-6' },
	                    _react2['default'].createElement(
	                      'div',
	                      { className: 'form-group form-inline' },
	                      _react2['default'].createElement(
	                        'label',
	                        null,
	                        '发票内容：'
	                      ),
	                      _react2['default'].createElement(
	                        'span',
	                        { className: 'theme' },
	                        data.invoice || ' -'
	                      )
	                    )
	                  ),
	                  _react2['default'].createElement(
	                    'div',
	                    { className: 'col-xs-6' },
	                    _react2['default'].createElement(
	                      'div',
	                      { className: 'form-group form-inline' },
	                      _react2['default'].createElement(
	                        'label',
	                        null,
	                        '实际金额：'
	                      ),
	                      _react2['default'].createElement(
	                        'span',
	                        { className: 'theme' },
	                        isNumber(data.total_discount_price) ? '￥' + data.total_discount_price / 100 : ' - '
	                      )
	                    )
	                  )
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'div',
	                  { className: 'row' },
	                  _react2['default'].createElement(
	                    'div',
	                    { className: 'col-xs-6' },
	                    _react2['default'].createElement(
	                      'div',
	                      { className: 'form-group form-inline' },
	                      _react2['default'].createElement(
	                        'label',
	                        null,
	                        '所属城市：'
	                      ),
	                      _react2['default'].createElement(
	                        'span',
	                        { className: 'theme' },
	                        data.city_name
	                      )
	                    )
	                  ),
	                  _react2['default'].createElement(
	                    'div',
	                    { className: 'col-xs-6' },
	                    _react2['default'].createElement(
	                      'div',
	                      { className: 'form-group form-inline' },
	                      _react2['default'].createElement(
	                        'label',
	                        null,
	                        '优惠金额：'
	                      ),
	                      _react2['default'].createElement(
	                        'span',
	                        { className: 'theme' },
	                        isNumber(data.total_original_price / data.total_discount_price) ? '￥' + (data.total_original_price - data.total_discount_price) / 100 : ' - '
	                      )
	                    )
	                  )
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'div',
	                  { className: 'row' },
	                  _react2['default'].createElement(
	                    'div',
	                    { className: 'col-xs-6' },
	                    _react2['default'].createElement(
	                      'div',
	                      { className: 'form-group form-inline' },
	                      _react2['default'].createElement(
	                        'label',
	                        null,
	                        '　配送站：'
	                      ),
	                      _react2['default'].createElement(
	                        'span',
	                        { className: 'theme' },
	                        data.delivery_name
	                      )
	                    )
	                  ),
	                  _react2['default'].createElement(
	                    'div',
	                    { className: 'col-xs-6' },
	                    _react2['default'].createElement(
	                      'div',
	                      { className: 'form-group form-inline' },
	                      _react2['default'].createElement(
	                        'label',
	                        null,
	                        '总金额：'
	                      ),
	                      _react2['default'].createElement(
	                        'span',
	                        { className: 'theme' },
	                        isNumber(data.total_original_price) ? '￥' + data.total_original_price / 100 : ' - '
	                      )
	                    )
	                  )
	                )
	              ),
	              _react2['default'].createElement('hr', { className: 'dotted' }),
	              _react2['default'].createElement(
	                'div',
	                { className: 'form-group form-inline' },
	                _react2['default'].createElement(
	                  'label',
	                  null,
	                  '　产品信息：'
	                )
	              ),
	              _react2['default'].createElement(
	                'div',
	                { className: 'table-responsive' },
	                _react2['default'].createElement(
	                  'table',
	                  { className: 'table table-hover table-click text-center' },
	                  _react2['default'].createElement(
	                    'thead',
	                    null,
	                    _react2['default'].createElement(
	                      'tr',
	                      null,
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '货品数量信息'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '巧克力牌'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '祝福贺卡'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '产品图册'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '自定义名称'
	                      ),
	                      _react2['default'].createElement(
	                        'th',
	                        null,
	                        '自定义描述'
	                      )
	                    )
	                  ),
	                  _react2['default'].createElement(
	                    'tbody',
	                    null,
	                    products.length ? products : (0, _commonLoading.get_table_empty)()
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      $(this.refs['modal-backdrop']).on('click', this.hide);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      $(this.refs['modal-backdrop']).off('click', this.hide);
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      $(this.refs.modal).modal('show');
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      $(this.refs.modal).modal('hide');
	    }
	  }]);

	  return DetailModal;
	})(_react.Component);

	exports['default'] = DetailModal;

	DetailModal.PropTypes = {
	  data: _react.PropTypes.object.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.exchangeOrders = exchangeOrders;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var ORDERS_EXCHANGE = 'ORDERS_EXCHANGE';exports.ORDERS_EXCHANGE = ORDERS_EXCHANGE;
	//key: 0->正在处理，1->成功，2->失败

	function exchangeOrders(order_ids) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return function (dispatch, getState) {
	    dispatch({
	      type: ORDERS_EXCHANGE,
	      key: 0
	    });
	    return (0, _utilsRequest.put)(_configUrl2['default'].order_exchange.toString(), { order_ids: order_ids }).done(function () {
	      dispatch({
	        type: ORDERS_EXCHANGE,
	        key: 1
	      });
	    }).fail(function () {
	      dispatch({
	        type: ORDERS_EXCHANGE,
	        key: 2
	      });
	    });
	  };
	  // return TEST(null, [
	  //   {type: ORDERS_EXCHANGE, key: 0},  //立即派发
	  //   {type: ORDERS_EXCHANGE, key: 1}   //2000毫秒后派发
	  // ], 2000);
	}

	var getDeliveryStations = _actionsOrder_manage_form.getDeliveryStations;
	exports.getDeliveryStations = getDeliveryStations;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _reactAddonsLinkedStateMixin = __webpack_require__(284);

	var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

	var _reduxForm = __webpack_require__(242);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _commonLoading = __webpack_require__(306);

	var _commonRecipient_info = __webpack_require__(308);

	var _commonRecipient_info2 = _interopRequireDefault(_commonRecipient_info);

	var _configAppConfig = __webpack_require__(157);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var _utilsIndex = __webpack_require__(160);

	var _utilsAcl = __webpack_require__(240);

	var _utilsAcl2 = _interopRequireDefault(_utilsAcl);

	var _actionsOrders = __webpack_require__(290);

	var OrderActions = _interopRequireWildcard(_actionsOrders);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsDeliveryman = __webpack_require__(336);

	var DeliverymanActions = _interopRequireWildcard(_actionsDeliveryman);

	var _actionsDelivery_manage = __webpack_require__(337);

	var DeliveryManageActions = _interopRequireWildcard(_actionsDelivery_manage);

	var _actionsOrder_support = __webpack_require__(300);

	var OrderSupportActions = _interopRequireWildcard(_actionsOrder_support);

	var _commonOrder_products_detail = __webpack_require__(312);

	var _commonOrder_products_detail2 = _interopRequireDefault(_commonOrder_products_detail);

	var _order_detail_modal = __webpack_require__(333);

	var _order_detail_modal2 = _interopRequireDefault(_order_detail_modal);

	var _commonScan_modal = __webpack_require__(338);

	var _commonScan_modal2 = _interopRequireDefault(_commonScan_modal);

	var _commonOperation_record_modalJs = __webpack_require__(317);

	var _commonOperation_record_modalJs2 = _interopRequireDefault(_commonOperation_record_modalJs);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '送货单管理', link: '/dm/change' }, { name: '送货单列表', link: '' }] })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var FilterHeader = (function (_Component2) {
	  _inherits(FilterHeader, _Component2);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      search_ing: false,
	      all_print_status: _configAppConfig.YES_OR_NO,
	      delivery_types: (0, _utilsIndex.map)(_configAppConfig.DELIVERY_MAP, function (text, id) {
	        return { id: id, text: text };
	      })
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var keywords = _props$fields.keywords;
	      var begin_time = _props$fields.begin_time;
	      var end_time = _props$fields.end_time;
	      var delivery_type = _props$fields.delivery_type;
	      var print_status = _props$fields.print_status;
	      var province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var provinces = _props.provinces;
	      var cities = _props.cities;
	      var delivery_stations = _props.delivery_stations;
	      var change_submitting = _props.change_submitting;
	      var _state = this.state;
	      var search_ing = _state.search_ing;
	      var delivery_types = _state.delivery_types;
	      var all_print_status = _state.all_print_status;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'form-group form-inline' },
	            _react2['default'].createElement('input', _extends({}, keywords, { className: 'form-control input-xs v-mg', placeholder: '关键字' })),
	            ' 开始时间',
	            _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': begin_time, className: 'short-input' }),
	            ' 配送时间',
	            _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': end_time, className: 'short-input space-right' }),
	            _react2['default'].createElement(_commonSelect2['default'], _extends({}, delivery_type, { options: delivery_types, 'default-text': '选择配送方式', className: 'space-right' })),
	            _react2['default'].createElement(_commonSelect2['default'], _extends({}, print_status, { options: all_print_status, 'default-text': '是否打印', className: 'space-right' })),
	            _react2['default'].createElement(_commonSelect2['default'], { 'default-text': '是否有祝福贺卡', className: 'space-right' }),
	            (0, _utilsAcl2['default'])('DeliveryManageDeliveryAddressFilter') ? [_react2['default'].createElement(_commonSelect2['default'], _extends({}, province_id, { onChange: this.onProvinceChange.bind(this, province_id.onChange), options: provinces, ref: 'province', key: 'province', 'default-text': '选择省份', className: 'space-right' })), _react2['default'].createElement(_commonSelect2['default'], _extends({}, city_id, { options: cities, 'default-text': '选择城市', ref: 'city', key: 'city', className: 'space-right' }))] : null,
	            _react2['default'].createElement(
	              'button',
	              { disabled: search_ing, 'data-submitting': search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs' },
	              _react2['default'].createElement('i', { className: 'fa fa-search' }),
	              ' 搜索'
	            )
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'form-group form-inline' },
	            _react2['default'].createElement(
	              'button',
	              { onClick: this.printHandler.bind(this), className: 'btn btn-theme space-right btn-xs' },
	              '批量打印'
	            ),
	            _react2['default'].createElement(
	              'button',
	              { onClick: this.onScanHandler.bind(this), className: 'btn btn-theme btn-xs space-right' },
	              '扫描'
	            ),
	            _react2['default'].createElement(
	              'button',
	              { onClick: this.batchEdit.bind(this), className: 'btn btn-theme btn-xs' },
	              '批量编辑配送员'
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      setTimeout((function () {
	        var getProvinces = this.props.getProvinces;

	        getProvinces();
	        (0, _utilsLazy_load2['default'])('noty');
	      }).bind(this), 0);
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.provinceReset();
	      if (value != this.refs.province.props['default-value']) var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.getCities(value).done(function () {
	        $city.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this = this;

	      this.setState({ search_ing: true });
	      this.props.getOrderDeliveryList({ page_no: 0, page_size: this.props.page_size }).always(function () {
	        _this.setState({ search_ing: false });
	      });
	    }
	  }, {
	    key: 'printHandler',
	    value: function printHandler() {
	      this.props.showBatchPrintModal();
	    }
	  }, {
	    key: 'batchEdit',
	    value: function batchEdit() {
	      this.props.showBatchEditModal();
	    }
	  }, {
	    key: 'onScanHandler',
	    value: function onScanHandler() {
	      this.props.showScanModal();
	    }
	  }]);

	  return FilterHeader;
	})(_react.Component);

	FilterHeader.propTypes = {
	  showBatchPrintModal: _react.PropTypes.func.isRequired,
	  showBatchEditModal: _react.PropTypes.func.isRequired,
	  provinces: _react.PropTypes.array.isRequired,
	  cities: _react.PropTypes.array.isRequired
	};
	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'order_delivery_filter',
	  fields: ['keywords', 'begin_time', 'end_time', 'delivery_type', 'print_status', 'province_id', 'city_id']
	}, function (state) {
	  var now = (0, _utilsIndex.dateFormat)(new Date());
	  return {
	    //赋初始值
	    initialValues: {
	      begin_time: now,
	      end_time: now
	    }
	  };
	})(FilterHeader);

	var OrderRow = (function (_Component3) {
	  _inherits(OrderRow, _Component3);

	  function OrderRow() {
	    _classCallCheck(this, OrderRow);

	    _get(Object.getPrototypeOf(OrderRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(OrderRow, [{
	    key: 'render',
	    value: function render() {
	      var props = this.props;

	      var delivery_time = props.delivery_time.split(' ');
	      var _order_status = _configAppConfig.order_status[props.status] || {};
	      return _react2['default'].createElement(
	        'tr',
	        { onClick: this.clickHandler.bind(this), className: props.active_order_id == props.order_id ? 'active' : '' },
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement('input', { onChange: this.checkOrderHandler.bind(this), checked: props.checked, type: 'checkbox' })
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.print_status != 'PRINTABLE' ? [_react2['default'].createElement(
	            'a',
	            { onClick: this.showEditModal.bind(this), key: 'edit', href: 'javascript:;', className: 'nowrap' },
	            '[编辑配送员]'
	          ), _react2['default'].createElement('br', { key: 'br' })] : null,
	          props.print_status == 'AUDITING' ? _react2['default'].createElement(
	            'span',
	            { key: 'auditing' },
	            '[正在审核]'
	          ) : _react2['default'].createElement(
	            'a',
	            { onClick: this.printHandler.bind(this), key: 'print', href: 'javascript:;' },
	            props.print_status == 'PRINTABLE' ? _react2['default'].createElement(
	              'span',
	              { key: 'printable' },
	              '[打印]'
	            ) : props.print_status == 'UNPRINTABLE' ? _react2['default'].createElement(
	              'span',
	              { key: 'unprintable' },
	              '[申请打印]'
	            ) : _react2['default'].createElement(
	              'span',
	              { key: 'reprintable' },
	              '[重新打印]'
	            )
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _configAppConfig.PRINT_STATUS[props.print_status]
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.deliveryman_name,
	          _react2['default'].createElement('br', null),
	          props.deliveryman_mobile
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'time' },
	            delivery_time[0],
	            _react2['default'].createElement('br', null),
	            delivery_time[1]
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.owner_name,
	          _react2['default'].createElement('br', null),
	          props.owner_mobile
	        ),
	        _react2['default'].createElement(_commonRecipient_info2['default'], { data: props }),
	        _react2['default'].createElement(
	          'td',
	          { className: 'text-left' },
	          (0, _utilsIndex.reactReplace)(props.greeting_card, '|', _react2['default'].createElement('br', null))
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.exchange_time
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'bordered bold order-status', style: { color: _order_status.color || 'inherit', background: _order_status.bg } },
	            _order_status.value
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: props.viewOrderDetail, href: 'javascript:;' },
	            props.order_id
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.remarks
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.updated_by
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.viewOrderOperationRecord.bind(this), className: 'inline-block time', href: 'javascript:;' },
	            props.updated_time
	          )
	        )
	      );
	    }
	  }, {
	    key: 'showEditModal',
	    value: function showEditModal(e) {
	      this.props.showEditModal(this.props);
	      e.stopPropagation();
	    }
	  }, {
	    key: 'printHandler',
	    value: function printHandler(e) {
	      this.props.printHandler(this.props);
	      e.stopPropagation();
	    }
	  }, {
	    key: 'checkOrderHandler',
	    value: function checkOrderHandler(e) {
	      var _props2 = this.props;
	      var order_id = _props2.order_id;
	      var checkOrderHandler = _props2.checkOrderHandler;

	      checkOrderHandler(order_id, e.target.checked);
	      // e.stopPropagation();
	    }
	  }, {
	    key: 'clickHandler',
	    value: function clickHandler() {
	      this.props.activeOrderHandler(this.props.order_id);
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(e) {
	      this.props.viewOrderOperationRecord(this.props);
	      e.stopPropagation();
	    }
	  }]);

	  return OrderRow;
	})(_react.Component);

	var DeliveryManagePannel = (function (_Component4) {
	  _inherits(DeliveryManagePannel, _Component4);

	  function DeliveryManagePannel(props) {
	    _classCallCheck(this, DeliveryManagePannel);

	    _get(Object.getPrototypeOf(DeliveryManagePannel.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      page_size: 5,
	      batch_edit: false
	    };
	    this.showEditModal = this.showEditModal.bind(this);
	    this.showBatchEditModal = this.showBatchEditModal.bind(this);
	    this.showBatchPrintModal = this.showBatchPrintModal.bind(this);
	    this.checkOrderHandler = this.checkOrderHandler.bind(this);
	    this.activeOrderHandler = this.activeOrderHandler.bind(this);
	    this.viewOrderDetail = this.viewOrderDetail.bind(this);
	    this.viewOrderOperationRecord = this.viewOrderOperationRecord.bind(this);
	    this.printHandler = this.printHandler.bind(this);
	    this.search = this.search.bind(this);
	    this.showScanModal = this.showScanModal.bind(this);
	  }

	  _createClass(DeliveryManagePannel, [{
	    key: 'render',
	    value: function render() {
	      var _props3 = this.props;
	      var filter = _props3.filter;
	      var area = _props3.area;
	      var deliveryman = _props3.deliveryman;
	      var main = _props3.main;
	      var all_order_srcs = _props3.all_order_srcs;
	      var all_pay_modes = _props3.all_pay_modes;
	      var getAllDeliveryman = _props3.getAllDeliveryman;
	      var applyDeliveryman = _props3.applyDeliveryman;
	      var startPrint = _props3.startPrint;
	      var applyPrint = _props3.applyPrint;
	      var validatePrintCode = _props3.validatePrintCode;
	      var rePrint = _props3.rePrint;
	      var searchByScan = _props3.searchByScan;
	      var getOrderOptRecord = _props3.getOrderOptRecord;
	      var resetOrderOptRecord = _props3.resetOrderOptRecord;
	      var operationRecord = _props3.operationRecord;
	      var _props$orders = this.props.orders;
	      var loading = _props$orders.loading;
	      var refresh = _props$orders.refresh;
	      var page_no = _props$orders.page_no;
	      var total = _props$orders.total;
	      var list = _props$orders.list;
	      var checked_orders = _props$orders.checked_orders;
	      var check_order_info = _props$orders.check_order_info;
	      var active_order_id = _props$orders.active_order_id;
	      var showBatchPrintModal = this.showBatchPrintModal;
	      var printHandler = this.printHandler;
	      var showEditModal = this.showEditModal;
	      var showScanModal = this.showScanModal;
	      var showBatchEditModal = this.showBatchEditModal;
	      var checkOrderHandler = this.checkOrderHandler;
	      var viewOrderDetail = this.viewOrderDetail;
	      var activeOrderHandler = this.activeOrderHandler;
	      var viewOrderOperationRecord = this.viewOrderOperationRecord;
	      var scan = main.scan;
	      var scan_list = main.scan_list;
	      //扫描
	      if (scan) {
	        list = scan_list;
	      }
	      var content = list.map(function (n, i) {
	        return _react2['default'].createElement(OrderRow, _extends({
	          key: n.order_id
	        }, _extends({}, n, { active_order_id: active_order_id, showEditModal: showEditModal, printHandler: printHandler,
	          checkOrderHandler: checkOrderHandler, viewOrderDetail: viewOrderDetail, activeOrderHandler: activeOrderHandler, viewOrderOperationRecord: viewOrderOperationRecord })));
	      });
	      return _react2['default'].createElement(
	        'div',
	        { className: 'order-manage' },
	        _react2['default'].createElement(TopHeader, null),
	        _react2['default'].createElement(FilterHeader, _extends({}, _extends({}, this.props, filter, area, { showScanModal: showScanModal, showBatchPrintModal: showBatchPrintModal, showBatchEditModal: showBatchEditModal }), {
	          page_size: this.state.page_size
	        })),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '送货列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive main-list' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      _react2['default'].createElement('input', { onChange: this.checkAll.bind(this), type: 'checkbox' })
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '管理操作'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '是否打印'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送员'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '下单人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '收货人信息'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '祝福贺卡'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '转单时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单状态'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单号'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '备注'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作时间'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  (0, _commonLoading.tableLoader)(loading || refresh, content)
	                )
	              )
	            ),
	            scan ? null : _react2['default'].createElement(_commonPagination2['default'], {
	              page_no: page_no,
	              total_count: total,
	              page_size: this.state.page_size,
	              onPageChange: this.onPageChange
	            })
	          )
	        ),
	        check_order_info ? _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              null,
	              '订单产品详情'
	            ),
	            _react2['default'].createElement(_commonOrder_products_detail2['default'], { products: check_order_info.products })
	          )
	        ) : null,
	        _react2['default'].createElement(EditModal, _extends({ ref: 'EditModal' }, { getAllDeliveryman: getAllDeliveryman, applyDeliveryman: applyDeliveryman, deliveryman: deliveryman, submitting: main.submitting }, { callback: this.search })),
	        _react2['default'].createElement(_order_detail_modal2['default'], { ref: 'detail_modal', data: check_order_info || {}, all_order_srcs: all_order_srcs.map, all_pay_modes: all_pay_modes }),
	        _react2['default'].createElement(PrintModal, _extends({ ref: 'PrintModal' }, { checked_orders: checked_orders, startPrint: startPrint, callback: this.search })),
	        _react2['default'].createElement(ApplyPrintModal, _extends({ ref: 'ApplyPrintModal' }, { applyPrint: applyPrint, submitting: main.submitting }, { callback: this.search })),
	        _react2['default'].createElement(RePrintModal, _extends({ ref: 'RePrintModal' }, { validatePrintCode: validatePrintCode, rePrint: rePrint, submitting: main.submitting }, { callback: this.search })),
	        _react2['default'].createElement(_commonScan_modal2['default'], { ref: 'ScanModal', submitting: main.submitting, search: searchByScan }),
	        _react2['default'].createElement(_commonOperation_record_modalJs2['default'], _extends({ ref: 'OperationRecordModal' }, _extends({ getOrderOptRecord: getOrderOptRecord, resetOrderOptRecord: resetOrderOptRecord }, operationRecord)))
	      );
	    }
	  }, {
	    key: 'showEditModal',
	    value: function showEditModal(n) {
	      this.refs.EditModal.show([n]);
	    }
	  }, {
	    key: 'showBatchEditModal',
	    value: function showBatchEditModal() {
	      var checked_orders = this.props.orders.checked_orders;

	      if (checked_orders.length) {
	        this.refs.EditModal.show(checked_orders);
	      } else {
	        (0, _utilsIndex.Noty)('warning', '请先勾选订单！');
	      }
	    }
	  }, {
	    key: 'showBatchPrintModal',
	    value: function showBatchPrintModal(n) {
	      var checked_orders = this.props.orders.checked_orders;

	      if (checked_orders.length) {
	        this.refs.PrintModal.show();
	      } else {
	        (0, _utilsIndex.Noty)('warning', '请先勾选订单！');
	      }
	    }
	  }, {
	    key: 'printHandler',
	    value: function printHandler(_ref) {
	      var _this2 = this;

	      var print_status = _ref.print_status;
	      var order_id = _ref.order_id;

	      if (print_status == 'PRINTABLE') {
	        this.props.startPrint([order_id]).done(function () {
	          _this2.search(); //重新请求，刷新数据
	        }).fail(function () {
	          (0, _utilsIndex.Noty)('error', '异常错误');
	        });
	      } else if (print_status == 'UNPRINTABLE') {
	        this.refs.ApplyPrintModal.show(order_id);
	      } else if (print_status == 'REPRINTABLE') {
	        this.refs.RePrintModal.show(order_id); //再次打印，输入验证码
	      }
	    }
	  }, {
	    key: 'showScanModal',
	    value: function showScanModal() {
	      this.refs.ScanModal.show();
	    }
	  }, {
	    key: 'activeOrderHandler',
	    value: function activeOrderHandler(order_id) {
	      if (this.props.orders.active_order_id != order_id) this.props.activeOrder(order_id);
	    }
	  }, {
	    key: 'checkOrderHandler',
	    value: function checkOrderHandler(order_id, checked) {
	      this.props.checkOrder(order_id, checked);
	    }
	  }, {
	    key: 'checkAll',
	    value: function checkAll(e) {
	      this.props.checkAllOrders(e.target.checked);
	    }
	  }, {
	    key: 'viewOrderDetail',
	    value: function viewOrderDetail() {
	      this.refs.detail_modal.show();
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(order) {
	      this.refs.OperationRecordModal.show(order);
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.search(page);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.search();

	      (0, _utilsLazy_load2['default'])('noty');
	      (0, _utilsLazy_load2['default'])('chinese_py');

	      var _props4 = this.props;
	      var getOrderSrcs = _props4.getOrderSrcs;
	      var getPayModes = _props4.getPayModes;

	      getOrderSrcs();
	      getPayModes();
	    }
	  }, {
	    key: 'search',
	    value: function search(page) {
	      page = typeof page == 'undefined' ? this.props.orders.page_no : page;
	      this.props.getOrderDeliveryList({ page_no: page, page_size: this.state.page_size });
	    }
	  }]);

	  return DeliveryManagePannel;
	})(_react.Component);

	function mapStateToProps(_ref2) {
	  var deliveryManage = _ref2.deliveryManage;

	  return deliveryManage;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  return (0, _redux.bindActionCreators)(_extends({}, OrderActions, (0, _actionsArea2['default'])(), OrderSupportActions, DeliverymanActions, DeliveryManageActions), dispatch);
	}

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DeliveryManagePannel);

	/***************   *******   *****************/
	/***************   子模态框   *****************/
	/***************   *******   *****************/

	var PrintModal = _react2['default'].createClass({
	  displayName: 'PrintModal',

	  getInitialState: function getInitialState() {
	    return {
	      submitting: false
	    };
	  },
	  render: function render() {
	    var checked_orders = this.props.checked_orders;

	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { ref: 'modal', title: '批量打印订单', submitting: this.state.submitting, onConfirm: this.printHandler },
	      _react2['default'].createElement(
	        'center',
	        null,
	        _react2['default'].createElement(
	          'h5',
	          null,
	          '您已同时勾选',
	          _react2['default'].createElement(
	            'span',
	            { className: 'strong font-lg' },
	            ' ' + checked_orders.length + ' '
	          ),
	          '个订单'
	        )
	      ),
	      _react2['default'].createElement(
	        'center',
	        null,
	        _react2['default'].createElement(
	          'h5',
	          null,
	          '进行打印'
	        )
	      )
	    );
	  },
	  printHandler: function printHandler() {
	    var checked_orders = this.props.checked_orders;

	    if (checked_orders.some(function (n) {
	      return n.print_status != 'PRINTABLE';
	    })) {
	      (0, _utilsIndex.Noty)('warning', '请确定所有订单均可直接打印!');
	      return;
	    }
	    this.setState({ submitting: true });
	    this.props.startPrint(this.props.checked_orders.map(function (n) {
	      return n.order_id;
	    })).done((function () {
	      (0, _utilsIndex.Noty)('success', '操作成功');
	      this.setState({ submitting: false });
	      this.props.callback();
	      this.refs.modal.hide();
	    }).bind(this)).fail(function (e) {
	      (0, _utilsIndex.Noty)('error', e || '异常错误');
	    });
	  },
	  show: function show() {
	    this.refs.modal.show();
	  },
	  hide: function hide() {
	    this.refs.modal.hide();
	  }
	});

	var EditModal = _react2['default'].createClass({
	  displayName: 'EditModal',

	  propTypes: {
	    'deliveryman': _react.PropTypes.object.isRequired,
	    'getAllDeliveryman': _react.PropTypes.func.isRequired,
	    'applyDeliveryman': _react.PropTypes.func.isRequired
	  },
	  getInitialState: function getInitialState() {
	    return {
	      all_deliveryman: [],
	      filter_results: [],
	      selected_deliveryman_id: undefined,
	      orders: []
	    };
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var _this3 = this;

	    var deliveryman = nextProps.deliveryman;

	    //只需要初始化一次
	    if (deliveryman.load_success && !this._hasInitial) {
	      this._hasInitial = true;
	      var list = deliveryman.list;

	      var build = (function () {
	        var new_data = list.map(function (n) {
	          n.py = window.makePy(n.deliveryman_name);
	          return n;
	        });
	        this.setState({
	          all_deliveryman: list, filter_results: new_data, selected_deliveryman_id: list.length && list[0].deliveryman_id
	        });
	      }).bind(this);

	      if (window.makePy) {
	        build();
	      } else {
	        //异步加载的chinese_py库可能还未加载完成，所以需要定时检测
	        this._build_timer = setInterval(function () {
	          if (window.makePy) {
	            build();
	            clearInterval(_this3._build_timer);
	            delete _this3._build_timer;
	          }
	        }, 100);
	      }
	    }
	  },
	  translate: function translate() {},
	  render: function render() {
	    var _state2 = this.state;
	    var filter_results = _state2.filter_results;
	    var selected_deliveryman_id = _state2.selected_deliveryman_id;
	    var orders = _state2.orders;
	    var _props5 = this.props;
	    var batch_edit = _props5.batch_edit;
	    var submitting = _props5.submitting;

	    var content = filter_results.map(function (n) {
	      return _react2['default'].createElement(
	        'option',
	        { key: n.deliveryman_id, value: n.deliveryman_id },
	        n.deliveryman_name + ' ' + n.deliveryman_mobile
	      );
	    });
	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { onConfirm: this.saveHandler, onCancel: this.hideCallback, submitting: submitting, ref: 'modal', title: '编辑配送人员' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline mg-15', style: { marginTop: 15 } },
	        _react2['default'].createElement(
	          'div',
	          { className: 'input-group input-group-sm', style: { marginLeft: 168 } },
	          _react2['default'].createElement(
	            'span',
	            { className: 'input-group-addon' },
	            _react2['default'].createElement('i', { className: 'fa fa-search' })
	          ),
	          _react2['default'].createElement('input', { onChange: this.filterHandler, type: 'text',
	            className: 'form-control', style: { 'width': '200' }, placeholder: '配送员拼音首字母 或 手机号码' })
	        )
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-inline mg-15', style: { 'padding': '14px 0' } },
	        orders.length > 1 ? _react2['default'].createElement(
	          'center',
	          null,
	          _react2['default'].createElement(
	            'h5',
	            { style: { 'marginTop': 0 } },
	            '您已同时勾选',
	            _react2['default'].createElement(
	              'span',
	              { className: 'strong font-lg' },
	              ' ' + orders.length + ' '
	            ),
	            '个订单'
	          ),
	          _react2['default'].createElement(
	            'h5',
	            { style: { 'marginBottom': 30 } },
	            '来编辑配送人员'
	          )
	        ) : null,
	        _react2['default'].createElement(
	          'div',
	          { style: { marginLeft: 168 } },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '配送人员　'
	          ),
	          _react2['default'].createElement(
	            'select',
	            { onChange: this.onSelectDeliveryman, value: selected_deliveryman_id, className: 'form-control input-sm', style: { 'minWidth': '145px' } },
	            content.length ? content : _react2['default'].createElement(
	              'option',
	              null,
	              '无'
	            )
	          )
	        )
	      )
	    );
	  },
	  filterHandler: function filterHandler(e) {
	    var value = e.target.value;
	    var all_deliveryman = this.state.all_deliveryman;

	    var results = [];
	    value = value.toUpperCase();
	    if (value === '') {
	      results = all_deliveryman;
	    } else if (/^\d+$/i.test(value)) {
	      //电话号码
	      results = all_deliveryman.filter(function (n) {
	        return n.phone.indexOf(value) == 0;
	      });
	    } else if (/^\w+$/i.test(value)) {
	      //首字母
	      results = all_deliveryman.filter(function (n) {
	        return n.py.some(function (m) {
	          return m.indexOf(value) == 0;
	        });
	      });
	    } else {
	      //中文全称
	      results = all_deliveryman.filter(function (n) {
	        return n.text.indexOf(value) != -1;
	      });
	    }
	    this.setState({ filter_results: results, selected_deliveryman_id: results.length && results[0].deliveryman_id });
	  },
	  onSelectDeliveryman: function onSelectDeliveryman(e) {
	    this.setState({ selected_deliveryman_id: e.target.value });
	  },
	  saveHandler: function saveHandler() {
	    var _state3 = this.state;
	    var selected_deliveryman_id = _state3.selected_deliveryman_id;
	    var orders = _state3.orders;

	    var selected_deliveryman = this.state.filter_results.filter(function (n) {
	      return n.deliveryman_id == selected_deliveryman_id;
	    });
	    this.props.applyDeliveryman({
	      deliveryman_id: selected_deliveryman_id,
	      deliveryman_name: selected_deliveryman.length && selected_deliveryman[0].deliveryman_name,
	      deliveryman_mobile: selected_deliveryman.length && selected_deliveryman[0].deliveryman_mobile,
	      order_ids: orders.map(function (n) {
	        return n.order_id;
	      })
	    }).done((function (json) {
	      (0, _utilsIndex.Noty)('success', '操作成功！');
	      this.props.callback();
	      this.refs.modal.hide();
	    }).bind(this)).fail(function (json) {
	      console.error(json);
	      (0, _utilsIndex.Noty)('error', '操作失败！');
	    });
	  },
	  componentDidMount: function componentDidMount() {
	    var _this4 = this;

	    //稍微延时一下，
	    setTimeout(function () {
	      _this4.props.getAllDeliveryman();
	    }, 200);
	  },
	  show: function show(orders) {
	    this.setState({ orders: orders });
	    this.refs.modal.show();
	  },
	  hideCallback: function hideCallback() {
	    this.setState({
	      filter_results: this.state.all_deliveryman,
	      selected_deliveryman_id: undefined,
	      orders: []
	    });
	  }
	});

	var ApplyPrintModal = _react2['default'].createClass({
	  displayName: 'ApplyPrintModal',

	  propTypes: {
	    applyPrint: _react.PropTypes.func.isRequired
	  },
	  getInitialState: function getInitialState() {
	    return {
	      order_id: '',
	      reason: '',
	      applicant_mobile: '',
	      director_mobile: ''
	    };
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  render: function render() {
	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { onConfirm: this.saveHandler, onCancel: this.hideCallback, submitting: this.props.submitting, ref: 'modal', size: 'sm', title: '重新申请打印' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'pl-50' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　订单编号：'
	          ),
	          _react2['default'].createElement(
	            'span',
	            null,
	            ' ' + this.state.order_id
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　申请理由：'
	          ),
	          _react2['default'].createElement('textarea', { valueLink: this.linkState('reason'), cols: '18', rows: '2', className: 'form-control input-xs' })
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '申请人手机：'
	          ),
	          _react2['default'].createElement('input', { valueLink: this.linkState('applicant_mobile'), type: 'text', className: 'form-control input-xs' })
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　主管手机：'
	          ),
	          _react2['default'].createElement('input', { valueLink: this.linkState('director_mobile'), type: 'text', className: 'form-control input-xs' })
	        )
	      )
	    );
	  },
	  saveHandler: function saveHandler() {
	    var applicant_mobile = this.state.applicant_mobile;

	    if (!_utilsIndex.form.isMobile(applicant_mobile)) {
	      (0, _utilsIndex.Noty)('warning', '错误的电话号！');return;
	    }
	    this.props.applyPrint(_extends({}, this.state, { order_id: this.state.order_id })).done((function () {
	      this.props.callback();
	      this.refs.modal.hide();
	    }).bind(this)).fail(function (msg, code) {
	      (0, _utilsIndex.Noty)('error', msg || '服务器异常');
	    });
	  },
	  show: function show(order_id) {
	    this.setState({ order_id: order_id }, function () {
	      this.refs.modal.show();
	    });
	  },
	  hideCallback: function hideCallback() {
	    // this.setState(this.getInitialState());
	  }
	});

	//再次打印，输入验证码的弹窗
	var RePrintModal = _react2['default'].createClass({
	  displayName: 'RePrintModal',

	  propTypes: {
	    rePrint: _react.PropTypes.func.isRequired
	  },
	  getInitialState: function getInitialState() {
	    return {
	      order_id: '',
	      validate_code: ''
	    };
	  },
	  render: function render() {
	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { onConfirm: this.saveHandler, onCancel: this.hideCallback, submitting: this.props.submitting, ref: 'modal', size: 'sm', title: '打印' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'pl-50' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '订单编号：'
	          ),
	          _react2['default'].createElement(
	            'span',
	            null,
	            ' ' + this.state.order_id
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　验证码：'
	          ),
	          _react2['default'].createElement('input', { valueLink: this.linkState('validate_code'), type: 'text', className: 'form-control input-xs' })
	        )
	      )
	    );
	  },
	  saveHandler: function saveHandler() {
	    var order_id = this.state.order_id;

	    this.props.validatePrintCode(order_id, this.state.validate_code).done((function () {
	      this.props.rePrint(order_id).done((function () {
	        this.refs.modal.hide();
	        setTimeout(this.props.callback, 1000);
	      }).bind(this));
	      this.refs.modal.hide();
	    }).bind(this)).fail(function () {
	      (0, _utilsIndex.Noty)('error', '服务器异常');
	    });
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  show: function show(order_id) {
	    this.setState({ order_id: order_id }, function () {
	      this.refs.modal.show();
	    });
	  },
	  hideCallback: function hideCallback() {
	    this.setState(this.getInitialState());
	  }
	});
	module.exports = exports['default'];

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.getAllDeliveryman = getAllDeliveryman;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var GET_ALL_DELIVERYMAN = 'GET_ALL_DELIVERYMAN';
	exports.GET_ALL_DELIVERYMAN = GET_ALL_DELIVERYMAN;

	function getAllDeliveryman() {
	  return (0, _utilsRequest.GET)(_configUrl2['default'].deliveryman.toString(), null, GET_ALL_DELIVERYMAN);
	  // return TEST([
	  //   { deliveryman_id: '1', deliveryman_name: '张三三', deliveryman_mobile: '17744445555' },
	  //   { deliveryman_id: '2', deliveryman_name: '李四四', deliveryman_mobile: '13544445555' },
	  //   { deliveryman_id: '3', deliveryman_name: '王五五', deliveryman_mobile: '13344445555' },
	  //   { deliveryman_id: '4', deliveryman_name: '韩梅梅', deliveryman_mobile: '13644445555' },
	  //   { deliveryman_id: '5', deliveryman_name: '刘小明', deliveryman_mobile: '18944445555' }
	  // ], GET_ALL_DELIVERYMAN);
		}

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.applyDeliveryman = applyDeliveryman;
	exports.startPrint = startPrint;
	exports.applyPrint = applyPrint;
	exports.validatePrintCode = validatePrintCode;
	exports.rePrint = rePrint;
	exports.searchByScan = searchByScan;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _utilsPromise = __webpack_require__(238);

	var _utilsPromise2 = _interopRequireDefault(_utilsPromise);

	var APPLY_DELIVERYMAN = 'APPLY_DELIVERYMAN';exports.APPLY_DELIVERYMAN = APPLY_DELIVERYMAN;
	//key: 0->正在处理，1->成功，2->失败

	function applyDeliveryman(data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].deliveryman_apply.toString(), data, APPLY_DELIVERYMAN);
	  // return TEST(null, [
	  //   {type: APPLY_DELIVERYMAN, key: 0},  //立即派发
	  //   {type: APPLY_DELIVERYMAN, key: 1}   //2000毫秒后派发
	  // ], 2000, true);
	}

	function startPrint(order_ids) {
	  return function (dispatch) {
	    return new _utilsPromise2['default'](function (resolve, reject) {
	      if (!order_ids.length) {
	        reject('参数错误');
	      } else {
	        try {
	          window.open(_configUrl2['default'].print.toString() + '?order_ids=' + order_ids.join(','));
	          setTimeout(resolve, 500);
	        } catch (e) {
	          console.error(e);
	          reject('打印出错');
	        }
	      }
	    });
	  };
	  // return test();
	}

	var APPLY_PRINT = 'APPLY_PRINT';exports.APPLY_PRINT = APPLY_PRINT;
	//key: 0->正在处理，1->成功，2->失败

	function applyPrint(data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return (0, _utilsRequest.POST)(_configUrl2['default'].apply_print.toString(), data, APPLY_PRINT);
	  // return TEST(null, [
	  //   {type: APPLY_PRINT, key: 0},  //立即派发
	  //   {type: APPLY_PRINT, key: 1}   //2000毫秒后派发
	  // ], 2000, true);
	}

	var REPRINT_VALIDATE_CODE = 'REPRINT_VALIDATE_CODE';exports.REPRINT_VALIDATE_CODE = REPRINT_VALIDATE_CODE;
	//key: 0->正在处理，1->成功，2->失败

	function validatePrintCode(order_id, validate_code) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].reprint_validate.toString(order_id), { validate_code: validate_code }, REPRINT_VALIDATE_CODE);
	  // return TEST(null, [
	  //   {type: REPRINT_VALIDATE_CODE, key: 0},  //立即派发
	  //   {type: REPRINT_VALIDATE_CODE, key: 1}   //2000毫秒后派发
	  // ], 2000, true);
	}

	function rePrint(order_id) {
	  return function (dispatch) {
	    return new _utilsPromise2['default'](function (resolve, reject) {
	      try {
	        window.open(_configUrl2['default'].reprint.toString(order_id));
	        resolve();
	      } catch (e) {
	        console.error(e);
	        reject('打印出错');
	      }
	    });
	  };
	}

	var GET_DELIVERY_SCAN_LIST = 'GET_DELIVERY_SCAN_LIST';
	exports.GET_DELIVERY_SCAN_LIST = GET_DELIVERY_SCAN_LIST;

	function searchByScan(order_ids) {
	  return (0, _utilsRequest.POST)(_configUrl2['default'].order_delivery.toString(), { order_ids: order_ids }, GET_DELIVERY_SCAN_LIST);
	}

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _utilsIndex = __webpack_require__(160);

	/**
	 * 扫描窗口
	 */

	var RotateLoading = (function (_Component) {
	  _inherits(RotateLoading, _Component);

	  function RotateLoading() {
	    _classCallCheck(this, RotateLoading);

	    _get(Object.getPrototypeOf(RotateLoading.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(RotateLoading, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        _extends({ className: 'inline-block' }, this.props),
	        _react2['default'].createElement('span', { className: 'rotate-loading-1' }),
	        _react2['default'].createElement('span', { className: 'rotate-loading-2' }),
	        _react2['default'].createElement('span', { className: 'rotate-loading-3' })
	      );
	    }
	  }]);

	  return RotateLoading;
	})(_react.Component);

	var ScanModal = (function (_Component2) {
	  _inherits(ScanModal, _Component2);

	  function ScanModal(props) {
	    _classCallCheck(this, ScanModal);

	    _get(Object.getPrototypeOf(ScanModal.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      scanable: true,
	      value: '',
	      order_ids: []
	    };
	    this.show = this.show.bind(this);
	    this.hide = this.hide.bind(this);
	  }

	  _createClass(ScanModal, [{
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      var content = this.state.order_ids.map(function (n, i) {
	        return _react2['default'].createElement(
	          'div',
	          { key: n, className: 'mg-15 inline-block deleteable-row' },
	          _react2['default'].createElement(
	            'span',
	            { className: 'strong' },
	            n
	          ),
	          _react2['default'].createElement(
	            'span',
	            { onClick: _this['delete'].bind(_this, i), className: 'del-btn space' },
	            '×'
	          )
	        );
	      });
	      return _react2['default'].createElement(
	        _commonStd_modal2['default'],
	        { onConfirm: this.onConfirm.bind(this), onCancel: this.hide, ref: 'modal', title: '批量扫描' },
	        _react2['default'].createElement(
	          'center',
	          null,
	          this.state.scanable ? _react2['default'].createElement(
	            'h5',
	            { className: 'strong font-lg' },
	            '可以扫描',
	            _react2['default'].createElement(RotateLoading, { style: { 'marginLeft': 5 } })
	          ) : _react2['default'].createElement(
	            'h5',
	            { className: 'text-danger font-lg' },
	            '非扫描状态，请点击以下输入框'
	          )
	        ),
	        _react2['default'].createElement(
	          'center',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'form-group mg-15 form-inline' },
	            _react2['default'].createElement('input', {
	              ref: 'scan_input',
	              value: this.state.value,
	              onChange: this.onInput.bind(this),
	              type: 'text',
	              className: 'form-control input-xs long-input text-center',
	              placeholder: ''
	            })
	          )
	        ),
	        _react2['default'].createElement(
	          'center',
	          null,
	          content
	        )
	      );
	    }
	  }, {
	    key: 'onInput',
	    value: function onInput(e) {
	      var value = e.target.value;
	      var order_ids = this.state.order_ids;

	      if (value.length == 16) {
	        if (!order_ids.some(function (n) {
	          return n == value;
	        })) {
	          this.setState({ value: '', order_ids: order_ids.concat(value) });
	        }
	      } else {
	        this.setState({ value: value });
	      }
	    }
	  }, {
	    key: 'delete',
	    value: function _delete(i) {
	      this.state.order_ids.splice(i, 1);
	      this.setState({ order_ids: this.state.order_ids });
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.refs.modal.show((function () {
	        this.refs.scan_input.focus();
	      }).bind(this));
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      $(this.refs.input).off();
	      this.setState({ value: '', order_ids: [] });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      $(this.refs.scan_input).on('focus', (function () {
	        this.setState({ scanable: true, value: '' });
	      }).bind(this)).on('blur', (function () {
	        this.setState({ scanable: false, value: '' });
	      }).bind(this));
	    }
	  }, {
	    key: 'onConfirm',
	    value: function onConfirm() {
	      var order_ids = this.state.order_ids;

	      if (order_ids.length) {
	        this.props.search(order_ids).done(this.refs.modal.hide);
	      } else {
	        (0, _utilsIndex.Noty)('warning', '没有订单');
	      }
	    }
	  }]);

	  return ScanModal;
	})(_react.Component);

	;

	ScanModal.PropTypes = {
	  search: _react.PropTypes.func.isRequired
	};

	exports['default'] = ScanModal;
	module.exports = exports['default'];

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _reactAddonsLinkedStateMixin = __webpack_require__(284);

	var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

	var _reduxForm = __webpack_require__(242);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonTime_input = __webpack_require__(340);

	var _commonTime_input2 = _interopRequireDefault(_commonTime_input);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonLoading = __webpack_require__(306);

	var _commonRadio_group = __webpack_require__(315);

	var _commonRadio_group2 = _interopRequireDefault(_commonRadio_group);

	var _commonRecipient_info = __webpack_require__(308);

	var _commonRecipient_info2 = _interopRequireDefault(_commonRecipient_info);

	var _configAppConfig = __webpack_require__(157);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var _utilsIndex = __webpack_require__(160);

	var _utilsAcl = __webpack_require__(240);

	var _utilsAcl2 = _interopRequireDefault(_utilsAcl);

	var _actionsOrders = __webpack_require__(290);

	var OrderActions = _interopRequireWildcard(_actionsOrders);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsDeliveryman = __webpack_require__(336);

	var DeliverymanActions = _interopRequireWildcard(_actionsDeliveryman);

	var _actionsDelivery_distribute = __webpack_require__(341);

	var DeliveryDistributeActions = _interopRequireWildcard(_actionsDelivery_distribute);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var _actionsOrder_support = __webpack_require__(300);

	var OrderSupportActions = _interopRequireWildcard(_actionsOrder_support);

	var _commonOrder_products_detail = __webpack_require__(312);

	var _commonOrder_products_detail2 = _interopRequireDefault(_commonOrder_products_detail);

	var _order_detail_modal = __webpack_require__(333);

	var _order_detail_modal2 = _interopRequireDefault(_order_detail_modal);

	var _commonScan_modal = __webpack_require__(338);

	var _commonScan_modal2 = _interopRequireDefault(_commonScan_modal);

	var _commonOperation_record_modalJs = __webpack_require__(317);

	var _commonOperation_record_modalJs2 = _interopRequireDefault(_commonOperation_record_modalJs);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '送货单管理', link: '' }, { name: '配送单列表', link: '' }] })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var FilterHeader = (function (_Component2) {
	  _inherits(FilterHeader, _Component2);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      search_ing: false,
	      all_print_status: _configAppConfig.YES_OR_NO
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var keywords = _props$fields.keywords;
	      var begin_time = _props$fields.begin_time;
	      var end_time = _props$fields.end_time;
	      var pay_modes_id = _props$fields.pay_modes_id;
	      var order_status = _props$fields.order_status;
	      var deliveryman_id = _props$fields.deliveryman_id;
	      var delivery_id = _props$fields.delivery_id;
	      var province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var provinces = _props.provinces;
	      var cities = _props.cities;
	      var delivery_stations = _props.delivery_stations;
	      var all_order_status = _props.all_order_status;
	      var all_pay_modes = _props.all_pay_modes;
	      var all_deliveryman = _props.all_deliveryman;
	      var search_ing = this.state.search_ing;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'form-group form-inline' },
	            _react2['default'].createElement('input', _extends({}, keywords, { className: 'form-control input-xs v-mg', placeholder: '关键字' })),
	            ' 开始时间',
	            _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': begin_time, className: 'short-input' }),
	            ' 配送时间',
	            _react2['default'].createElement(_commonDatepicker2['default'], { editable: true, 'redux-form': end_time, className: 'short-input space-right' }),
	            _react2['default'].createElement(_commonSelect2['default'], _extends({}, pay_modes_id, { options: all_pay_modes, 'default-text': '选择支付方式', className: 'space-right' })),
	            _react2['default'].createElement(_commonSelect2['default'], _extends({}, order_status, { options: all_order_status, 'default-text': '选择订单状态', className: 'space-right' })),
	            _react2['default'].createElement(_commonSelect2['default'], _extends({}, deliveryman_id, { options: all_deliveryman.map(function (n) {
	                return { id: n.deliveryman_id, text: n.deliveryman_name };
	              }), 'default-text': '选择配送员', className: 'space-right' })),
	            (0, _utilsAcl2['default'])('DeliveryManageDistributeStationFilter') ? _react2['default'].createElement(_commonSelect2['default'], _extends({}, delivery_id, { options: delivery_stations, 'default-text': '选择配送中心', className: 'space-right' })) : null
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'form-group form-inline' },
	            (0, _utilsAcl2['default'])('DeliveryManageDistributeAddressFilter') ? [_react2['default'].createElement(_commonSelect2['default'], _extends({}, province_id, { onChange: this.onProvinceChange.bind(this, province_id.onChange), options: provinces, ref: 'province', key: 'province', 'default-text': '选择省份', className: 'space-right' })), _react2['default'].createElement(_commonSelect2['default'], _extends({}, city_id, { options: cities, 'default-text': '选择城市', ref: 'city', key: 'city', className: 'space-right' }))] : null,
	            _react2['default'].createElement(
	              'button',
	              { disabled: search_ing, 'data-submitting': search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs space-right' },
	              _react2['default'].createElement('i', { className: 'fa fa-search' }),
	              ' 搜索'
	            ),
	            '　',
	            _react2['default'].createElement(
	              'button',
	              { onClick: this.onScanHandler.bind(this), className: 'btn btn-theme btn-xs space-right' },
	              '扫描'
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      setTimeout((function () {
	        var _props2 = this.props;
	        var getProvinces = _props2.getProvinces;
	        var getPayModes = _props2.getPayModes;
	        var getAllDeliveryman = _props2.getAllDeliveryman;
	        var getDeliveryStations = _props2.getDeliveryStations;

	        getProvinces();
	        getPayModes();
	        getAllDeliveryman();
	        getDeliveryStations();
	        (0, _utilsLazy_load2['default'])('noty');
	      }).bind(this), 0);
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.provinceReset();
	      if (value != this.refs.province.props['default-value']) var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.getCities(value).done(function () {
	        $city.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this = this;

	      this.setState({ search_ing: true });
	      this.props.getOrderDistributeList({ page_no: 0, page_size: this.props.page_size }).always(function () {
	        _this.setState({ search_ing: false });
	      });
	    }
	  }, {
	    key: 'onScanHandler',
	    value: function onScanHandler() {
	      this.props.showScanModal();
	    }
	  }]);

	  return FilterHeader;
	})(_react.Component);

	FilterHeader.propTypes = {
	  provinces: _react.PropTypes.array.isRequired,
	  cities: _react.PropTypes.array.isRequired,
	  all_pay_modes: _react.PropTypes.array.isRequired,
	  delivery_stations: _react.PropTypes.array.isRequired,
	  all_order_status: _react.PropTypes.array.isRequired,
	  all_pay_modes: _react.PropTypes.array.isRequired,
	  all_deliveryman: _react.PropTypes.array.isRequired
	};
	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'order_distribute_filter',
	  fields: ['keywords', 'begin_time', 'end_time', 'pay_modes_id', 'order_status', 'deliveryman_id', 'delivery_id', 'province_id', 'city_id']
	}, function (state) {
	  var now = (0, _utilsIndex.dateFormat)(new Date());
	  return {
	    //赋初始值
	    initialValues: {
	      begin_time: now,
	      end_time: now
	    }
	  };
	})(FilterHeader);

	var OrderRow = (function (_Component3) {
	  _inherits(OrderRow, _Component3);

	  function OrderRow() {
	    _classCallCheck(this, OrderRow);

	    _get(Object.getPrototypeOf(OrderRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(OrderRow, [{
	    key: 'render',
	    value: function render() {
	      var props = this.props;

	      var _order_status = _configAppConfig.order_status[props.status] || {};
	      return _react2['default'].createElement(
	        'tr',
	        { onClick: this.clickHandler.bind(this), className: props.active_order_id == props.order_id ? 'active' : '' },
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement('input', { onChange: this.checkOrderHandler.bind(this), checked: props.checked, disabled: props.status == 'COMPLETED', type: 'checkbox' })
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.status == 'DELIVERY' ? [_react2['default'].createElement(
	            'a',
	            { onClick: this.showSignedModal.bind(this), key: 'signin', href: 'javascript:;' },
	            '[签收]'
	          ), _react2['default'].createElement('br', { key: 'br' }), _react2['default'].createElement(
	            'a',
	            { onClick: this.showUnSignedModal.bind(this), key: 'unsignin', href: 'javascript:;' },
	            '[未签收]'
	          )] : null
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          (0, _utilsIndex.parseTime)(props.delivery_time)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          '￥',
	          props.total_amount / 100
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.owner_name,
	          _react2['default'].createElement('br', null),
	          props.owner_mobile
	        ),
	        _react2['default'].createElement(_commonRecipient_info2['default'], { data: props }),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: props.viewOrderDetail, href: 'javascript:;' },
	            props.order_id
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.delivery_type
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'remark-in-table' },
	            props.remarks
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          (0, _utilsIndex.parseTime)(props.signin_time)
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'div',
	            { className: 'bordered bold order-status', style: { color: _order_status.color || 'inherit', background: _order_status.bg } },
	            _order_status.value
	          )
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.updated_by
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.viewOrderOperationRecord.bind(this), className: 'inline-block time', href: 'javascript:;' },
	            props.updated_time
	          )
	        )
	      );
	    }
	  }, {
	    key: 'showSignedModal',
	    value: function showSignedModal(e) {
	      this.props.showSignedModal(this.props);
	      e.stopPropagation();
	    }
	  }, {
	    key: 'showUnSignedModal',
	    value: function showUnSignedModal(e) {
	      this.props.showUnSignedModal(this.props);
	      e.stopPropagation();
	    }
	  }, {
	    key: 'checkOrderHandler',
	    value: function checkOrderHandler(e) {
	      var _props3 = this.props;
	      var order_id = _props3.order_id;
	      var checkOrderHandler = _props3.checkOrderHandler;

	      checkOrderHandler(order_id, e.target.checked);
	    }
	  }, {
	    key: 'clickHandler',
	    value: function clickHandler() {
	      this.props.activeOrderHandler(this.props.order_id);
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(e) {
	      this.props.viewOrderOperationRecord(this.props);
	      e.stopPropagation();
	    }
	  }]);

	  return OrderRow;
	})(_react.Component);

	var DeliveryDistributePannel = (function (_Component4) {
	  _inherits(DeliveryDistributePannel, _Component4);

	  function DeliveryDistributePannel(props) {
	    _classCallCheck(this, DeliveryDistributePannel);

	    _get(Object.getPrototypeOf(DeliveryDistributePannel.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      page_size: 5
	    };
	    this.showSignedModal = this.showSignedModal.bind(this);
	    this.showUnSignedModal = this.showUnSignedModal.bind(this);
	    this.checkOrderHandler = this.checkOrderHandler.bind(this);
	    this.activeOrderHandler = this.activeOrderHandler.bind(this);
	    this.viewOrderDetail = this.viewOrderDetail.bind(this);
	    this.viewOrderOperationRecord = this.viewOrderOperationRecord.bind(this);
	    this.showScanModal = this.showScanModal.bind(this);
	    this.search = this.search.bind(this);
	  }

	  _createClass(DeliveryDistributePannel, [{
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props;
	      var filter = _props4.filter;
	      var area = _props4.area;
	      var deliveryman = _props4.deliveryman;
	      var orders = _props4.orders;
	      var main = _props4.main;
	      var all_order_srcs = _props4.all_order_srcs;
	      var all_pay_modes = _props4.all_pay_modes;
	      var signOrder = _props4.signOrder;
	      var unsignOrder = _props4.unsignOrder;
	      var searchByScan = _props4.searchByScan;
	      var getOrderOptRecord = _props4.getOrderOptRecord;
	      var resetOrderOptRecord = _props4.resetOrderOptRecord;
	      var operationRecord = _props4.operationRecord;
	      var submitting = main.submitting;
	      var loading = orders.loading;
	      var refresh = orders.refresh;
	      var page_no = orders.page_no;
	      var total = orders.total;
	      var list = orders.list;
	      var check_order_info = orders.check_order_info;
	      var active_order_id = orders.active_order_id;
	      var search = this.search;
	      var showSignedModal = this.showSignedModal;
	      var showUnSignedModal = this.showUnSignedModal;
	      var showScanModal = this.showScanModal;
	      var checkOrderHandler = this.checkOrderHandler;
	      var viewOrderDetail = this.viewOrderDetail;
	      var activeOrderHandler = this.activeOrderHandler;
	      var viewOrderOperationRecord = this.viewOrderOperationRecord;
	      var scan = main.scan;
	      var scan_list = main.scan_list;
	      //扫描
	      if (scan) {
	        list = scan_list;
	      }
	      var content = list.map(function (n, i) {
	        return _react2['default'].createElement(OrderRow, _extends({
	          key: n.order_id
	        }, _extends({}, n, { active_order_id: active_order_id, showSignedModal: showSignedModal, showUnSignedModal: showUnSignedModal,
	          viewOrderDetail: viewOrderDetail, checkOrderHandler: checkOrderHandler, activeOrderHandler: activeOrderHandler, viewOrderOperationRecord: viewOrderOperationRecord })));
	      });
	      return _react2['default'].createElement(
	        'div',
	        { className: 'order-manage' },
	        _react2['default'].createElement(TopHeader, null),
	        _react2['default'].createElement(FilterHeader, _extends({}, _extends({}, this.props, filter, area, { showScanModal: showScanModal, all_deliveryman: deliveryman.list }), {
	          page_size: this.state.page_size
	        })),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '送货列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive main-list' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      _react2['default'].createElement('input', { onChange: this.checkAll.bind(this), type: 'checkbox' })
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '管理操作'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '送达时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '货到付款金额'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '下单人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '收货人信息'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单号'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送方式'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '备注'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单完成时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单状态'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作时间'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  (0, _commonLoading.tableLoader)(loading || refresh, content)
	                )
	              )
	            ),
	            scan ? null : _react2['default'].createElement(_commonPagination2['default'], {
	              page_no: page_no,
	              total_count: total,
	              page_size: this.state.page_size,
	              onPageChange: this.onPageChange
	            })
	          )
	        ),
	        check_order_info ? _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              null,
	              '订单产品详情'
	            ),
	            _react2['default'].createElement(_commonOrder_products_detail2['default'], { products: check_order_info.products })
	          )
	        ) : null,
	        _react2['default'].createElement(_order_detail_modal2['default'], { ref: 'detail_modal', data: check_order_info || {}, all_order_srcs: all_order_srcs.map, all_pay_modes: all_pay_modes }),
	        _react2['default'].createElement(SignedModal, _extends({ ref: 'SignedModal' }, { submitting: submitting, signOrder: signOrder, callback: search })),
	        _react2['default'].createElement(UnSignedModal, _extends({ ref: 'UnSignedModal' }, { submitting: submitting, unsignOrder: unsignOrder, callback: search })),
	        _react2['default'].createElement(_commonScan_modal2['default'], { ref: 'ScanModal', submitting: submitting, search: searchByScan }),
	        _react2['default'].createElement(_commonOperation_record_modalJs2['default'], _extends({ ref: 'OperationRecordModal' }, _extends({ getOrderOptRecord: getOrderOptRecord, resetOrderOptRecord: resetOrderOptRecord }, operationRecord)))
	      );
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.search(page);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.search();

	      (0, _utilsLazy_load2['default'])('noty');

	      var _props5 = this.props;
	      var getOrderSrcs = _props5.getOrderSrcs;
	      var getPayModes = _props5.getPayModes;

	      getOrderSrcs();
	      getPayModes();
	    }
	  }, {
	    key: 'search',
	    value: function search(page) {
	      var _props6 = this.props;
	      var getOrderDistributeList = _props6.getOrderDistributeList;
	      var orders = _props6.orders;

	      page = typeof page == 'undefined' ? orders.page_no : page;
	      getOrderDistributeList({ page_no: page, page_size: this.state.page_size });
	    }
	  }, {
	    key: 'activeOrderHandler',
	    value: function activeOrderHandler(order_id) {
	      if (this.props.orders.active_order_id != order_id) this.props.activeOrder(order_id);
	    }
	  }, {
	    key: 'checkOrderHandler',
	    value: function checkOrderHandler(order_id, checked) {
	      this.props.checkOrder(order_id, checked);
	    }
	  }, {
	    key: 'checkAll',
	    value: function checkAll(e) {
	      this.props.checkAllOrders(e.target.checked);
	    }
	  }, {
	    key: 'viewOrderDetail',
	    value: function viewOrderDetail() {
	      this.refs.detail_modal.show();
	    }
	  }, {
	    key: 'viewOrderOperationRecord',
	    value: function viewOrderOperationRecord(order) {
	      this.refs.OperationRecordModal.show(order);
	    }
	  }, {
	    key: 'showSignedModal',
	    value: function showSignedModal(n) {
	      this.refs.SignedModal.show(n);
	    }
	  }, {
	    key: 'showUnSignedModal',
	    value: function showUnSignedModal(n) {
	      this.refs.UnSignedModal.show(n);
	    }
	  }, {
	    key: 'showScanModal',
	    value: function showScanModal() {
	      this.refs.ScanModal.show();
	    }
	  }]);

	  return DeliveryDistributePannel;
	})(_react.Component);

	function mapStateToProps(_ref) {
	  var distributeManage = _ref.distributeManage;

	  return distributeManage;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  return (0, _redux.bindActionCreators)(_extends({}, OrderActions, (0, _actionsArea2['default'])(), OrderSupportActions, DeliverymanActions, DeliveryDistributeActions, {
	    getPayModes: _actionsOrder_manage_form.getPayModes
	  }), dispatch);
	}

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DeliveryDistributePannel);

	/***************   *******   *****************/
	/***************   子模态框   *****************/
	/***************   *******   *****************/

	var SignedModal = _react2['default'].createClass({
	  displayName: 'SignedModal',

	  getInitialState: function getInitialState() {
	    return {
	      CASH: 'CASH', //现金赔偿
	      REFUND: 'REFUND', //全额退款

	      order: {},

	      signin_date: (0, _utilsIndex.dateFormat)(new Date()),
	      // signin_hour: '',  // 直接 TimeInput.val()获取
	      late_minutes: 0,
	      refund_method: '',
	      refund_money: 0,
	      refund_reson: ''
	    };
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  render: function render() {
	    var _state = this.state;
	    var signin_date = _state.signin_date;
	    var late_minutes = _state.late_minutes;
	    var refund_method = _state.refund_method;
	    var refund_money = _state.refund_money;
	    var refund_reson = _state.refund_reson;

	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { submitting: this.props.submitting, onConfirm: this.submitHandler, onCancel: this.hideCallback, title: '订单完成页面', ref: 'modal' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group mg-15 form-inline' },
	        _react2['default'].createElement(
	          'label',
	          null,
	          '签收时间：'
	        ),
	        _react2['default'].createElement(_commonDatepicker2['default'], { value: signin_date, onChange: this.onSignInDateChange, className: 'short-input' }),
	        '　',
	        _react2['default'].createElement(_commonTime_input2['default'], { onChange: this.onTimeChange, ref: 'timeinput' })
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group form-inline mg-15' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'row' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'col-xs-6' },
	            _react2['default'].createElement(
	              'label',
	              null,
	              '迟到时长：'
	            ),
	            _react2['default'].createElement(
	              'div',
	              { className: 'inline-block input-group input-group-xs' },
	              _react2['default'].createElement('input', { value: late_minutes, onChange: this.onLateTimeChange, type: 'text', className: 'form-control', style: { 'width': 50 } }),
	              _react2['default'].createElement(
	                'span',
	                { className: 'input-group-addon' },
	                'Min'
	              )
	            )
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'col-xs-6' },
	            _react2['default'].createElement(
	              'label',
	              null,
	              '货到付款金额：'
	            ),
	            _react2['default'].createElement('input', { value: this.state.order.total_amount || 0, readOnly: true, className: 'form-control input-xs short-input', style: { 'width': 50 } })
	          )
	        )
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group mg-15' },
	        _react2['default'].createElement(
	          'label',
	          { className: '' },
	          _react2['default'].createElement('input', { value: this.state.CASH, onClick: this.checkMethod, checked: this.state.CASH == refund_method, type: 'radio', name: 'method' }),
	          ' 现金赔偿（迟到30mins以内）'
	        ),
	        this.state.refund_method == this.state.CASH ? _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'input-group input-group-xs pl-20' },
	            _react2['default'].createElement('input', { valueLink: this.linkState('refund_money'), className: 'form-control input-xs', style: { 'width': 50 } }),
	            _react2['default'].createElement(
	              'span',
	              { className: 'input-group-addon' },
	              'RMB'
	            )
	          )
	        ) : null
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group mg-15' },
	        _react2['default'].createElement(
	          'label',
	          { className: '' },
	          _react2['default'].createElement('input', { value: this.state.REFUND, onClick: this.checkMethod, checked: this.state.REFUND == refund_method, type: 'radio', name: 'method' }),
	          ' 全额退款（迟到时间>=30mins）'
	        ),
	        this.state.refund_method == this.state.REFUND ? _react2['default'].createElement(
	          'div',
	          { className: 'form-group pl-20' },
	          _react2['default'].createElement(_commonRadio_group2['default'], {
	            value: refund_reson,
	            vertical: true,
	            name: 'refund_reson',
	            radios: [{ value: '迟到30mins以上', text: '迟到30mins以上' }, { value: '款式不符', text: '款式不符' }, { value: '尺寸、规格不符', text: '尺寸、规格不符' }],
	            onChange: this.checkReason
	          })
	        ) : null
	      )
	    );
	  },
	  submitHandler: function submitHandler() {
	    var _state2 = this.state;
	    var order = _state2.order;
	    var CASH = _state2.CASH;
	    var late_minutes = _state2.late_minutes;
	    var refund_method = _state2.refund_method;
	    var refund_money = _state2.refund_money;
	    var refund_reson = _state2.refund_reson;
	    var signin_date = _state2.signin_date;

	    var signin_hour = this.refs.timeinput.val();
	    if (!_utilsIndex.form.isNumber(late_minutes) || late_minutes < 0) {
	      (0, _utilsIndex.Noty)('warning', '迟到时间输入有误');return;
	    }
	    if (!signin_date || !signin_hour) {
	      (0, _utilsIndex.Noty)('warning', '请填写签收时间');return;
	    }
	    if (late_minutes > 0) {
	      if (!refund_method) {
	        (0, _utilsIndex.Noty)('warning', '请选择赔偿方式');return;
	      }
	      if (refund_method == CASH) {
	        if (!_utilsIndex.form.isNumber(refund_money)) {
	          (0, _utilsIndex.Noty)('warning', '请输入现金赔偿金额');return;
	        }
	      } else {
	        if (!refund_reson) {
	          (0, _utilsIndex.Noty)('warning', '请勾选全额退款原因');return;
	        }
	      }
	    }
	    this.props.signOrder(order.order_id, {
	      late_minutes: late_minutes,
	      payfor_type: refund_method,
	      payfor_amount: refund_money,
	      payfor_reason: refund_reson,
	      signin_time: signin_date + ' ' + signin_hour
	    }).done((function () {
	      this.refs.modal.hide();
	      this.props.callback();
	      (0, _utilsIndex.Noty)('success', '签收成功！');
	    }).bind(this)).fail(function (msg, code) {
	      (0, _utilsIndex.Noty)('error', msg || '提交失败');
	    });
	  },
	  onSignInDateChange: function onSignInDateChange(value) {
	    this.setState({ signin_date: value });
	  },
	  onTimeChange: function onTimeChange(value) {
	    this.setState({ signin_hour: value });
	  },
	  onLateTimeChange: function onLateTimeChange(e) {
	    var value = e.target.value;

	    this.setState({ late_minutes: value, refund_money: value <= 30 ? value : '' });
	  },
	  checkMethod: function checkMethod(e) {
	    this.setState({ refund_method: e.target.value });
	  },
	  checkReason: function checkReason(value) {
	    this.setState({ refund_reson: value });
	  },
	  show: function show(order) {
	    this.refs.modal.show();
	    this.setState({ order: order });
	  },
	  hideCallback: function hideCallback() {
	    this.refs.timeinput.reset();
	    this.setState(this.getInitialState());
	  }
	});

	var UnSignedModal = _react2['default'].createClass({
	  displayName: 'UnSignedModal',

	  getInitialState: function getInitialState() {
	    return {
	      NOTFOUND: 'NOTFOUND',
	      OTHER: 'OTHER',

	      order: {},

	      reason_type: '',
	      notfound_reason: '联系不上用户，无人签收',
	      other_reason: '',
	      real_pay: 0,
	      black_list: '0'
	    };
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  render: function render() {
	    var notfound_reason = this.state.notfound_reason;

	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { submitting: this.props.submitting, onConfirm: this.submitHandler, onCancel: this.hideCallback, title: '订单未完成页面', ref: 'modal' },
	      _react2['default'].createElement(
	        'div',
	        { className: ' mg-15' },
	        _react2['default'].createElement(
	          'label',
	          { className: 'strong-label' },
	          '未签收原因：'
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            _react2['default'].createElement('input', { value: this.state.NOTFOUND,
	              checked: this.state.reason_type == this.state.NOTFOUND,
	              onClick: this.checkReason, type: 'radio', name: 'reason' }),
	            ' ' + notfound_reason
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            _react2['default'].createElement('input', { value: this.state.OTHER,
	              checked: this.state.reason_type == this.state.OTHER,
	              onClick: this.checkReason, type: 'radio', name: 'reason' }),
	            ' 其他'
	          ),
	          '　',
	          _react2['default'].createElement('input', { valueLink: this.linkState('other_reason'), className: 'form-control input-xs long-input' })
	        )
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-inline mg-15' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'row' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'col-xs-6' },
	            _react2['default'].createElement(
	              'label',
	              null,
	              '货到付款金额：'
	            ),
	            _react2['default'].createElement('input', { value: this.state.order.total_amount / 100 || 0, readOnly: true, className: 'form-control input-xs short-input', style: { 'width': 50 } })
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'col-xs-6' },
	            _react2['default'].createElement(
	              'label',
	              null,
	              '实收金额：'
	            ),
	            _react2['default'].createElement('input', { valueLink: this.linkState('real_pay'), className: 'form-control input-xs', style: { 'width': 50 } })
	          )
	        )
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: 'form-group mg-15' },
	        _react2['default'].createElement(
	          'label',
	          { className: 'strong-label' },
	          '是否将该用户列入黑名单：'
	        ),
	        '　',
	        _react2['default'].createElement(_commonRadio_group2['default'], {
	          value: this.state.black_list,
	          className: 'inline-block',
	          radios: [{ value: "1", text: '是' }, { value: "0", text: '否' }],
	          onChange: this.checkBlackList
	        }),
	        _react2['default'].createElement(
	          'p',
	          { className: 'font-xs gray' },
	          '（列入黑名单后，此用户ID下单无法再选择货到付款模式）'
	        )
	      )
	    );
	  },
	  submitHandler: function submitHandler() {
	    var _state3 = this.state;
	    var order = _state3.order;
	    var reason_type = _state3.reason_type;
	    var OTHER = _state3.OTHER;
	    var notfound_reason = _state3.notfound_reason;
	    var other_reason = _state3.other_reason;
	    var real_pay = _state3.real_pay;
	    var black_list = _state3.black_list;

	    if (!reason_type) {
	      (0, _utilsIndex.Noty)('warning', '请选择未签收原因');return;
	    }
	    if (reason_type == OTHER && !other_reason.trim()) {
	      (0, _utilsIndex.Noty)('warning', '请填写其他未签收原因');return;
	    }
	    if (!_utilsIndex.form.isNumber(real_pay)) {
	      (0, _utilsIndex.Noty)('warning', '请填写正确的实收金额');return;
	    }
	    this.props.unsignOrder(order.order_id, {
	      COD_amount: real_pay * 100,
	      unsignin_reason: reason_type == OTHER ? other_reason : notfound_reason,
	      is_blacklist: black_list
	    }).done((function () {
	      this.refs.modal.hide();
	      this.props.callback();
	      (0, _utilsIndex.Noty)('success', '操作成功！');
	    }).bind(this)).fail(function (msg, code) {
	      (0, _utilsIndex.Noty)('error', msg || '提交失败');
	    });
	  },
	  checkReason: function checkReason(e) {
	    var reason_type = e.target.value;
	    this.setState({ reason_type: reason_type, other_reason: reason_type == this.state.NOTFOUND ? '' : this.state.other_reason });
	  },
	  checkBlackList: function checkBlackList(value) {
	    this.setState({ black_list: value });
	  },
	  show: function show(order) {
	    this.refs.modal.show();
	    this.setState({ order: order });
	  },
	  hideCallback: function hideCallback() {
	    this.setState(this.getInitialState());
	  }
	});
	module.exports = exports['default'];

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsIndex = __webpack_require__(160);

	var TimeInput = (function (_Component) {
	  _inherits(TimeInput, _Component);

	  function TimeInput(props) {
	    _classCallCheck(this, TimeInput);

	    _get(Object.getPrototypeOf(TimeInput.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      hour: '',
	      minute: '',
	      hour_error: '',
	      minute_error: ''
	    };
	  }

	  _createClass(TimeInput, [{
	    key: 'render',
	    value: function render() {
	      var _state = this.state;
	      var hour = _state.hour;
	      var minute = _state.minute;
	      var hour_error = _state.hour_error;
	      var minute_error = _state.minute_error;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'form-inline inline-block' },
	        _react2['default'].createElement('input', {
	          value: this.state.hour,
	          onChange: this.onHourChange.bind(this),
	          className: 'form-control input-xs time-input ' + hour_error }),
	        _react2['default'].createElement(
	          'span',
	          { className: 'gray' },
	          ' : '
	        ),
	        _react2['default'].createElement('input', {
	          value: this.state.minute,
	          onChange: this.onMinuteChange.bind(this),
	          className: 'form-control input-xs time-input ' + minute_error })
	      );
	    }
	  }, {
	    key: 'val',
	    value: function val() {
	      var _state2 = this.state;
	      var hour = _state2.hour;
	      var minute = _state2.minute;

	      return !hour || !minute ? '' : (hour > 9 ? hour : '0' + hour) + ':' + (minute > 9 ? minute : '0' + minute);
	    }
	  }, {
	    key: 'reset',
	    value: function reset() {
	      this.setState({
	        hour: '',
	        minute: '',
	        hour_error: '',
	        minute_error: ''
	      });
	    }
	  }, {
	    key: 'onHourChange',
	    value: function onHourChange(e) {
	      var value = e.target.value;var hour_error;
	      if (_utilsIndex.form.isNumber(value) && value >= 0 && value < 24) {
	        hour_error = '';
	      } else {
	        hour_error = 'error';
	      }
	      this.setState({ hour: value, hour_error: hour_error });
	    }
	  }, {
	    key: 'onMinuteChange',
	    value: function onMinuteChange(e) {
	      var value = e.target.value;var minute_error;
	      if (_utilsIndex.form.isNumber(value) && value >= 0 && value < 60) {
	        minute_error = '';
	      } else {
	        minute_error = 'error';
	      }
	      this.setState({ minute: e.target.value, minute_error: minute_error });
	    }
	  }]);

	  return TimeInput;
	})(_react.Component);

	exports['default'] = TimeInput;
	module.exports = exports['default'];

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.signOrder = signOrder;
	exports.unsignOrder = unsignOrder;
	exports.searchByScan = searchByScan;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var SIGN_ORDER = 'SIGN_ORDER';exports.SIGN_ORDER = SIGN_ORDER;
	//key: 0->正在处理，1->成功，2->失败

	function signOrder(order_id, data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].order_sign.toString(order_id), data, SIGN_ORDER);
	  // return TEST(null, [
	  //   {type: SIGN_ORDER, key: 0},  //立即派发
	  //   {type: SIGN_ORDER, key: 1}   //2000毫秒后派发
	  // ], 2000, true);
	}

	var UNSIGN_ORDER = 'UNSIGN_ORDER';exports.UNSIGN_ORDER = UNSIGN_ORDER;
	//key: 0->正在处理，1->成功，2->失败

	function unsignOrder(order_id, data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].order_unsign.toString(order_id), data, UNSIGN_ORDER);
	  // return TEST(null, [
	  //   {type: UNSIGN_ORDER, key: 0},  //立即派发
	  //   {type: UNSIGN_ORDER, key: 1}   //2000毫秒后派发
	  // ], 2000, true);
	}

	var GET_DISTRIBUTE_SCAN_LIST = 'GET_DISTRIBUTE_SCAN_LIST';
	exports.GET_DISTRIBUTE_SCAN_LIST = GET_DISTRIBUTE_SCAN_LIST;

	function searchByScan(order_ids) {
	  return (0, _utilsRequest.POST)(_configUrl2['default'].order_distribute.toString(), { order_ids: order_ids }, GET_DISTRIBUTE_SCAN_LIST);
	}

	var getDeliveryStations = _actionsOrder_manage_form.getDeliveryStations;
	exports.getDeliveryStations = getDeliveryStations;

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _reactAddonsLinkedStateMixin = __webpack_require__(284);

	var _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);

	var _reduxForm = __webpack_require__(242);

	var _commonDatepicker = __webpack_require__(301);

	var _commonDatepicker2 = _interopRequireDefault(_commonDatepicker);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _commonRadio_group = __webpack_require__(315);

	var _commonRadio_group2 = _interopRequireDefault(_commonRadio_group);

	var _commonLoading = __webpack_require__(306);

	var _utilsIndex = __webpack_require__(160);

	var _configAppConfig = __webpack_require__(157);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var _actionsOrders = __webpack_require__(290);

	var OrderActions = _interopRequireWildcard(_actionsOrders);

	var _actionsDelivery_print_review = __webpack_require__(343);

	var DeliverPrintReviewActions = _interopRequireWildcard(_actionsDelivery_print_review);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '送货单管理', link: '/dm/change' }, { name: '打印审核', link: '' }] })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var FilterHeader = (function (_Component2) {
	  _inherits(FilterHeader, _Component2);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      search_ing: false
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var order_id = _props$fields.order_id;
	      var begin_time = _props$fields.begin_time;
	      var end_time = _props$fields.end_time;
	      var is_reprint = _props$fields.is_reprint;
	      var status = _props$fields.status;
	      var yes_or_no = _props.yes_or_no;
	      var all_review_status = _props.all_review_status;
	      var search_ing = this.state.search_ing;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body form-inline' },
	          _react2['default'].createElement('input', _extends({}, order_id, { className: 'form-control input-xs v-mg', placeholder: '订单号' })),
	          ' 开始时间',
	          _react2['default'].createElement(_commonDatepicker2['default'], { 'redux-form': begin_time, editable: true, className: 'short-input' }),
	          ' 结束时间',
	          _react2['default'].createElement(_commonDatepicker2['default'], { 'redux-form': end_time, editable: true, className: 'short-input space-right' }),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, is_reprint, { options: yes_or_no, 'default-text': '是否打印', className: 'space-right' })),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, status, { options: all_review_status, 'default-text': '选择审核状态', className: 'space-right' })),
	          _react2['default'].createElement(
	            'button',
	            { disabled: search_ing, 'data-submitting': search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs' },
	            _react2['default'].createElement('i', { className: 'fa fa-search' }),
	            ' 搜索'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this = this;

	      this.setState({ search_ing: true });
	      this.props.search(0).always(function () {
	        _this.setState({ search_ing: false });
	      });
	    }
	  }]);

	  return FilterHeader;
	})(_react.Component);

	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'print_review',
	  fields: ['order_id', 'begin_time', 'end_time', 'is_reprint', 'status']
	}, function (state) {
	  var now = (0, _utilsIndex.dateFormat)(new Date());
	  return {
	    //赋初始值
	    initialValues: {
	      begin_time: now,
	      end_time: now
	    }
	  };
	})(FilterHeader);

	var ReviewRow = (function (_Component3) {
	  _inherits(ReviewRow, _Component3);

	  function ReviewRow() {
	    _classCallCheck(this, ReviewRow);

	    _get(Object.getPrototypeOf(ReviewRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ReviewRow, [{
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props;
	      var props = _props2 === undefined ? {} : _props2;

	      return _react2['default'].createElement(
	        'tr',
	        null,
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.order_id
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.applicant_name
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.applicant_mobile
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.apply_time
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.apply_reason
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.validate_code
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.audit_opinion
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.audit_time
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.auditor
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _configAppConfig.PRINT_REVIEW_STATUS[props.status]
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.reprint_time
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          props.status != 'AUDITED' ? [_react2['default'].createElement(
	            'a',
	            { key: 'review', onClick: this.reviewHandler.bind(this), href: 'javascript:;', className: 'nowrap' },
	            '[审核]'
	          ), _react2['default'].createElement('br', { key: 'br' })] : null
	        )
	      );
	    }
	  }, {
	    key: 'reviewHandler',
	    value: function reviewHandler() {
	      this.props.showReviewModal(this.props);
	    }
	  }]);

	  return ReviewRow;
	})(_react.Component);

	var DeliverPrintReviewPannel = (function (_Component4) {
	  _inherits(DeliverPrintReviewPannel, _Component4);

	  function DeliverPrintReviewPannel(props) {
	    _classCallCheck(this, DeliverPrintReviewPannel);

	    _get(Object.getPrototypeOf(DeliverPrintReviewPannel.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      page_size: 10,
	      review_order: {}
	    };
	    this.showReviewModal = this.showReviewModal.bind(this);
	    this.search = this.search.bind(this);
	  }

	  _createClass(DeliverPrintReviewPannel, [{
	    key: 'render',
	    value: function render() {
	      var showReviewModal = this.showReviewModal;
	      var search = this.search;
	      var _props3 = this.props;
	      var filter = _props3.filter;
	      var reviewPrintApply = _props3.reviewPrintApply;
	      var _props3$main = _props3.main;
	      var loading = _props3$main.loading;
	      var refresh = _props3$main.refresh;
	      var page_no = _props3$main.page_no;
	      var total = _props3$main.total;
	      var list = _props3$main.list;
	      var submitting = _props3$main.submitting;

	      var content = list.map(function (n, i) {
	        return _react2['default'].createElement(ReviewRow, _extends({ key: n.apply_id }, _extends({}, n, { showReviewModal: showReviewModal })));
	      });
	      return _react2['default'].createElement(
	        'div',
	        { className: 'order-manage' },
	        _react2['default'].createElement(TopHeader, null),
	        _react2['default'].createElement(FilterHeader, _extends({}, filter, { search: search })),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '送货列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '订单号'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '申请人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '申请人电话'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '申请时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '申请理由'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '验证码'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '审核意见'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '审核时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '审核人'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '审核状态'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '打印时间'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '管理操作'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  (0, _commonLoading.tableLoader)(loading || refresh, content)
	                )
	              )
	            ),
	            _react2['default'].createElement(_commonPagination2['default'], {
	              page_no: page_no,
	              total_count: total,
	              page_size: this.state.page_size,
	              onPageChange: this.onPageChange.bind(this)
	            })
	          )
	        ),
	        _react2['default'].createElement(ReviewModal, _extends({ data: this.state.review_order, reviewPrintApply: reviewPrintApply, submitting: submitting, callback: search }, { ref: 'ReviewModal' }))
	      );
	    }
	  }, {
	    key: 'showReviewModal',
	    value: function showReviewModal(n) {
	      this.setState({ review_order: n }, this.refs.ReviewModal.show());
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.search(page);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.search();

	      (0, _utilsLazy_load2['default'])('noty');
	    }
	  }, {
	    key: 'search',
	    value: function search(page) {
	      var _props4 = this.props;
	      var getPrintReviewList = _props4.getPrintReviewList;
	      var main = _props4.main;

	      page = typeof page == 'undefined' ? main.page_no : page;
	      return getPrintReviewList({ page_no: page, page_size: this.state.page_size });
	    }
	  }]);

	  return DeliverPrintReviewPannel;
	})(_react.Component);

	function mapStateToProps(_ref) {
	  var deliveryPrintReview = _ref.deliveryPrintReview;

	  return deliveryPrintReview;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  return (0, _redux.bindActionCreators)(_extends({}, OrderActions, DeliverPrintReviewActions), dispatch);
	}

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DeliverPrintReviewPannel);

	/***************   *******   *****************/
	/***************   子模态框   *****************/
	/***************   *******   *****************/

	var ReviewModal = _react2['default'].createClass({
	  displayName: 'ReviewModal',

	  propTypes: {
	    data: _react.PropTypes.object.isRequired,
	    reviewPrintApply: _react.PropTypes.func.isRequired,
	    submitting: _react.PropTypes.bool.isRequired
	  },
	  getInitialState: function getInitialState() {
	    return {
	      radios: [{ value: 'AUDITED', text: '是' }, { value: 'AUDITFAILED', text: '否' }],
	      audit_opinion: '',
	      status: 'AUDITED'
	    };
	  },
	  render: function render() {
	    var submitting = this.props.submitting;

	    return _react2['default'].createElement(
	      _commonStd_modal2['default'],
	      { onConfirm: this.onConfirm, onCancel: this.hideCallback, submitting: submitting, size: 'sm', ref: 'modal', title: '审核打印申请' },
	      _react2['default'].createElement(
	        'div',
	        { className: 'pl-50' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　订单编号：'
	          ),
	          _react2['default'].createElement(
	            'span',
	            null,
	            ' ' + this.props.data.order_id
	          )
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　审核意见：'
	          ),
	          _react2['default'].createElement('textarea', { valueLink: this.linkState('audit_opinion'), cols: '25', rows: '2', className: 'form-control input-xs' })
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '　是否通过：'
	          ),
	          _react2['default'].createElement(_commonRadio_group2['default'], {
	            radios: this.state.radios,
	            value: this.state.status,
	            className: 'inline-block',
	            name: 'review_status',
	            onChange: this.onStatusChange })
	        ),
	        _react2['default'].createElement(
	          'div',
	          { className: 'form-group form-inline' },
	          _react2['default'].createElement(
	            'label',
	            null,
	            '申请人手机：'
	          ),
	          _react2['default'].createElement(
	            'span',
	            null,
	            ' ' + this.props.data.applicant_mobile
	          )
	        )
	      )
	    );
	  },
	  onStatusChange: function onStatusChange(value) {
	    this.setState({ status: value });
	  },
	  mixins: [_reactAddonsLinkedStateMixin2['default']],
	  show: function show() {
	    this.refs.modal.show();
	  },
	  hideCallback: function hideCallback() {
	    this.setState(this.getInitialState());
	  },
	  onConfirm: function onConfirm() {
	    var _props$data = this.props.data;
	    var apply_id = _props$data.apply_id;
	    var applicant_mobile = _props$data.applicant_mobile;
	    var order_id = _props$data.order_id;
	    var _state = this.state;
	    var status = _state.status;
	    var audit_opinion = _state.audit_opinion;

	    this.props.reviewPrintApply(apply_id, { applicant_mobile: applicant_mobile, order_id: order_id, status: status, audit_opinion: audit_opinion }).done((function () {
	      this.refs.modal.hide();
	      this.props.callback();
	    }).bind(this)).fail(function () {
	      (0, _utilsIndex.Noty)('error', '服务器异常');
	    });
	  }
	});
	module.exports = exports['default'];

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.getPrintReviewList = getPrintReviewList;
	exports.reviewPrintApply = reviewPrintApply;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var _utilsIndex = __webpack_require__(160);

	var _reduxForm = __webpack_require__(242);

	var GET_PRINT_REVIEW_LIST_ING = 'GET_PRINT_REVIEW_LIST_ING';
	exports.GET_PRINT_REVIEW_LIST_ING = GET_PRINT_REVIEW_LIST_ING;
	var GET_PRINT_REVIEW_LIST = 'GET_PRINT_REVIEW_LIST';
	exports.GET_PRINT_REVIEW_LIST = GET_PRINT_REVIEW_LIST;

	function getPrintReviewList(data) {
	  return function (dispatch, getState) {
	    var filter_data = (0, _reduxForm.getValues)(getState().form.print_review);
	    filter_data = (0, _utilsIndex.formCompile)(filter_data);
	    dispatch({ type: GET_PRINT_REVIEW_LIST_ING });
	    return (0, _utilsRequest.GET)(_configUrl2['default'].print_review_list.toString(), _extends({}, data, filter_data), GET_PRINT_REVIEW_LIST)(dispatch);
	  };
	  /*
	    return TEST({
	      total: 1,
	      page_no: 0,
	      list: [{
	        'applicant_mobile':  '申请人手机-todo',
	        'applicant_name':  '申请人名字-todo',
	        'apply_id':  '申请记录ID-todo',
	        'apply_reason':  '申请理由-todo',
	        'apply_time':  '申请时间-todo',
	        'audit_':  '审核意见-todo',
	        'audit_time':  '审核时间-todo',
	        'auditor': '审核人-todo',
	        'is_reprint':  '是否已经重新打印-todo',
	        'order_id':  '订单号-todo',
	        'reprint_time':  '重新打印时间-todo',
	        'status':  '审核状态-todo',
	        'validate_code':  '短信验证码-todo',
	      }]
	    }, GET_PRINT_REVIEW_LIST, 2000)
	  */
	}

	//审核重新打印申请
	var REVIEW_PRINT_APPLY = 'REVIEW_PRINT_APPLY';exports.REVIEW_PRINT_APPLY = REVIEW_PRINT_APPLY;
	//key: 0->正在处理，1->成功，2->失败

	function reviewPrintApply(apply_id, data) {
	  //若是异步的话，那么该函数必须也返回一个函数
	  return (0, _utilsRequest.PUT)(_configUrl2['default'].review_print_apply.toString(apply_id), data, REVIEW_PRINT_APPLY);
	  // return TEST(null, [
	  //   {type: REVIEW_PRINT_APPLY, key: 0},  //立即派发
	  //   {type: REVIEW_PRINT_APPLY, key: 1}   //2000毫秒后派发
	  // ], 1000, true);
		}

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactRedux = __webpack_require__(216);

	var _redux = __webpack_require__(223);

	var _reduxForm = __webpack_require__(242);

	var _commonSearch_input = __webpack_require__(305);

	var _commonSearch_input2 = _interopRequireDefault(_commonSearch_input);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _commonLoading = __webpack_require__(306);

	var _history_instance = __webpack_require__(211);

	var _history_instance2 = _interopRequireDefault(_history_instance);

	var _autocomplete = __webpack_require__(345);

	var _autocomplete2 = _interopRequireDefault(_autocomplete);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsStation_scope_manage = __webpack_require__(346);

	var _actionsStation_scope_manage2 = _interopRequireDefault(_actionsStation_scope_manage);

	// import * as StationAction from 'actions/station_manage';

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var TopHeader = (function (_Component) {
	  _inherits(TopHeader, _Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '配送管理', link: '/sm/station' }, { name: '配送站管理', link: '' }] })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react.Component);

	var FilterHeader = (function (_Component2) {
	  _inherits(FilterHeader, _Component2);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      search_ing: false
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var station_name = _props$fields.station_name;
	      var province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var district_id = _props$fields.district_id;
	      var _props$area = _props.area;
	      var provinces = _props$area.provinces;
	      var cities = _props$area.cities;
	      var districts = _props$area.districts;
	      var stations = _props.station.stations;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body form-inline' },
	          _react2['default'].createElement(_autocomplete2['default'], { focusHandler: this.focusHandler, placeholder: '请输入配送站名称', searchHandler: this.props.getStationByName, options: stations, className: 'pull-left' }),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, province_id, { options: provinces, 'no-default': 'true', onChange: this.onProvinceChange.bind(this, province_id.onChange), ref: 'province', className: 'space-left space-right' })),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, city_id, { options: cities, 'no-default': 'true', onChange: this.onCityChange.bind(this, city_id.onChange), ref: 'city', className: 'space-right' })),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, district_id, { options: districts, ref: 'district', className: 'space-right' })),
	          _react2['default'].createElement(
	            'button',
	            { disabled: this.state.search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs' },
	            _react2['default'].createElement('i', { className: 'fa fa-search', style: { 'padding': '0 5px' } }),
	            '查询'
	          ),
	          _react2['default'].createElement(
	            'a',
	            { className: 'pull-right btn btn-theme btn-xs' },
	            _react2['default'].createElement('i', { className: 'fa fa-plus-circle', style: { 'padding': '0 5px' } }),
	            '添加'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      setTimeout((function () {
	        var _props2 = this.props;
	        var getProvinces = _props2.getProvinces;
	        var getStations = _props2.getStations;

	        getProvinces();
	        getStations();
	        console.log('ok');
	        (0, _utilsLazy_load2['default'])('noty');
	      }).bind(this), 0);

	      var intial_province_id = '110000';
	      var intial_city_id = '110000';
	      $((0, _reactDom.findDOMNode)(this.refs.province)).children('option[value=' + intial_province_id + ']').attr('selected', 'true');
	      var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.getCities(intial_province_id);
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.provinceReset();
	      if (value != this.refs.province.props['default-value']) var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.getCities(value).done(function () {
	        $city.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'onCityChange',
	    value: function onCityChange(callback, e) {
	      var value = e.target.value;

	      this.props.cityReset();
	      if (value != this.refs.city.props['default-value']) var $district = $((0, _reactDom.findDOMNode)(this.refs.district));
	      this.props.getDistricts(value).done(function () {
	        $district.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this = this;

	      var city_id = $((0, _reactDom.findDOMNode)(this.refs.city)).children('option:selected').attr('value');
	      this.setState({ search_ing: true });
	      this.props.getStationByCity(city_id).always(function () {
	        _this.setState({ search_ing: false });
	      });
	      // this.props.getOrderExchangeList({page_no: 0, page_size: this.props.page_size})
	      //   .always(()=>{
	      //     this.setState({search_ing: false});
	      //   });
	    }
	  }]);

	  return FilterHeader;
	})(_react.Component);

	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'station_manage',
	  fields: ['province_id', 'city_id', 'district_id']
	})(FilterHeader);

	var StationRow = (function (_Component3) {
	  _inherits(StationRow, _Component3);

	  function StationRow() {
	    _classCallCheck(this, StationRow);

	    _get(Object.getPrototypeOf(StationRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(StationRow, [{
	    key: 'render',
	    value: function render() {
	      var station_id = this.props.station_id;

	      return _react2['default'].createElement(
	        'tr',
	        null,
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement('input', { type: 'checkbox' })
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          this.props.province_id
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          this.props.city_id
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          this.props.district_id
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          this.props.station_name
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          this.props.address
	        ),
	        _react2['default'].createElement(
	          'td',
	          null,
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.editScope, href: 'javascript:;' },
	            '[编辑配送区域]'
	          ),
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.viewDetail, href: 'javascript:;', className: 'no-wrap' },
	            '[查看备注]'
	          ),
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.editStation, href: 'javascript:;', className: 'no-wrap' },
	            '[编辑]'
	          ),
	          _react2['default'].createElement(
	            'a',
	            { onClick: this.deleteStation, href: 'javascript:;', className: 'no-wrap' },
	            '[删除]'
	          )
	        )
	      );
	    }
	  }, {
	    key: 'editScope',
	    value: function editScope(e) {
	      _history_instance2['default'].push('/sm/station' + this.props.station_id);
	      e.stopPropagation();
	    }
	  }, {
	    key: 'viewDetail',
	    value: function viewDetail() {}
	  }, {
	    key: 'editStation',
	    value: function editStation() {}
	  }, {
	    key: 'deleteStation',
	    value: function deleteStation() {}
	  }]);

	  return StationRow;
	})(_react.Component);

	var StationManagePannel = (function (_Component4) {
	  _inherits(StationManagePannel, _Component4);

	  function StationManagePannel() {
	    _classCallCheck(this, StationManagePannel);

	    _get(Object.getPrototypeOf(StationManagePannel.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(StationManagePannel, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var station = this.props.station;

	      var content = station.station_list_info.map(function (n, i) {
	        return _react2['default'].createElement(StationRow, _extends({ key: n.id
	        }, _this2.props));
	      });
	      return _react2['default'].createElement(
	        'div',
	        { className: 'station-manage' },
	        _react2['default'].createElement(TopHeader, null),
	        _react2['default'].createElement(FilterHeader, this.props),
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '送货列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement('th', null),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '省份'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '城市'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '区域'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '配送站名称'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '详细地址'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  content
	                )
	              )
	            ),
	            _react2['default'].createElement(
	              'button',
	              { className: 'btn btn-theme btn-xs' },
	              _react2['default'].createElement('i', { className: 'fa fa-minus-square', style: { 'padding': '0 5px' } }),
	              '删除'
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return StationManagePannel;
	})(_react.Component);

	exports['default'] = StationManagePannel;

	function mapStateToProps(_ref) {
	  var stationManage = _ref.stationManage;

	  return stationManage;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  return (0, _redux.bindActionCreators)(_extends({}, (0, _actionsArea2['default'])(), (0, _actionsStation_scope_manage2['default'])()), dispatch);
	}

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(StationManagePannel);
	module.exports = exports['default'];

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var Autocomplete = (function (_Component) {
	  _inherits(Autocomplete, _Component);

	  function Autocomplete(props) {
	    _classCallCheck(this, Autocomplete);

	    _get(Object.getPrototypeOf(Autocomplete.prototype), 'constructor', this).call(this, props);
	    this.searchHandler = this.searchHandler.bind(this);
	    this.focusHandler = this.focusHandler.bind(this);
	  }

	  _createClass(Autocomplete, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var className = _props.className;
	      var searching = _props.searching;
	      var size = _props.size;
	      var placeholder = _props.placeholder;
	      var searchHandler = _props.searchHandler;
	      var focusHandler = _props.focusHandler;

	      var i_className = searching ? 'fa fa-spinner fa-spin disabled' : 'fa fa-search';
	      return _react2['default'].createElement(
	        'div',
	        { className: 'search-input ' + className },
	        _react2['default'].createElement('input', { ref: 'input',
	          className: 'form-control ' + size,
	          placeholder: placeholder,
	          onFocus: this.focusHandler.bind(this),
	          onKeyDown: this.keyDownHandler.bind(this) }),
	        _react2['default'].createElement('i', { className: i_className, onClick: this.searchHandler })
	      );
	    }
	  }, {
	    key: 'keyDownHandler',
	    value: function keyDownHandler(e) {
	      //enter键
	      if (!this.props.searching && e.which == 13) {
	        this.searchHandler();
	      }
	    }
	  }, {
	    key: 'searchHandler',
	    value: function searchHandler() {
	      if (!this.props.searching) {
	        console.log('search: ' + this.refs.input.value);
	        var station_name = this.refs.input.value;
	        if (station_name !== '') {
	          this.props.searchHandler({ station_name: this.refs.input.value });
	        }
	      }
	    }
	  }, {
	    key: 'focusHandler',
	    value: function focusHandler() {
	      var options = this.props.options;

	      var $inp = $((0, _reactDom.findDOMNode)(this.refs.input));
	      var stations = [];
	      options.forEach(function (n) {
	        stations.push(n['text']);
	      });
	      LazyLoad('autocomplete', function () {
	        $inp.autocomplete({
	          source: stations
	        });
	      });
	    }
	  }]);

	  return Autocomplete;
	})(_react.Component);

	exports['default'] = Autocomplete;

	Autocomplete.defaultProps = {
	  className: '',
	  searching: false,
	  size: 'input-xs',
	  placeholder: '',
	  searchHandler: function searchHandler() {}
	};
	module.exports = exports['default'];

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = Stations;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utilsRequest = __webpack_require__(234);

	//Promise

	var _configUrl = __webpack_require__(239);

	var _configUrl2 = _interopRequireDefault(_configUrl);

	var FAIL = 'FAIL';
	exports.FAIL = FAIL;
	var GOT_STATIONS = 'GOT_STATIONS';
	exports.GOT_STATIONS = GOT_STATIONS;
	var GOT_STATIONS_BY_CITY = 'GOT_STATIONS_BY_CITY';
	exports.GOT_STATIONS_BY_CITY = GOT_STATIONS_BY_CITY;
	var GOT_STATIONS_BY_DISTRICT = 'GOT_STATIONS_BY_DISTRICT';
	exports.GOT_STATIONS_BY_DISTRICT = GOT_STATIONS_BY_DISTRICT;
	var GOT_STATIONS_BY_NAME = 'GOT_STATIONS_BY_NAME';
	exports.GOT_STATIONS_BY_NAME = GOT_STATIONS_BY_NAME;
	var GOT_STATIONS_SCOPE = 'GOT_STATIONS_SCOPE';
	exports.GOT_STATIONS_SCOPE = GOT_STATIONS_SCOPE;
	var MODIFY_STATIONS_SCOPE = 'MODIFY_STATIONS_SCOPE';

	exports.MODIFY_STATIONS_SCOPE = MODIFY_STATIONS_SCOPE;

	function Stations() {
	  function _resolve(url, signal) {
	    return function (dispatch) {
	      return (0, _utilsRequest.get)(url).done(function (json) {
	        dispatch({
	          type: signal,
	          data: json
	        });
	      }).fail(function (msg) {
	        dispatch({
	          type: FAIL,
	          msg: msg
	        });
	      });
	    };
	  };
	  return {
	    getStations: function getStations() {
	      return _resolve(_configUrl2['default'].stations.toString(), GOT_STATIONS);
	      // return {
	      //   type: ActionTypes.GOT_STATIONS,
	      //   data: [1: '沙井配送站']
	      // }
	    },

	    getStationByCity: function getStationByCity(city_id) {
	      return _resolve(_configUrl2['default'].station_list_info.toString(city_id), GOT_STATIONS_BY_CITY);
	    },

	    getStationByDistrict: function getStationByDistrict(district_id) {
	      return _resolve(_configUrl2['default'].station_list_info.toString(district_id), GOT_STATIONS_BY_DISTRICT);
	    },

	    getStationByName: function getStationByName(station_name) {
	      return (0, _utilsRequest.GET)(_configUrl2['default'].station_info.toString(), station_name, GOT_STATIONS_BY_NAME);
	    },

	    getStationScope: function getStationScope(station_id, station_name) {
	      return (0, _utilsRequest.GET)(_configUrl2['default'].station_scope.toString(station_id), station_name, GOT_STATIONS_SCOPE);
	    },

	    modifyStationScope: function modifyStationScope(station_id, coords) {
	      return PUT(_configUrl2['default'].new_station_scope.toString(station_id), coords, MODIFY_STATIONS_SCOPE);
	    }

	  };
	}

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _redux = __webpack_require__(223);

	var _reduxForm = __webpack_require__(242);

	var _reactRedux = __webpack_require__(216);

	var _commonPagination = __webpack_require__(303);

	var _commonPagination2 = _interopRequireDefault(_commonPagination);

	var _commonStd_modal = __webpack_require__(307);

	var _commonStd_modal2 = _interopRequireDefault(_commonStd_modal);

	var _commonLine_router = __webpack_require__(320);

	var _commonLine_router2 = _interopRequireDefault(_commonLine_router);

	var _commonSearch_input = __webpack_require__(305);

	var _commonSearch_input2 = _interopRequireDefault(_commonSearch_input);

	var _commonSelect = __webpack_require__(302);

	var _commonSelect2 = _interopRequireDefault(_commonSelect);

	var _autocomplete = __webpack_require__(345);

	var _autocomplete2 = _interopRequireDefault(_autocomplete);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsStation_scope_manage = __webpack_require__(346);

	var _actionsStation_scope_manage2 = _interopRequireDefault(_actionsStation_scope_manage);

	var _utilsLazy_load = __webpack_require__(309);

	var _utilsLazy_load2 = _interopRequireDefault(_utilsLazy_load);

	var TopHeader = (function (_React$Component) {
	  _inherits(TopHeader, _React$Component);

	  function TopHeader() {
	    _classCallCheck(this, TopHeader);

	    _get(Object.getPrototypeOf(TopHeader.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(TopHeader, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'clearfix top-header' },
	        _react2['default'].createElement(_commonLine_router2['default'], {
	          routes: [{ name: '配送管理', link: '/sm/index' }, { name: '配送站管理', link: '' }] })
	      );
	    }
	  }]);

	  return TopHeader;
	})(_react2['default'].Component);

	var StationRow = (function (_React$Component2) {
	  _inherits(StationRow, _React$Component2);

	  function StationRow() {
	    _classCallCheck(this, StationRow);

	    _get(Object.getPrototypeOf(StationRow.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(StationRow, [{
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      var list = this.props.stationList;
	      var content = list.map(function (n) {
	        return _react2['default'].createElement(
	          'tr',
	          { key: n.id },
	          _react2['default'].createElement(
	            'td',
	            null,
	            _react2['default'].createElement('input', { type: 'checkbox' })
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.district_name
	          ),
	          _react2['default'].createElement(
	            'td',
	            { ref: 'station_name' },
	            n.station_name
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            n.address
	          ),
	          _react2['default'].createElement(
	            'td',
	            null,
	            _react2['default'].createElement(
	              'a',
	              { href: 'javascript:;', id: n.id, ref: 'edit', onClick: _this.stationScopeEdit.bind(_this) },
	              '编辑'
	            )
	          )
	        );
	      });

	      return _react2['default'].createElement(
	        'div',
	        { className: '' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel' },
	          _react2['default'].createElement(
	            'header',
	            { className: 'panel-heading' },
	            '配送站列表'
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'panel-body' },
	            _react2['default'].createElement(
	              'div',
	              { className: 'table-responsive' },
	              _react2['default'].createElement(
	                'table',
	                { className: 'table table-hover text-center' },
	                _react2['default'].createElement(
	                  'thead',
	                  null,
	                  _react2['default'].createElement(
	                    'tr',
	                    null,
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      _react2['default'].createElement('input', { type: 'checkbox' })
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '区域'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '名称'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '地址'
	                    ),
	                    _react2['default'].createElement(
	                      'th',
	                      null,
	                      '操作'
	                    )
	                  )
	                ),
	                _react2['default'].createElement(
	                  'tbody',
	                  null,
	                  content
	                )
	              )
	            ),
	            _react2['default'].createElement(_commonPagination2['default'], null)
	          )
	        ),
	        _react2['default'].createElement(MapModal, { ref: 'map', size: 'lg', title: '编辑配送站范围' })
	      );
	    }
	  }, {
	    key: 'onPageChange',
	    value: function onPageChange(page) {
	      this.search(page);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.search();
	    }
	  }, {
	    key: 'search',
	    value: function search(page) {
	      // page = typeof page == 'undefined' ? this.props.orders.page_no : page;
	      // this.props.getOrderList({page_no: page, page_size: this.state.page_size});
	    }
	  }, {
	    key: 'stationScopeEdit',
	    value: function stationScopeEdit() {
	      var getStationScope = this.props.getStationScope;

	      var station_id = $((0, _reactDom.findDOMNode)(this.refs.edit)).attr('id');
	      var station_name = $((0, _reactDom.findDOMNode)(this.refs.station_name)).text();

	      getStationScope(station_id, { 'station_name': station_name });
	      this.refs.map.show();
	    }
	  }]);

	  return StationRow;
	})(_react2['default'].Component);

	var FilterHeader = (function (_React$Component3) {
	  _inherits(FilterHeader, _React$Component3);

	  function FilterHeader(props) {
	    _classCallCheck(this, FilterHeader);

	    _get(Object.getPrototypeOf(FilterHeader.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      search_ing: false
	    };
	  }

	  _createClass(FilterHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var _props$fields = _props.fields;
	      var province_id = _props$fields.province_id;
	      var city_id = _props$fields.city_id;
	      var station_id = _props$fields.station_id;
	      var _props$area = _props.area;
	      var provinces = _props$area.provinces;
	      var cities = _props$area.cities;
	      var _props$station = _props.station;
	      var stations = _props$station.stations;
	      var station_list_info = _props$station.station_list_info;
	      var search_ing = this.state.search_ing;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'panel search' },
	        _react2['default'].createElement(
	          'div',
	          { className: 'panel-body form-inline' },
	          _react2['default'].createElement(_autocomplete2['default'], { focusHandler: this.focusHandler, placeholder: '请输入配送站名称', searchHandler: this.getStationByName, options: stations, className: 'pull-left' }),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({}, province_id, { onChange: this.onProvinceChange.bind(this, province_id.onChange), options: provinces, ref: 'province', 'default-text': '选择省份', className: 'space-left space-right' })),
	          _react2['default'].createElement(_commonSelect2['default'], _extends({ ref: 'city' }, city_id, { options: cities, 'default-text': '选择城市', className: 'space-right' })),
	          _react2['default'].createElement(
	            'button',
	            { disabled: search_ing, 'data-submitting': search_ing, onClick: this.search.bind(this), className: 'btn btn-theme btn-xs' },
	            '查找',
	            _react2['default'].createElement('i', { className: 'fa fa-search', style: { 'padding': '0 3px' } })
	          ),
	          _react2['default'].createElement(StationRow, _extends({ stationList: station_list_info }, this.props))
	        )
	      );
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      setTimeout((function () {
	        var _props2 = this.props;
	        var getProvinces = _props2.getProvinces;
	        var getAllDeliveryStations = _props2.getAllDeliveryStations;
	        var getStations = _props2.getStations;
	        var getStationByCity = _props2.getStationByCity;

	        getProvinces();
	        getStations();
	        (0, _utilsLazy_load2['default'])('noty');
	      }).bind(this), 0);
	    }
	  }, {
	    key: 'focusHandler',
	    value: function focusHandler() {
	      var $inp = $((0, _reactDom.findDOMNode)(this.refs.inp));
	      var data = this.props.station.stations;
	      var stations = [];
	      data.forEach(function (n) {
	        stations.push(n['text']);
	      });
	      (0, _utilsLazy_load2['default'])('autocomplete', function () {
	        console.log('asnfostganeoganrsdgnaren');
	        $inp.autocomplete({
	          source: stations
	        });
	      });
	    }
	  }, {
	    key: 'onProvinceChange',
	    value: function onProvinceChange(callback, e) {
	      var value = e.target.value;

	      this.props.provinceReset();
	      if (value != this.refs.province.props['default-value']) var $city = $((0, _reactDom.findDOMNode)(this.refs.city));
	      this.props.getCities(value).done(function () {
	        $city.trigger('focus'); //聚焦已使city_id的值更新
	      });
	      callback(e);
	    }
	  }, {
	    key: 'search',
	    value: function search() {
	      var _this2 = this;

	      var city_id = $((0, _reactDom.findDOMNode)(this.refs.city)).children('option:selected').attr('value');
	      this.setState({ search_ing: true });
	      this.props.getStationByCity(city_id).always(function () {
	        _this2.setState({ search_ing: false });
	      });
	    }
	  }]);

	  return FilterHeader;
	})(_react2['default'].Component);

	FilterHeader = (0, _reduxForm.reduxForm)({
	  form: 'station_scope_manage',
	  fields: ['province_id', 'city_id']
	})(FilterHeader);

	var stationScopeManagePannel = (function (_React$Component4) {
	  _inherits(stationScopeManagePannel, _React$Component4);

	  function stationScopeManagePannel() {
	    _classCallCheck(this, stationScopeManagePannel);

	    _get(Object.getPrototypeOf(stationScopeManagePannel.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(stationScopeManagePannel, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        null,
	        _react2['default'].createElement(TopHeader, null),
	        _react2['default'].createElement(FilterHeader, this.props)
	      );
	    }
	  }]);

	  return stationScopeManagePannel;
	})(_react2['default'].Component);

	function mapStateToProps(_ref) {
	  var stationScopeManage = _ref.stationScopeManage;

	  return stationScopeManage;
	}

	/* 这里可以使用 bindActionCreators , 也可以直接写在 connect 的第二个参数里面（一个对象) */
	function mapDispatchToProps(dispatch) {
	  return (0, _redux.bindActionCreators)(_extends({}, (0, _actionsArea2['default'])(), (0, _actionsStation_scope_manage2['default'])()), dispatch);
	}

	exports['default'] = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(stationScopeManagePannel);

	/***************   *******   *****************/
	/***************   子模态框   *****************/
	/***************   *******   *****************/

	var MapModal = (function (_React$Component5) {
	  _inherits(MapModal, _React$Component5);

	  function MapModal() {
	    _classCallCheck(this, MapModal);

	    _get(Object.getPrototypeOf(MapModal.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(MapModal, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        _commonStd_modal2['default'],
	        { ref: 'modal', title: '批量转换操作' },
	        _react2['default'].createElement(MapScope, null)
	      );
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.refs.modal.show();
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.refs.modal.hide();
	    }
	  }]);

	  return MapModal;
	})(_react2['default'].Component);

	;

	var MapScope = (function (_React$Component6) {
	  _inherits(MapScope, _React$Component6);

	  function MapScope() {
	    _classCallCheck(this, MapScope);

	    _get(Object.getPrototypeOf(MapScope.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(MapScope, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement('div', { ref: 'map' });
	    }
	  }]);

	  return MapScope;
	})(_react2['default'].Component);

	module.exports = exports['default'];

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _redux = __webpack_require__(223);

	var _reduxLogger = __webpack_require__(349);

	var _reduxLogger2 = _interopRequireDefault(_reduxLogger);

	var _reduxThunk = __webpack_require__(350);

	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

	var _reducersIndex = __webpack_require__(351);

	var _reducersIndex2 = _interopRequireDefault(_reducersIndex);

	if (true) {
	  //生产环境不需要logger
	  var createStoreWithMiddleware = (0, _redux.applyMiddleware)(_reduxThunk2['default'])(_redux.createStore);
	} else {
	  var createStoreWithMiddleware = (0, _redux.compose)((0, _redux.applyMiddleware)(_reduxThunk2['default'], (0, _reduxLogger2['default'])()), window.devToolsExtension ? window.devToolsExtension() : function (f) {
	    return f;
	  })(_redux.createStore);
	}

	var store = createStoreWithMiddleware(_reducersIndex2['default']);

	//考虑到有些reducer中将使用到store
	window.STORE = store;

	exports['default'] = store;
	module.exports = exports['default'];

/***/ },
/* 349 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var repeat = function repeat(str, times) {
	  return new Array(times + 1).join(str);
	};
	var pad = function pad(num, maxLength) {
	  return repeat("0", maxLength - num.toString().length) + num;
	};
	var formatTime = function formatTime(time) {
	  return " @ " + pad(time.getHours(), 2) + ":" + pad(time.getMinutes(), 2) + ":" + pad(time.getSeconds(), 2) + "." + pad(time.getMilliseconds(), 3);
	};

	// Use the new performance api to get better precision if available
	var timer = typeof performance !== "undefined" && typeof performance.now === "function" ? performance : Date;

	/**
	 * Creates logger with followed options
	 *
	 * @namespace
	 * @property {object} options - options for logger
	 * @property {string} options.level - console[level]
	 * @property {bool} options.duration - print duration of each action?
	 * @property {bool} options.timestamp - print timestamp with each action?
	 * @property {object} options.colors - custom colors
	 * @property {object} options.logger - implementation of the `console` API
	 * @property {boolean} options.collapsed - is group collapsed?
	 * @property {boolean} options.predicate - condition which resolves logger behavior
	 * @property {function} options.stateTransformer - transform state before print
	 * @property {function} options.actionTransformer - transform action before print
	 */

	function createLogger() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  return function (_ref) {
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        var _options$level = options.level;
	        var level = _options$level === undefined ? "log" : _options$level;
	        var _options$logger = options.logger;
	        var logger = _options$logger === undefined ? window.console : _options$logger;
	        var collapsed = options.collapsed;
	        var predicate = options.predicate;
	        var _options$duration = options.duration;
	        var duration = _options$duration === undefined ? false : _options$duration;
	        var _options$timestamp = options.timestamp;
	        var timestamp = _options$timestamp === undefined ? true : _options$timestamp;
	        var transformer = options.transformer;
	        var _options$stateTransfo = options.stateTransformer;
	        var // deprecated
	        stateTransformer = _options$stateTransfo === undefined ? function (state) {
	          return state;
	        } : _options$stateTransfo;
	        var _options$actionTransf = options.actionTransformer;
	        var actionTransformer = _options$actionTransf === undefined ? function (actn) {
	          return actn;
	        } : _options$actionTransf;
	        var _options$colors = options.colors;
	        var colors = _options$colors === undefined ? {
	          title: function title() {
	            return "#000000";
	          },
	          prevState: function prevState() {
	            return "#9E9E9E";
	          },
	          action: function action() {
	            return "#03A9F4";
	          },
	          nextState: function nextState() {
	            return "#4CAF50";
	          }
	        } : _options$colors;

	        // exit if console undefined

	        if (typeof logger === "undefined") {
	          return next(action);
	        }

	        // exit early if predicate function returns false
	        if (typeof predicate === "function" && !predicate(getState, action)) {
	          return next(action);
	        }

	        if (transformer) {
	          console.error("Option 'transformer' is deprecated, use stateTransformer instead");
	        }

	        var started = timer.now();
	        var prevState = stateTransformer(getState());

	        var formattedAction = actionTransformer(action);
	        var returnedValue = next(action);

	        var took = timer.now() - started;
	        var nextState = stateTransformer(getState());

	        // message
	        var time = new Date();
	        var isCollapsed = typeof collapsed === "function" ? collapsed(getState, action) : collapsed;

	        var formattedTime = formatTime(time);
	        var titleCSS = colors.title ? "color: " + colors.title(formattedAction) + ";" : null;
	        var title = "action " + formattedAction.type + (timestamp ? formattedTime : "") + (duration ? " in " + took.toFixed(2) + " ms" : "");

	        // render
	        try {
	          if (isCollapsed) {
	            if (colors.title) logger.groupCollapsed("%c " + title, titleCSS);else logger.groupCollapsed(title);
	          } else {
	            if (colors.title) logger.group("%c " + title, titleCSS);else logger.group(title);
	          }
	        } catch (e) {
	          logger.log(title);
	        }

	        if (colors.prevState) logger[level]("%c prev state", "color: " + colors.prevState(prevState) + "; font-weight: bold", prevState);else logger[level]("prev state", prevState);

	        if (colors.action) logger[level]("%c action", "color: " + colors.action(formattedAction) + "; font-weight: bold", formattedAction);else logger[level]("action", formattedAction);

	        if (colors.nextState) logger[level]("%c next state", "color: " + colors.nextState(nextState) + "; font-weight: bold", nextState);else logger[level]("next state", nextState);

	        try {
	          logger.groupEnd();
	        } catch (e) {
	          logger.log("—— log end ——");
	        }

	        return returnedValue;
	      };
	    };
	  };
	}

	exports.default = createLogger;
	module.exports = exports['default'];

/***/ },
/* 350 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = thunkMiddleware;

	function thunkMiddleware(_ref) {
	  var dispatch = _ref.dispatch;
	  var getState = _ref.getState;

	  return function (next) {
	    return function (action) {
	      return typeof action === 'function' ? action(dispatch, getState) : next(action);
	    };
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _redux = __webpack_require__(223);

	var _login = __webpack_require__(352);

	var _login2 = _interopRequireDefault(_login);

	var _order_manage = __webpack_require__(353);

	var _order_manage2 = _interopRequireDefault(_order_manage);

	var _order_manage_form = __webpack_require__(358);

	var _order_manage_form2 = _interopRequireDefault(_order_manage_form);

	var _delivery_change = __webpack_require__(359);

	var _delivery_change2 = _interopRequireDefault(_delivery_change);

	var _delivery_manage = __webpack_require__(361);

	var _delivery_manage2 = _interopRequireDefault(_delivery_manage);

	var _distribute_manage = __webpack_require__(363);

	var _distribute_manage2 = _interopRequireDefault(_distribute_manage);

	var _delivery_print_review = __webpack_require__(364);

	var _delivery_print_review2 = _interopRequireDefault(_delivery_print_review);

	var _form = __webpack_require__(324);

	var _form2 = _interopRequireDefault(_form);

	var _station_manage = __webpack_require__(365);

	var _station_manage2 = _interopRequireDefault(_station_manage);

	var _station_scope_manage = __webpack_require__(366);

	var _station_scope_manage2 = _interopRequireDefault(_station_scope_manage);

	var _reduxSimpleRouter = __webpack_require__(355);

	var rootReducer = (0, _redux.combineReducers)({
	  login: _login2['default'],
	  orderManage: _order_manage2['default'],
	  orderManageForm: _order_manage_form2['default'],
	  deliveryChange: _delivery_change2['default'],
	  deliveryManage: _delivery_manage2['default'],
	  distributeManage: _distribute_manage2['default'],
	  deliveryPrintReview: _delivery_print_review2['default'],
	  form: _form2['default'],
	  routing: _reduxSimpleRouter.routeReducer,
	  stationManage: _station_manage2['default'],
	  stationScopeManage: _station_scope_manage2['default']
	});

	exports['default'] = rootReducer;
	module.exports = exports['default'];

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _redux = __webpack_require__(223);

	var _actionsLogin = __webpack_require__(233);

	var initial_state = {
	  login_ing: false,
	  validate: false, //好像已经没用了
	  error_msg: '',

	  username: '',
	  password: ''
	};

	function login(state, action) {
	  if (state === undefined) state = initial_state;

	  switch (action.type) {
	    case _actionsLogin.LOGIN_START:
	      return _extends({}, state, { login_ing: true });
	    case _actionsLogin.LOGIN_SUCCESS:
	      return _extends({}, state, { validate: true, login_ing: false });
	    case _actionsLogin.LOGIN_FAIL:
	      return _extends({}, state, { error_msg: action.msg, login_ing: false });
	    case _actionsLogin.USERNAME_CHANGE:
	      return _extends({}, state, { username: action.username });
	    case _actionsLogin.PASSWORD_CHANGE:
	      return _extends({}, state, { password: action.password });
	    case _actionsLogin.RESET_ERROR_MSG:
	      return _extends({}, state, { error_msg: '' });
	    default:
	      return state;
	  }
	}

	exports['default'] = login;
	module.exports = exports['default'];

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _utilsIndex = __webpack_require__(160);

	var _redux = __webpack_require__(223);

	var _actionsOrder_manage = __webpack_require__(291);

	var Actions = _interopRequireWildcard(_actionsOrder_manage);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var _actionsOrders = __webpack_require__(290);

	var _actionsAction_types = __webpack_require__(289);

	var _configAppConfig = __webpack_require__(157);

	var _reducersArea_select = __webpack_require__(354);

	var _reducersDelivery_stations = __webpack_require__(356);

	var _reducersDelivery_stations2 = _interopRequireDefault(_reducersDelivery_stations);

	var _reducersOrders = __webpack_require__(357);

	var filter_state = {
	  search_ing: false,
	  all_order_srcs: [],
	  all_order_status: (0, _utilsIndex.map)(_configAppConfig.order_status, function (_ref, id) {
	    var value = _ref.value;
	    return { id: id, text: value };
	  })
	};

	function filter(state, action) {
	  if (state === undefined) state = filter_state;

	  switch (action.type) {
	    case _actionsOrder_manage_form.GOT_ORDER_SRCS:
	      var l1 = [],
	          l2 = [];
	      var data = _utilsIndex.core.isArray(action.data) ? action.data : [];
	      //level最多为2级
	      data.forEach(function (n) {
	        n.text = n.name; //转换
	        if (n.level == 1) {
	          l1.push(n);
	        } else {
	          l2.push(n);
	        }
	      });
	      return _extends({}, state, { all_order_srcs: !l2.length ? [l1] : [l1, l2] });
	    default:
	      return state;
	  }
	}

	var main_state = {
	  submitting: false,

	  prepare_delivery_data_ok: false };
	//AlterDeliveryModal和AlterStationModal辅助数据是否已经获取完毕
	// delivery_stations: [],  //这个用于AlterDeliveryModal和AlterStationModal中
	function main(state, action) {
	  if (state === undefined) state = main_state;

	  switch (action.type) {
	    case Actions.CANCEL_ORDER:
	    case Actions.ORDER_EXCEPTION:
	    case Actions.ALTER_DELIVERY:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { submitting: false });
	      } else {
	        console.error('nali?');
	      }

	    case Actions.PREPARE_DELIVERY_DATA_OK:
	      return _extends({}, state, { prepare_delivery_data_ok: true });
	    case _actionsOrders.GET_ORDER_DETAIL_PRODUCTS:
	      return _extends({}, state, { prepare_delivery_data_ok: false }); //重新拉取订单详情时，先置否，等待拉取 prepare_delivery_data

	    default:
	      return state;
	  }
	}

	exports['default'] = (0, _redux.combineReducers)({
	  filter: filter,
	  area: (0, _reducersArea_select.area)(),
	  orders: _reducersOrders.orders,
	  operationRecord: _reducersOrders.operationRecord,
	  main: main,
	  alter_delivery_area: (0, _reducersArea_select.area)(_actionsAction_types.AreaActionTypes2),
	  delivery_stations: _reducersDelivery_stations2['default']
	});
	module.exports = exports['default'];

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.area = area;

	var _redux = __webpack_require__(223);

	var _actionsAction_types = __webpack_require__(289);

	var _reduxSimpleRouter = __webpack_require__(355);

	var _utilsIndex = __webpack_require__(160);

	var initial_state = {
	  provinces: [],
	  cities: [],
	  districts: [],
	  delivery_shops: []
	};

	function _t(data) {
	  return (0, _utilsIndex.map)(data, function (text, id) {
	    return { id: id, text: text };
	  });
	}

	function area() {
	  var Actions = arguments.length <= 0 || arguments[0] === undefined ? _actionsAction_types.AreaActionTypes1 : arguments[0];

	  return function area(state, action) {
	    if (state === undefined) state = initial_state;

	    switch (action.type) {
	      case _reduxSimpleRouter.UPDATE_PATH:
	        return initial_state;

	      case Actions.GOT_PROVINCES:
	        return _extends({}, state, { provinces: _t(action.data) });
	      case Actions.PROVINCE_RESET:
	        return _extends({}, state, { cities: [], districts: [], delivery_shops: [] });
	      case Actions.GOT_CITIES:
	        return _extends({}, state, { cities: _t(action.data) });
	      case Actions.CITY_RESET:
	        return _extends({}, state, { districts: [], delivery_shops: [] });
	      case Actions.GOT_DISTRICTS:
	        return _extends({}, state, { districts: _t(action.data) });
	      case Actions.GOT_DELIVERY_SHOPS:
	        return _extends({}, state, { delivery_shops: (0, _utilsIndex.map)(action.data, function (text) {
	            return { id: text, text: text };
	          }) });
	      case Actions.DISTRICT_RESET:
	        return _extends({}, state, { delivery_shops: [] });
	      default:
	        return state;
	    }
	  };
	}

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.routeReducer = exports.UPDATE_PATH = undefined;
	exports.pushPath = pushPath;
	exports.replacePath = replacePath;
	exports.syncReduxAndRouter = syncReduxAndRouter;

	var _deepEqual = __webpack_require__(173);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Constants

	var INIT_PATH = '@@router/INIT_PATH';
	var UPDATE_PATH = exports.UPDATE_PATH = '@@router/UPDATE_PATH';
	var SELECT_STATE = function SELECT_STATE(state) {
	  return state.routing;
	};

	// Action creators

	function initPath(path, state) {
	  return {
	    type: INIT_PATH,
	    payload: {
	      path: path,
	      state: state,
	      replace: false,
	      avoidRouterUpdate: true
	    }
	  };
	}

	function pushPath(path, state) {
	  var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  var _ref$avoidRouterUpdat = _ref.avoidRouterUpdate;
	  var avoidRouterUpdate = _ref$avoidRouterUpdat === undefined ? false : _ref$avoidRouterUpdat;

	  return {
	    type: UPDATE_PATH,
	    payload: {
	      path: path,
	      state: state,
	      replace: false,
	      avoidRouterUpdate: !!avoidRouterUpdate
	    }
	  };
	}

	function replacePath(path, state) {
	  var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  var _ref2$avoidRouterUpda = _ref2.avoidRouterUpdate;
	  var avoidRouterUpdate = _ref2$avoidRouterUpda === undefined ? false : _ref2$avoidRouterUpda;

	  return {
	    type: UPDATE_PATH,
	    payload: {
	      path: path,
	      state: state,
	      replace: true,
	      avoidRouterUpdate: !!avoidRouterUpdate
	    }
	  };
	}

	// Reducer

	var initialState = {
	  changeId: 1,
	  path: undefined,
	  state: undefined,
	  replace: false
	};

	function update() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
	  var _ref3 = arguments[1];
	  var type = _ref3.type;
	  var payload = _ref3.payload;

	  if (type === INIT_PATH || type === UPDATE_PATH) {
	    return _extends({}, state, {
	      path: payload.path,
	      changeId: state.changeId + (payload.avoidRouterUpdate ? 0 : 1),
	      state: payload.state,
	      replace: payload.replace
	    });
	  }
	  return state;
	}

	// Syncing

	function locationsAreEqual(a, b) {
	  return a != null && b != null && a.path === b.path && (0, _deepEqual2.default)(a.state, b.state);
	}

	function createPath(location) {
	  var pathname = location.pathname;
	  var search = location.search;
	  var hash = location.hash;

	  var result = pathname;
	  if (search) result += search;
	  if (hash) result += hash;
	  return result;
	}

	function syncReduxAndRouter(history, store) {
	  var selectRouterState = arguments.length <= 2 || arguments[2] === undefined ? SELECT_STATE : arguments[2];

	  var getRouterState = function getRouterState() {
	    return selectRouterState(store.getState());
	  };

	  // To properly handle store updates we need to track the last route.
	  // This route contains a `changeId` which is updated on every
	  // `pushPath` and `replacePath`. If this id changes we always
	  // trigger a history update. However, if the id does not change, we
	  // check if the location has changed, and if it is we trigger a
	  // history update. It's possible for this to happen when something
	  // reloads the entire app state such as redux devtools.
	  var lastRoute = undefined;

	  if (!getRouterState()) {
	    throw new Error('Cannot sync router: route state does not exist. Did you ' + 'install the routing reducer?');
	  }

	  var unsubscribeHistory = history.listen(function (location) {
	    var route = {
	      path: createPath(location),
	      state: location.state
	    };

	    if (!lastRoute) {
	      // `initialState` *should* represent the current location when
	      // the app loads, but we cannot get the current location when it
	      // is defined. What happens is `history.listen` is called
	      // immediately when it is registered, and it updates the app
	      // state with an UPDATE_PATH action. This causes problem when
	      // users are listening to UPDATE_PATH actions just for
	      // *changes*, and with redux devtools because "revert" will use
	      // `initialState` and it won't revert to the original URL.
	      // Instead, we specialize the first route notification and do
	      // different things based on it.
	      initialState = {
	        changeId: 1,
	        path: route.path,
	        state: route.state,
	        replace: false
	      };

	      // Also set `lastRoute` so that the store subscriber doesn't
	      // trigger an unnecessary `pushState` on load
	      lastRoute = initialState;

	      store.dispatch(initPath(route.path, route.state));
	    } else if (!locationsAreEqual(getRouterState(), route)) {
	      // The above check avoids dispatching an action if the store is
	      // already up-to-date
	      var method = location.action === 'REPLACE' ? replacePath : pushPath;
	      store.dispatch(method(route.path, route.state, { avoidRouterUpdate: true }));
	    }
	  });

	  var unsubscribeStore = store.subscribe(function () {
	    var routing = getRouterState();

	    // Only trigger history update if this is a new change or the
	    // location has changed.
	    if (lastRoute.changeId !== routing.changeId || !locationsAreEqual(lastRoute, routing)) {

	      lastRoute = routing;
	      var method = routing.replace ? 'replaceState' : 'pushState';
	      history[method](routing.state, routing.path);
	    }
	  });

	  return function unsubscribe() {
	    unsubscribeHistory();
	    unsubscribeStore();
	  };
	}

	exports.routeReducer = update;


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _actionsOrder_manage_form = __webpack_require__(292);

	var FormActions = _interopRequireWildcard(_actionsOrder_manage_form);

	var _actionsOrder_manage = __webpack_require__(291);

	var _configAppConfig = __webpack_require__(157);

	var _utilsIndex = __webpack_require__(160);

	var initial_state = {
	  delivery_stations: [],
	  delivery_stations_backup: []
	};

	function delivery_stations(state, action) {
	  if (state === undefined) state = initial_state;

	  switch (action.type) {
	    case _actionsOrder_manage.RESET_DELIVERY_STATIONS:
	      return _extends({}, state, { delivery_stations: state.delivery_stations_backup });
	    case FormActions.GOT_DELIVERY_STATIONS:
	      var __delivery_stations = (0, _utilsIndex.map)(action.data, function (text, id) {
	        return { id: id, text: text };
	      });
	      return _extends({}, state, { delivery_stations: __delivery_stations, delivery_stations_backup: __delivery_stations });
	    case FormActions.AUTO_GOT_DELIVERY_STATIONS:
	      return (function () {
	        var d = action.data;
	        if (action.key == _configAppConfig.REQUEST.SUCCESS) {
	          return _extends({}, state, { delivery_stations: [{ id: d.delivery_id, text: d.delivery_name }] });
	        } else if (action.key == _configAppConfig.REQUEST.FAIL) {
	          return _extends({}, state, { delivery_stations: state.delivery_stations_backup });
	        } else {
	          return state;
	        }
	      })();
	    default:
	      return state;
	  }
	}

	exports['default'] = delivery_stations;
	module.exports = exports['default'];

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.orders = orders;
	exports.operationRecord = operationRecord;

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _actionsOrders = __webpack_require__(290);

	var OrderActions = _interopRequireWildcard(_actionsOrders);

	var _actionsDelivery_manage = __webpack_require__(337);

	var _actionsDelivery_distribute = __webpack_require__(341);

	var _reduxSimpleRouter = __webpack_require__(355);

	var orders_state = {
	  loading: true, //初始化加载，
	  refresh: false, //列表数据更新（用于当某些操作所引发的数据刷新）
	  page_no: 0,
	  total: 0,
	  list: [],
	  checked_order_ids: [],
	  checked_orders: [],
	  active_order_id: undefined,
	  check_order_info: null,
	  show_products_detail: false
	};

	function orders(state, action) {
	  if (state === undefined) state = orders_state;

	  switch (action.type) {

	    case _reduxSimpleRouter.UPDATE_PATH:
	      return _extends({}, orders_state);

	    case OrderActions.GET_ORDER_LIST_ING:
	      return _extends({}, orders_state, { refresh: true });
	    case OrderActions.GET_ORDER_LIST:
	      return _extends({}, orders_state, action.data, { loading: false, refresh: false });

	    case OrderActions.CHECK_ORDER:
	      return (function () {
	        var checked_order_ids = [],
	            checked_orders = [];
	        state.list.forEach(function (n) {
	          if (n.order_id == action.order_id) {
	            n.checked = action.checked;
	          }
	          if (n.checked) {
	            checked_order_ids.push(n.order_id);
	            checked_orders.push(n);
	          }
	        });
	        return _extends({}, state, { checked_order_ids: checked_order_ids, checked_orders: checked_orders });
	      })();

	    case OrderActions.CHECK_ALL_ORDERS:
	      return (function () {
	        var checked_order_ids = [],
	            checked_orders = [];
	        state.list.forEach(function (n) {
	          n.checked = action.checked;
	          if (action.checked) {
	            checked_order_ids.push(n.order_id);
	            checked_orders.push(n);
	          }
	        });
	        return _extends({}, state, { checked_order_ids: checked_order_ids, checked_orders: checked_orders });
	      })();

	    case OrderActions.ACTIVE_ORDER:
	      return _extends({}, state, { active_order_id: action.active_order_id, show_products_detail: false });

	    case OrderActions.SHOW_PRODUCTS_DETAIL:
	      return _extends({}, state, { show_products_detail: true });

	    case OrderActions.GET_ORDER_DETAIL_PRODUCTS:
	      return _extends({}, state, { check_order_info: action.data });

	    //特殊情况：送货单管理，配送单管理 -> 获取扫描搜索结果列表
	    case _actionsDelivery_manage.GET_DELIVERY_SCAN_LIST:
	    case _actionsDelivery_distribute.GET_DISTRIBUTE_SCAN_LIST:
	      return _extends({}, orders_state, { loading: false }); //重置

	    default:
	      return state;
	  }
	}

	var operation_record = {
	  page_no: 0,
	  total: 0,
	  list: []
	};

	function operationRecord(state, action) {
	  if (state === undefined) state = operation_record;

	  switch (action.type) {
	    case OrderActions.RESET_ORDER_OPT_RECORD:
	      return _extends({}, operation_record);
	    case OrderActions.GET_ORDER_OPT_RECORD:
	      return _extends({}, state, action.data);
	    default:
	      return state;
	  }
		}

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

	var _redux = __webpack_require__(223);

	var _area_select = __webpack_require__(354);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var FormActions = _interopRequireWildcard(_actionsOrder_manage_form);

	var _actionsOrder_products = __webpack_require__(326);

	var OrderProductsActions = _interopRequireWildcard(_actionsOrder_products);

	var _reduxSimpleRouter = __webpack_require__(355);

	var _actionsArea = __webpack_require__(288);

	var _actionsArea2 = _interopRequireDefault(_actionsArea);

	var _actionsForm = __webpack_require__(293);

	var _utilsIndex = __webpack_require__(160);

	var _reduxForm = __webpack_require__(242);

	var _configAppConfig = __webpack_require__(157);

	var _reducersDelivery_stations = __webpack_require__(356);

	var _reducersDelivery_stations2 = _interopRequireDefault(_reducersDelivery_stations);

	var _clone = __webpack_require__(295);

	var _clone2 = _interopRequireDefault(_clone);

	var _storesGetter = __webpack_require__(325);

	var initial_state = {
	  all_pay_status: (0, _utilsIndex.map)(_configAppConfig.pay_status, function (text, id) {
	    return { id: id, text: text };
	  }),
	  all_delivery_time: _configAppConfig.DELIVERY_TIME_MAP.map(function (n) {
	    return { id: n, text: n };
	  }),
	  all_order_srcs: [],
	  all_pay_modes: [],

	  save_ing: false,
	  save_success: true,
	  submit_ing: false,

	  //edit data from server
	  data: {}
	};

	function mainForm(state, action) {
	  if (state === undefined) state = initial_state;

	  var store = (0, _storesGetter.getGlobalStore)();
	  switch (action.type) {
	    case _reduxSimpleRouter.UPDATE_PATH:
	      return _extends({}, initial_state);
	    case FormActions.GOT_ORDER_SRCS:
	      var l1 = [],
	          l2 = [];
	      var order_src_data = _utilsIndex.core.isArray(action.data) ? action.data : [];
	      //level最多为2级
	      order_src_data.forEach(function (n) {
	        n.text = n.name; //转换
	        if (n.level == 1) {
	          l1.push(n);
	        } else {
	          l2.push(n);
	        }
	      });
	      return _extends({}, state, { all_order_srcs: !l2.length ? [l1] : [l1, l2] });

	    case FormActions.GOT_PAY_MODES:
	      return _extends({}, state, { all_pay_modes: (0, _utilsIndex.map)(action.data, function (text, id) {
	          return { id: id, text: text };
	        }) });

	    case FormActions.SAVE_ORDER_INFO_ING:
	      return _extends({}, state, { save_ing: true });
	    case FormActions.SAVE_ORDER_INFO_SUCCESS:
	      return _extends({}, state, { save_success: true, save_ing: false });
	    case FormActions.SAVE_ORDER_INFO_FAIL:
	      return _extends({}, state, { save_success: false, save_ing: false });

	    case FormActions.SUBMIT_ORDER_ING:
	      return _extends({}, state, { submit_ing: true });
	    case FormActions.SUBMIT_ORDER_COMPLETE:
	      return _extends({}, state, { submit_ing: true });

	    case FormActions.GOT_ORDER_BY_ID:
	    case FormActions.GOT_COPY_ORDER_BY_ID:
	      return (function () {
	        var data = action.data;

	        var tmp = data.delivery_time.split(' ');
	        data.delivery_date = tmp[0];
	        data.delivery_hours = tmp[1];
	        //门店自提
	        if (data.delivery_type == _configAppConfig.DELIVERY_TO_STORE) {
	          data.recipient_shop_address = data.recipient_address;
	          data.recipient_address = null;
	        }

	        //

	        var _AreaActions = (0, _actionsArea2['default'])();

	        var getCities = _AreaActions.getCities;
	        var getDistricts = _AreaActions.getDistricts;
	        var getDeliveryShops = _AreaActions.getDeliveryShops;

	        store.dispatch(getCities(data.province_id));
	        store.dispatch(getDistricts(data.city_id));
	        store.dispatch(getDeliveryShops(data.regionalism_id));

	        return _extends({}, state, { data: data });
	      })();

	    default:
	      return state;
	  }
	}

	//正在选择的商品
	var products_choosing_state = {
	  all_categories: [],
	  search_results: {
	    total: 0,
	    list: []
	  },
	  selected_list: [], //modal 里面的 选择列表
	  confirm_list: [] };
	//modal 里面确认后，主面板的已选产品列表
	function products_choosing(state, action) {
	  if (state === undefined) state = products_choosing_state;

	  var sku_id, new_selected_list;
	  var store = (0, _storesGetter.getGlobalStore)();

	  switch (action.type) {
	    case _reduxSimpleRouter.UPDATE_PATH:
	      return products_choosing_state;
	    case OrderProductsActions.GOT_CATEGORIES:
	      return _extends({}, state, { all_categories: action.data });
	    case OrderProductsActions.SEARCH_PRODUCTS:
	      //如果检索到已被选商品，那么则要标明已被勾选
	      state.selected_list.forEach(function (n) {
	        for (var i = 0, len = action.data.list.length; i < len; i++) {
	          for (var j = 0, jlen = action.data.list[i].skus.length; j < jlen; j++) {
	            if (action.data.list[i].skus[j].sku_id == n.sku_id) {
	              action.data.list[i].skus[j].checked = true;
	            }
	          }
	        }
	      });
	      return _extends({}, state, { search_results: action.data });
	    case OrderProductsActions.SELECT_PRODUCT:
	      sku_id = action.data.sku_id;
	      if (state.selected_list.some(function (n) {
	        return n.sku_id == sku_id;
	      })) {
	        return state;
	      }
	      /*****  这个地方已突变，应该使用 immutablejs *****/
	      state.search_results.list.forEach(function (n) {
	        n.skus.forEach(function (m) {
	          if (m.sku_id == sku_id) {
	            m.checked = !m.checked;
	          }
	        });
	      });
	      action.data.num = 1; //默认1
	      return _extends({}, state, { selected_list: [].concat(_toConsumableArray(state.selected_list), [action.data]) });
	    case OrderProductsActions.DELETE_SELECTED_PRODUCT:
	      sku_id = action.data.sku_id;
	      state.search_results.list.forEach(function (n) {
	        n.skus.forEach(function (m) {
	          if (m.sku_id == sku_id) {
	            m.checked = false;
	          }
	        });
	      });
	      new_selected_list = [].concat(_toConsumableArray(state.selected_list)).filter(function (n) {
	        return n.sku_id != sku_id;
	      });
	      return _extends({}, state, { selected_list: new_selected_list });
	    case OrderProductsActions.CHANGE_PRODUCT_NUM:
	      var num = action.num;

	      sku_id = action.sku_id;
	      new_selected_list = (0, _clone2['default'])(state.selected_list);
	      new_selected_list.forEach(function (n) {
	        if (n.sku_id == sku_id) {
	          n.num = num;
	        }
	      });
	      return _extends({}, state, { selected_list: new_selected_list });

	    case OrderProductsActions.CONFIRM_ALL_SELECTED_PRODUCTS:
	      return (function () {
	        var base = {
	          discount_price: 0,
	          choco_board: '生日快乐', //巧克力牌
	          greeting_card: '', //祝福语
	          atlas: true, //产品图册
	          custom_name: '', //自定义名称
	          custom_desc: '' };
	        //自定义描述
	        var confirm_list = state.selected_list.map(function (n) {
	          var new_item = _extends({}, n, base);
	          new_item.discount_price = n.discount_price * n.num / 100 || 0;
	          new_item.amount = new_item.discount_price;
	          return new_item;
	        });
	        (0, _utilsIndex.delay)(function () {
	          return store.dispatch((0, _actionsForm.updateAddOrderForm)());
	        }); //商品数变化，通知add_order表单更新，支付方式、支付状态的默认值与所选商品数是紧密相关的
	        (0, _utilsIndex.delay)(function () {
	          return store.dispatch(OrderProductsActions.updateConfirmProductDiscountPrice());
	        }); //更新商品应收金额
	        return _extends({}, state, { confirm_list: confirm_list });
	      })();

	    case OrderProductsActions.CANCEL_ALL_SELECTED_PRODUCTS:
	      state.search_results.list.forEach(function (n) {
	        n.skus.forEach(function (m) {
	          m.checked = state.confirm_list.some(function (j) {
	            return m.sku_id == j.sku_id;
	          });
	        });
	      });
	      return _extends({}, state, { selected_list: [].concat(_toConsumableArray((0, _clone2['default'])(state.confirm_list))) });

	    case OrderProductsActions.CONFIRM_PRODUCT_ATTR_CHANGE:
	      sku_id = action.data.sku_id;
	      //突变
	      state.confirm_list.forEach(function (n) {
	        if (n.sku_id == sku_id) {
	          n[action.data.attr.name] = action.data.attr.value;
	        }
	      });
	      return _extends({}, state);

	    case OrderProductsActions.DELETE_CONFIRM_PRODUCT:
	      sku_id = action.data.sku_id;
	      // 突变
	      state.search_results.list.forEach(function (n) {
	        n.skus.forEach(function (m) {
	          if (m.sku_id == sku_id) {
	            m.checked = false;
	          }
	        });
	      });
	      var new_confirm_list = (0, _clone2['default'])(state.confirm_list);
	      new_confirm_list.splice(new_confirm_list.findIndex(function (n) {
	        return n.sku_id == sku_id;
	      }), 1);
	      new_selected_list = (0, _clone2['default'])(state.selected_list);
	      new_selected_list.splice(new_selected_list.findIndex(function (n) {
	        return n.sku_id == sku_id;
	      }), 1);
	      (0, _utilsIndex.delay)(function () {
	        return store.dispatch((0, _actionsForm.updateAddOrderForm)());
	      }); //商品数变化，通知add_order表单更新，支付方式、支付状态的默认值与所选商品数是紧密相关的
	      (0, _utilsIndex.delay)(function () {
	        return store.dispatch(OrderProductsActions.updateConfirmProductDiscountPrice());
	      }); //更新商品应收金额
	      return _extends({}, state, { confirm_list: new_confirm_list, selected_list: new_selected_list });

	    case OrderProductsActions.UPDATE_CONFIRM_PRODUCT_DISCOUNT_PRICE:
	      return (function () {
	        var global_state = store.getState();
	        var order = (0, _reduxForm.getValues)(global_state.form.add_order);
	        var pay_status = _configAppConfig.pay_status[order.pay_status];
	        var confirm_list = state.confirm_list;

	        if (pay_status == '已付款') {
	          confirm_list.forEach(function (n) {
	            n.amount = 0;
	          });
	        } else if (pay_status == '部分付款') {
	          confirm_list.forEach(function (n, i) {
	            n.amount = i == 0 ? 0 : n.discount_price;
	          });
	        } else {
	          confirm_list.forEach(function (n) {
	            n.amount = n.discount_price;
	          });
	        }
	        return _extends({}, state);
	      })();

	    case FormActions.GOT_ORDER_BY_ID:
	      return (function () {
	        var confirm_list = (0, _clone2['default'])(action.data.products);
	        confirm_list.forEach(function (n) {
	          n.discount_price /= 100;
	          n.amount /= 100;
	        });
	        return _extends({}, state, { confirm_list: confirm_list, selected_list: (0, _clone2['default'])(action.data.products) });
	      })();
	    default:
	      return state;
	  }
	}

	var history_orders_state = {
	  page_no: 0,
	  total: 0,
	  list: [],
	  active_order_id: undefined,
	  check_order_info: null
	};
	function history_orders(state, action) {
	  if (state === undefined) state = history_orders_state;

	  switch (action.type) {
	    case FormActions.GET_HISTORY_ORDERS:
	      return _extends({}, state, action.data, { active_order_id: undefined, check_order_info: null });

	    case FormActions.CHECK_HISTORY_ORDER:
	      return _extends({}, state, { active_order_id: action.active_order_id });
	    case FormActions.GET_HISTORY_ORDER_DETAIL_PRODUCTS:
	      return _extends({}, state, { check_order_info: action.data });
	    default:
	      return state;
	  }
	}

	var orderAddReducer = (0, _redux.combineReducers)({
	  area: (0, _area_select.area)(),
	  mainForm: mainForm,
	  products: products_choosing,
	  history_orders: history_orders,
	  delivery_stations: _reducersDelivery_stations2['default']
	});

	exports['default'] = orderAddReducer;
	module.exports = exports['default'];

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _utilsIndex = __webpack_require__(160);

	var _redux = __webpack_require__(223);

	var _actionsDelivery_change = __webpack_require__(334);

	var ChangeActions = _interopRequireWildcard(_actionsDelivery_change);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var _reducersOrders = __webpack_require__(357);

	var _reducersOrder_support = __webpack_require__(360);

	var OrderSupportReducers = _interopRequireWildcard(_reducersOrder_support);

	var _reducersArea_select = __webpack_require__(354);

	var _configAppConfig = __webpack_require__(157);

	var filter_state = {
	  search_ing: false,
	  change_submitting: false,
	  delivery_stations: []
	};

	function filter(state, action) {
	  if (state === undefined) state = filter_state;

	  switch (action.type) {
	    case ChangeActions.ORDERS_EXCHANGE:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { change_submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { change_submitting: false });
	      } else {
	        console.error('nali?');
	      }
	    case _actionsOrder_manage_form.GOT_DELIVERY_STATIONS:
	      return _extends({}, state, { delivery_stations: (0, _utilsIndex.map)(action.data, function (text, id) {
	          return { id: id, text: text };
	        }) });
	    default:
	      return state;
	  }
	}

	var main_state = {
	  all_order_srcs: [],
	  all_pay_modes: []
	};
	function main(state, action) {
	  if (state === undefined) state = main_state;

	  switch (action.type) {
	    case ChangeActions.ORDERS_EXCHANGE:

	    default:
	      return state;
	  }
	}

	exports['default'] = (0, _redux.combineReducers)(_extends({
	  filter: filter,
	  area: (0, _reducersArea_select.area)(),
	  orders: _reducersOrders.orders,
	  operationRecord: _reducersOrders.operationRecord
	}, OrderSupportReducers));
	module.exports = exports['default'];

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.all_order_srcs = all_order_srcs;
	exports.all_pay_modes = all_pay_modes;

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _actionsOrder_support = __webpack_require__(300);

	var OrderSupportActions = _interopRequireWildcard(_actionsOrder_support);

	var initial_state = {
	  map: {}
	};

	function all_order_srcs(state, action) {
	  if (state === undefined) state = initial_state;

	  switch (action.type) {
	    case OrderSupportActions.GOT_ORDER_SRCS:
	      // let l1 = [], l2 = [];
	      // var order_src_data = core.isArray(action.data) ? action.data : [];
	      // //level最多为2级
	      // order_src_data.forEach(n => {
	      //   n.text = n.name;  //转换
	      //   if(n.level == 1){
	      //     l1.push(n);
	      //   }else{
	      //     l2.push(n);
	      //   }
	      // })
	      // return order_src_data;
	      var new_map = {};
	      action.data.forEach(function (n) {
	        new_map[n.id] = n.name;
	      });
	      return _extends({}, state, { map: new_map });
	    default:
	      return state;
	  }
	}

	function all_pay_modes(state, action) {
	  if (state === undefined) state = [];

	  switch (action.type) {
	    case OrderSupportActions.GOT_PAY_MODES:
	      // return map(action.data, (text, id) => ({id, text}));
	      return action.data;
	    default:
	      return state;
	  }
		}

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _redux = __webpack_require__(223);

	var _reducersOrders = __webpack_require__(357);

	var _reducersArea_select = __webpack_require__(354);

	var _reducersDeliveryman = __webpack_require__(362);

	var _actionsDelivery_manage = __webpack_require__(337);

	var Actions = _interopRequireWildcard(_actionsDelivery_manage);

	var _reducersOrder_support = __webpack_require__(360);

	var OrderSupportReducers = _interopRequireWildcard(_reducersOrder_support);

	var _actionsOrders = __webpack_require__(290);

	var _configAppConfig = __webpack_require__(157);

	var _reduxSimpleRouter = __webpack_require__(355);

	var filter_state = {
	  search_ing: false
	};

	function filter(state, action) {
	  if (state === undefined) state = filter_state;

	  switch (action.type) {
	    default:
	      return state;
	  }
	}

	var main_state = {
	  submitting: false, //多处提交状态共享, 因为不可能多出同时提交

	  scan: false, //为true时显示scan_list（不分页）
	  scan_list: [] };
	//扫描搜索列表
	function main(state, action) {
	  if (state === undefined) state = main_state;

	  switch (action.type) {

	    case _reduxSimpleRouter.UPDATE_PATH:
	      return _extends({}, main_state);

	    case Actions.APPLY_DELIVERYMAN:
	    case Actions.APPLY_PRINT:
	    case Actions.REPRINT_VALIDATE_CODE:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { submitting: false });
	      } else {
	        console.error('nali');
	      }

	    case Actions.GET_DELIVERY_SCAN_LIST:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { submitting: false, scan: true, scan_list: action.data.list });
	      } else {
	        console.error('nali');
	        return state;
	      }

	    case _actionsOrders.GET_ORDER_LIST:
	      return _extends({}, state, { scan: false, scan_list: [] });

	    default:
	      return state;
	  }
	}

	exports['default'] = (0, _redux.combineReducers)(_extends({
	  filter: filter,
	  orders: _reducersOrders.orders,
	  operationRecord: _reducersOrders.operationRecord,
	  deliveryman: _reducersDeliveryman.deliveryman,
	  main: main,
	  area: (0, _reducersArea_select.area)()
	}, OrderSupportReducers));
	module.exports = exports['default'];

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.deliveryman = deliveryman;

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _actionsDeliveryman = __webpack_require__(336);

	var Actions = _interopRequireWildcard(_actionsDeliveryman);

	var initial_state = {
	  list: [],
	  load_success: false
	};

	function deliveryman(state, action) {
	  if (state === undefined) state = initial_state;

	  switch (action.type) {

	    case Actions.GET_ALL_DELIVERYMAN:
	      return _extends({}, state, { list: action.data, load_success: true });

	    default:
	      return state;
	  }
		}

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _utilsIndex = __webpack_require__(160);

	var _redux = __webpack_require__(223);

	var _configAppConfig = __webpack_require__(157);

	var _reducersOrders = __webpack_require__(357);

	var _reducersDeliveryman = __webpack_require__(362);

	var _reducersArea_select = __webpack_require__(354);

	var _actionsOrder_manage_form = __webpack_require__(292);

	var _actionsOrders = __webpack_require__(290);

	var _actionsDelivery_distribute = __webpack_require__(341);

	var Actions = _interopRequireWildcard(_actionsDelivery_distribute);

	var _reduxSimpleRouter = __webpack_require__(355);

	var _reducersOrder_support = __webpack_require__(360);

	var OrderSupportReducers = _interopRequireWildcard(_reducersOrder_support);

	var filter_state = {
	  search_ing: false,
	  delivery_stations: [],
	  all_pay_modes: [],
	  all_order_status: (0, _utilsIndex.map)(_configAppConfig.order_status, function (v, k) {
	    return { id: k, text: v.value };
	  })
	};

	function filter(state, action) {
	  if (state === undefined) state = filter_state;

	  switch (action.type) {
	    case _actionsOrder_manage_form.GOT_DELIVERY_STATIONS:
	      return _extends({}, state, { delivery_stations: (0, _utilsIndex.map)(action.data, function (text, id) {
	          return { id: id, text: text };
	        }) });
	    case _actionsOrder_manage_form.GOT_PAY_MODES:
	      return _extends({}, state, { all_pay_modes: (0, _utilsIndex.map)(action.data, function (text, id) {
	          return { id: id, text: text };
	        }) });
	    default:
	      return state;
	  }
	}

	var main_state = {
	  submitting: false,

	  scan: false, //为true时显示scan_list（不分页）
	  scan_list: [] };
	//扫描搜索列表
	function main(state, action) {
	  if (state === undefined) state = main_state;

	  switch (action.type) {
	    case Actions.SIGN_ORDER:
	    case Actions.UNSIGN_ORDER:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { submitting: false });
	      } else {
	        console.error('nali?');
	      }

	    case Actions.GET_DISTRIBUTE_SCAN_LIST:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { submitting: false, scan: true, scan_list: action.data.list });
	      } else {
	        console.error('nali');
	        return state;
	      }

	    case _actionsOrders.GET_ORDER_LIST:
	      return _extends({}, state, { scan: false, scan_list: [] });

	    default:
	      return state;
	  }
	}

	exports['default'] = (0, _redux.combineReducers)(_extends({
	  filter: filter,
	  orders: _reducersOrders.orders,
	  operationRecord: _reducersOrders.operationRecord,
	  main: main,
	  area: (0, _reducersArea_select.area)(),
	  deliveryman: _reducersDeliveryman.deliveryman
	}, OrderSupportReducers));
	module.exports = exports['default'];

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _redux = __webpack_require__(223);

	var _configAppConfig = __webpack_require__(157);

	var _actionsDelivery_print_review = __webpack_require__(343);

	var Actions = _interopRequireWildcard(_actionsDelivery_print_review);

	var _utilsIndex = __webpack_require__(160);

	var filter_state = {
	  yes_or_no: _configAppConfig.YES_OR_NO,
	  all_review_status: (0, _utilsIndex.map)(_configAppConfig.PRINT_REVIEW_STATUS, function (text, id) {
	    return { id: id, text: text };
	  })
	};

	function filter(state, action) {
	  if (state === undefined) state = filter_state;

	  switch (action.type) {
	    default:
	      return state;
	  }
	}

	var main_state = {
	  loading: true,
	  refresh: false,
	  page_no: 0,
	  total: 0,
	  list: [],
	  submitting: false
	};
	function main(state, action) {
	  if (state === undefined) state = main_state;

	  switch (action.type) {

	    case Actions.GET_PRINT_REVIEW_LIST_ING:
	      return _extends({}, state, action.data, { refresh: true });
	    case Actions.GET_PRINT_REVIEW_LIST:
	      return _extends({}, state, action.data, { loading: false, refresh: false });

	    case Actions.REVIEW_PRINT_APPLY:
	      if (action.key == _configAppConfig.REQUEST.ING) {
	        return _extends({}, state, { submitting: true });
	      } else if (action.key == _configAppConfig.REQUEST.SUCCESS || action.key == _configAppConfig.REQUEST.FAIL) {
	        return _extends({}, state, { submitting: false });
	      } else {
	        console.error('nali?');
	      }
	    default:
	      return state;
	  }
	}

	exports['default'] = (0, _redux.combineReducers)({
	  filter: filter,
	  main: main
	});
	module.exports = exports['default'];

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _redux = __webpack_require__(223);

	var _utilsIndex = __webpack_require__(160);

	var _reducersArea_select = __webpack_require__(354);

	var _reducersStation_scope_manage = __webpack_require__(366);

	exports['default'] = (0, _redux.combineReducers)({
		area: (0, _reducersArea_select.area)(),
		station: _reducersStation_scope_manage.station
	});
	module.exports = exports['default'];

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.station = station;

	var _redux = __webpack_require__(223);

	var _utilsIndex = __webpack_require__(160);

	var _reducersArea_select = __webpack_require__(354);

	var _actionsStation_scope_manage = __webpack_require__(346);

	var initial_state = {
	  stations: [],
	  station_list_info: [],
	  station_coords: [],
	  new_station_coords: []
	};

	function _t(data) {
	  return (0, _utilsIndex.map)(data, function (text, id) {
	    return { id: id, text: text };
	  });
	}

	function station(state, action) {
	  if (state === undefined) state = initial_state;

	  switch (action.type) {
	    case _actionsStation_scope_manage.GOT_STATIONS:
	      return _extends({}, state, { stations: _t(action.data) });
	    case _actionsStation_scope_manage.GOT_STATIONS_BY_CITY:
	      return _extends({}, state, { station_list_info: action.data.pagination_result });
	    case _actionsStation_scope_manage.GOT_STATIONS_BY_DISTRICT:
	      return _extends({}, state, { station_list_info: action.data });
	    case _actionsStation_scope_manage.GOT_STATIONS_BY_NAME:
	      return _extends({}, state, { station_list_info: action.data });
	    case _actionsStation_scope_manage.GOT_STATIONS_SCOPE:
	      return _extends({}, state, { station_coords: action.data });
	    case _actionsStation_scope_manage.MODIFY_STATIONS_SCOPE:
	      return _extends({}, state, { new_station_coords: action.data });
	    default:
	      return state;
	  }
	}

	exports['default'] = (0, _redux.combineReducers)({
	  station: station,
	  area: (0, _reducersArea_select.area)()
	});

/***/ }
/******/ ]);
//# sourceMappingURL=app.js.map